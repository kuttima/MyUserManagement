id: AQuIP.Admin
language: CSharp
name:
  Default: AQuIP.Admin
qualifiedName:
  Default: AQuIP.Admin
type: Assembly
modifiers: {}
items:
- id: AQuIP.Admin
  commentId: N:AQuIP.Admin
  language: CSharp
  name:
    CSharp: AQuIP.Admin
    VB: AQuIP.Admin
  nameWithType:
    CSharp: AQuIP.Admin
    VB: AQuIP.Admin
  qualifiedName:
    CSharp: AQuIP.Admin
    VB: AQuIP.Admin
  type: Namespace
  assemblies:
  - AQuIP.Admin
  modifiers: {}
  items:
  - id: AQuIP.Admin.BundleConfig
    commentId: T:AQuIP.Admin.BundleConfig
    language: CSharp
    name:
      CSharp: BundleConfig
      VB: BundleConfig
    nameWithType:
      CSharp: BundleConfig
      VB: BundleConfig
    qualifiedName:
      CSharp: AQuIP.Admin.BundleConfig
      VB: AQuIP.Admin.BundleConfig
    type: Class
    assemblies:
    - AQuIP.Admin
    namespace: AQuIP.Admin
    source:
      remote:
        path: AQuIP.Admin/AQuIP.Admin/App_Start/BundleConfig.cs
        branch: master
        repo: https://github.com/kuttima/MyUserManagement.git
      id: BundleConfig
      path: ../AQuIP.Admin/AQuIP.Admin/App_Start/BundleConfig.cs
      startLine: 5
    syntax:
      content:
        CSharp: public class BundleConfig
        VB: Public Class BundleConfig
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AQuIP.Admin.BundleConfig.RegisterBundles(System.Web.Optimization.BundleCollection)
      commentId: M:AQuIP.Admin.BundleConfig.RegisterBundles(System.Web.Optimization.BundleCollection)
      language: CSharp
      name:
        CSharp: RegisterBundles(BundleCollection)
        VB: RegisterBundles(BundleCollection)
      nameWithType:
        CSharp: BundleConfig.RegisterBundles(BundleCollection)
        VB: BundleConfig.RegisterBundles(BundleCollection)
      qualifiedName:
        CSharp: AQuIP.Admin.BundleConfig.RegisterBundles(System.Web.Optimization.BundleCollection)
        VB: AQuIP.Admin.BundleConfig.RegisterBundles(System.Web.Optimization.BundleCollection)
      type: Method
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/App_Start/BundleConfig.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: RegisterBundles
        path: ../AQuIP.Admin/AQuIP.Admin/App_Start/BundleConfig.cs
        startLine: 8
      syntax:
        content:
          CSharp: public static void RegisterBundles(BundleCollection bundles)
          VB: Public Shared Sub RegisterBundles(bundles As BundleCollection)
        parameters:
        - id: bundles
          type: System.Web.Optimization.BundleCollection
      overload: AQuIP.Admin.BundleConfig.RegisterBundles*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: AQuIP.Admin.FilterConfig
    commentId: T:AQuIP.Admin.FilterConfig
    language: CSharp
    name:
      CSharp: FilterConfig
      VB: FilterConfig
    nameWithType:
      CSharp: FilterConfig
      VB: FilterConfig
    qualifiedName:
      CSharp: AQuIP.Admin.FilterConfig
      VB: AQuIP.Admin.FilterConfig
    type: Class
    assemblies:
    - AQuIP.Admin
    namespace: AQuIP.Admin
    source:
      remote:
        path: AQuIP.Admin/AQuIP.Admin/App_Start/FilterConfig.cs
        branch: master
        repo: https://github.com/kuttima/MyUserManagement.git
      id: FilterConfig
      path: ../AQuIP.Admin/AQuIP.Admin/App_Start/FilterConfig.cs
      startLine: 5
    syntax:
      content:
        CSharp: public class FilterConfig
        VB: Public Class FilterConfig
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AQuIP.Admin.FilterConfig.RegisterGlobalFilters(System.Web.Mvc.GlobalFilterCollection)
      commentId: M:AQuIP.Admin.FilterConfig.RegisterGlobalFilters(System.Web.Mvc.GlobalFilterCollection)
      language: CSharp
      name:
        CSharp: RegisterGlobalFilters(GlobalFilterCollection)
        VB: RegisterGlobalFilters(GlobalFilterCollection)
      nameWithType:
        CSharp: FilterConfig.RegisterGlobalFilters(GlobalFilterCollection)
        VB: FilterConfig.RegisterGlobalFilters(GlobalFilterCollection)
      qualifiedName:
        CSharp: AQuIP.Admin.FilterConfig.RegisterGlobalFilters(System.Web.Mvc.GlobalFilterCollection)
        VB: AQuIP.Admin.FilterConfig.RegisterGlobalFilters(System.Web.Mvc.GlobalFilterCollection)
      type: Method
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/App_Start/FilterConfig.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: RegisterGlobalFilters
        path: ../AQuIP.Admin/AQuIP.Admin/App_Start/FilterConfig.cs
        startLine: 7
      syntax:
        content:
          CSharp: public static void RegisterGlobalFilters(GlobalFilterCollection filters)
          VB: Public Shared Sub RegisterGlobalFilters(filters As GlobalFilterCollection)
        parameters:
        - id: filters
          type: System.Web.Mvc.GlobalFilterCollection
      overload: AQuIP.Admin.FilterConfig.RegisterGlobalFilters*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: AQuIP.Admin.RouteConfig
    commentId: T:AQuIP.Admin.RouteConfig
    language: CSharp
    name:
      CSharp: RouteConfig
      VB: RouteConfig
    nameWithType:
      CSharp: RouteConfig
      VB: RouteConfig
    qualifiedName:
      CSharp: AQuIP.Admin.RouteConfig
      VB: AQuIP.Admin.RouteConfig
    type: Class
    assemblies:
    - AQuIP.Admin
    namespace: AQuIP.Admin
    source:
      remote:
        path: AQuIP.Admin/AQuIP.Admin/App_Start/RouteConfig.cs
        branch: master
        repo: https://github.com/kuttima/MyUserManagement.git
      id: RouteConfig
      path: ../AQuIP.Admin/AQuIP.Admin/App_Start/RouteConfig.cs
      startLine: 9
    syntax:
      content:
        CSharp: public class RouteConfig
        VB: Public Class RouteConfig
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AQuIP.Admin.RouteConfig.RegisterRoutes(System.Web.Routing.RouteCollection)
      commentId: M:AQuIP.Admin.RouteConfig.RegisterRoutes(System.Web.Routing.RouteCollection)
      language: CSharp
      name:
        CSharp: RegisterRoutes(RouteCollection)
        VB: RegisterRoutes(RouteCollection)
      nameWithType:
        CSharp: RouteConfig.RegisterRoutes(RouteCollection)
        VB: RouteConfig.RegisterRoutes(RouteCollection)
      qualifiedName:
        CSharp: AQuIP.Admin.RouteConfig.RegisterRoutes(System.Web.Routing.RouteCollection)
        VB: AQuIP.Admin.RouteConfig.RegisterRoutes(System.Web.Routing.RouteCollection)
      type: Method
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/App_Start/RouteConfig.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: RegisterRoutes
        path: ../AQuIP.Admin/AQuIP.Admin/App_Start/RouteConfig.cs
        startLine: 11
      syntax:
        content:
          CSharp: public static void RegisterRoutes(RouteCollection routes)
          VB: Public Shared Sub RegisterRoutes(routes As RouteCollection)
        parameters:
        - id: routes
          type: System.Web.Routing.RouteCollection
      overload: AQuIP.Admin.RouteConfig.RegisterRoutes*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: AQuIP.Admin.MvcApplication
    commentId: T:AQuIP.Admin.MvcApplication
    language: CSharp
    name:
      CSharp: MvcApplication
      VB: MvcApplication
    nameWithType:
      CSharp: MvcApplication
      VB: MvcApplication
    qualifiedName:
      CSharp: AQuIP.Admin.MvcApplication
      VB: AQuIP.Admin.MvcApplication
    type: Class
    assemblies:
    - AQuIP.Admin
    namespace: AQuIP.Admin
    source:
      remote:
        path: AQuIP.Admin/AQuIP.Admin/Global.asax.cs
        branch: master
        repo: https://github.com/kuttima/MyUserManagement.git
      id: MvcApplication
      path: ../AQuIP.Admin/AQuIP.Admin/Global.asax.cs
      startLine: 12
    syntax:
      content:
        CSharp: 'public class MvcApplication : HttpApplication, IComponent, IDisposable, IHttpAsyncHandler, IHttpHandler, IRequestCompletedNotifier, ISyncContext'
        VB: >-
          Public Class MvcApplication

              Inherits HttpApplication

              Implements IComponent, IDisposable, IHttpAsyncHandler, IHttpHandler, IRequestCompletedNotifier, ISyncContext
    inheritance:
    - System.Object
    - System.Web.HttpApplication
    implements:
    - System.ComponentModel.IComponent
    - System.IDisposable
    - System.Web.IHttpAsyncHandler
    - System.Web.IHttpHandler
    inheritedMembers:
    - System.Web.HttpApplication.CompleteRequest
    - System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
    - System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
    - System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
    - System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
    - System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
    - System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
    - System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
    - System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
    - System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
    - System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
    - System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
    - System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
    - System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
    - System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
    - System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
    - System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
    - System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
    - System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
    - System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
    - System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
    - System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
    - System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
    - System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
    - System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
    - System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
    - System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
    - System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
    - System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
    - System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
    - System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
    - System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
    - System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
    - System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
    - System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
    - System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
    - System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
    - System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
    - System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
    - System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
    - System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
    - System.Web.HttpApplication.Init
    - System.Web.HttpApplication.Dispose
    - System.Web.HttpApplication.GetVaryByCustomString(System.Web.HttpContext,System.String)
    - System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)
    - System.Web.HttpApplication.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
    - System.Web.HttpApplication.System#Web#IHttpAsyncHandler#EndProcessRequest(System.IAsyncResult)
    - System.Web.HttpApplication.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)
    - System.Web.HttpApplication.RegisterModule(System.Type)
    - System.Web.HttpApplication.Context
    - System.Web.HttpApplication.Events
    - System.Web.HttpApplication.Request
    - System.Web.HttpApplication.Response
    - System.Web.HttpApplication.Session
    - System.Web.HttpApplication.Application
    - System.Web.HttpApplication.Server
    - System.Web.HttpApplication.User
    - System.Web.HttpApplication.Modules
    - System.Web.HttpApplication.Site
    - System.Web.HttpApplication.System#Web#IHttpHandler#IsReusable
    - System.Web.HttpApplication.Disposed
    - System.Web.HttpApplication.BeginRequest
    - System.Web.HttpApplication.AuthenticateRequest
    - System.Web.HttpApplication.PostAuthenticateRequest
    - System.Web.HttpApplication.AuthorizeRequest
    - System.Web.HttpApplication.PostAuthorizeRequest
    - System.Web.HttpApplication.ResolveRequestCache
    - System.Web.HttpApplication.PostResolveRequestCache
    - System.Web.HttpApplication.MapRequestHandler
    - System.Web.HttpApplication.PostMapRequestHandler
    - System.Web.HttpApplication.AcquireRequestState
    - System.Web.HttpApplication.PostAcquireRequestState
    - System.Web.HttpApplication.PreRequestHandlerExecute
    - System.Web.HttpApplication.PostRequestHandlerExecute
    - System.Web.HttpApplication.ReleaseRequestState
    - System.Web.HttpApplication.PostReleaseRequestState
    - System.Web.HttpApplication.UpdateRequestCache
    - System.Web.HttpApplication.PostUpdateRequestCache
    - System.Web.HttpApplication.LogRequest
    - System.Web.HttpApplication.PostLogRequest
    - System.Web.HttpApplication.EndRequest
    - System.Web.HttpApplication.Error
    - System.Web.HttpApplication.RequestCompleted
    - System.Web.HttpApplication.PreSendRequestHeaders
    - System.Web.HttpApplication.PreSendRequestContent
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AQuIP.Admin.MvcApplication.Application_Start
      commentId: M:AQuIP.Admin.MvcApplication.Application_Start
      language: CSharp
      name:
        CSharp: Application_Start()
        VB: Application_Start()
      nameWithType:
        CSharp: MvcApplication.Application_Start()
        VB: MvcApplication.Application_Start()
      qualifiedName:
        CSharp: AQuIP.Admin.MvcApplication.Application_Start()
        VB: AQuIP.Admin.MvcApplication.Application_Start()
      type: Method
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Global.asax.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: Application_Start
        path: ../AQuIP.Admin/AQuIP.Admin/Global.asax.cs
        startLine: 14
      syntax:
        content:
          CSharp: protected void Application_Start()
          VB: Protected Sub Application_Start
      overload: AQuIP.Admin.MvcApplication.Application_Start*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: AQuIP.Admin.MvcApplication.Application_Error(System.Object,System.EventArgs)
      commentId: M:AQuIP.Admin.MvcApplication.Application_Error(System.Object,System.EventArgs)
      language: CSharp
      name:
        CSharp: Application_Error(Object, EventArgs)
        VB: Application_Error(Object, EventArgs)
      nameWithType:
        CSharp: MvcApplication.Application_Error(Object, EventArgs)
        VB: MvcApplication.Application_Error(Object, EventArgs)
      qualifiedName:
        CSharp: AQuIP.Admin.MvcApplication.Application_Error(System.Object, System.EventArgs)
        VB: AQuIP.Admin.MvcApplication.Application_Error(System.Object, System.EventArgs)
      type: Method
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Global.asax.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: Application_Error
        path: ../AQuIP.Admin/AQuIP.Admin/Global.asax.cs
        startLine: 22
      syntax:
        content:
          CSharp: protected void Application_Error(object sender, EventArgs e)
          VB: Protected Sub Application_Error(sender As Object, e As EventArgs)
        parameters:
        - id: sender
          type: System.Object
        - id: e
          type: System.EventArgs
      overload: AQuIP.Admin.MvcApplication.Application_Error*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
- id: AQuIP.Admin.Controllers
  commentId: N:AQuIP.Admin.Controllers
  language: CSharp
  name:
    CSharp: AQuIP.Admin.Controllers
    VB: AQuIP.Admin.Controllers
  nameWithType:
    CSharp: AQuIP.Admin.Controllers
    VB: AQuIP.Admin.Controllers
  qualifiedName:
    CSharp: AQuIP.Admin.Controllers
    VB: AQuIP.Admin.Controllers
  type: Namespace
  assemblies:
  - AQuIP.Admin
  modifiers: {}
  items:
  - id: AQuIP.Admin.Controllers.ErrorController
    commentId: T:AQuIP.Admin.Controllers.ErrorController
    language: CSharp
    name:
      CSharp: ErrorController
      VB: ErrorController
    nameWithType:
      CSharp: ErrorController
      VB: ErrorController
    qualifiedName:
      CSharp: AQuIP.Admin.Controllers.ErrorController
      VB: AQuIP.Admin.Controllers.ErrorController
    type: Class
    assemblies:
    - AQuIP.Admin
    namespace: AQuIP.Admin.Controllers
    source:
      remote:
        path: AQuIP.Admin/AQuIP.Admin/Controllers/ErrorController.cs
        branch: master
        repo: https://github.com/kuttima/MyUserManagement.git
      id: ErrorController
      path: ../AQuIP.Admin/AQuIP.Admin/Controllers/ErrorController.cs
      startLine: 4
    syntax:
      content:
        CSharp: 'public class ErrorController : Controller, IActionFilter, IAuthenticationFilter, IAuthorizationFilter, IDisposable, IExceptionFilter, IResultFilter, IAsyncController, IController, IAsyncManagerContainer'
        VB: >-
          Public Class ErrorController

              Inherits Controller

              Implements IActionFilter, IAuthenticationFilter, IAuthorizationFilter, IDisposable, IExceptionFilter, IResultFilter, IAsyncController, IController, IAsyncManagerContainer
    inheritance:
    - System.Object
    - System.Web.Mvc.ControllerBase
    - System.Web.Mvc.Controller
    implements:
    - System.Web.Mvc.IActionFilter
    - System.Web.Mvc.Filters.IAuthenticationFilter
    - System.Web.Mvc.IAuthorizationFilter
    - System.IDisposable
    - System.Web.Mvc.IExceptionFilter
    - System.Web.Mvc.IResultFilter
    - System.Web.Mvc.Async.IAsyncController
    - System.Web.Mvc.IController
    - System.Web.Mvc.Async.IAsyncManagerContainer
    inheritedMembers:
    - System.Web.Mvc.Controller.Content(System.String)
    - System.Web.Mvc.Controller.Content(System.String,System.String)
    - System.Web.Mvc.Controller.Content(System.String,System.String,System.Text.Encoding)
    - System.Web.Mvc.Controller.CreateActionInvoker
    - System.Web.Mvc.Controller.CreateTempDataProvider
    - System.Web.Mvc.Controller.Dispose
    - System.Web.Mvc.Controller.Dispose(System.Boolean)
    - System.Web.Mvc.Controller.ExecuteCore
    - System.Web.Mvc.Controller.File(System.Byte[],System.String)
    - System.Web.Mvc.Controller.File(System.Byte[],System.String,System.String)
    - System.Web.Mvc.Controller.File(System.IO.Stream,System.String)
    - System.Web.Mvc.Controller.File(System.IO.Stream,System.String,System.String)
    - System.Web.Mvc.Controller.File(System.String,System.String)
    - System.Web.Mvc.Controller.File(System.String,System.String,System.String)
    - System.Web.Mvc.Controller.HandleUnknownAction(System.String)
    - System.Web.Mvc.Controller.HttpNotFound
    - System.Web.Mvc.Controller.HttpNotFound(System.String)
    - System.Web.Mvc.Controller.JavaScript(System.String)
    - System.Web.Mvc.Controller.Json(System.Object)
    - System.Web.Mvc.Controller.Json(System.Object,System.String)
    - System.Web.Mvc.Controller.Json(System.Object,System.String,System.Text.Encoding)
    - System.Web.Mvc.Controller.Json(System.Object,System.Web.Mvc.JsonRequestBehavior)
    - System.Web.Mvc.Controller.Json(System.Object,System.String,System.Web.Mvc.JsonRequestBehavior)
    - System.Web.Mvc.Controller.Json(System.Object,System.String,System.Text.Encoding,System.Web.Mvc.JsonRequestBehavior)
    - System.Web.Mvc.Controller.Initialize(System.Web.Routing.RequestContext)
    - System.Web.Mvc.Controller.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)
    - System.Web.Mvc.Controller.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)
    - System.Web.Mvc.Controller.OnAuthentication(System.Web.Mvc.Filters.AuthenticationContext)
    - System.Web.Mvc.Controller.OnAuthenticationChallenge(System.Web.Mvc.Filters.AuthenticationChallengeContext)
    - System.Web.Mvc.Controller.OnAuthorization(System.Web.Mvc.AuthorizationContext)
    - System.Web.Mvc.Controller.OnException(System.Web.Mvc.ExceptionContext)
    - System.Web.Mvc.Controller.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)
    - System.Web.Mvc.Controller.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)
    - System.Web.Mvc.Controller.PartialView
    - System.Web.Mvc.Controller.PartialView(System.Object)
    - System.Web.Mvc.Controller.PartialView(System.String)
    - System.Web.Mvc.Controller.PartialView(System.String,System.Object)
    - System.Web.Mvc.Controller.Redirect(System.String)
    - System.Web.Mvc.Controller.RedirectPermanent(System.String)
    - System.Web.Mvc.Controller.RedirectToAction(System.String)
    - System.Web.Mvc.Controller.RedirectToAction(System.String,System.Object)
    - System.Web.Mvc.Controller.RedirectToAction(System.String,System.Web.Routing.RouteValueDictionary)
    - System.Web.Mvc.Controller.RedirectToAction(System.String,System.String)
    - System.Web.Mvc.Controller.RedirectToAction(System.String,System.String,System.Object)
    - System.Web.Mvc.Controller.RedirectToAction(System.String,System.String,System.Web.Routing.RouteValueDictionary)
    - System.Web.Mvc.Controller.RedirectToActionPermanent(System.String)
    - System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.Object)
    - System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.Web.Routing.RouteValueDictionary)
    - System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String)
    - System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String,System.Object)
    - System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String,System.Web.Routing.RouteValueDictionary)
    - System.Web.Mvc.Controller.RedirectToRoute(System.Object)
    - System.Web.Mvc.Controller.RedirectToRoute(System.Web.Routing.RouteValueDictionary)
    - System.Web.Mvc.Controller.RedirectToRoute(System.String)
    - System.Web.Mvc.Controller.RedirectToRoute(System.String,System.Object)
    - System.Web.Mvc.Controller.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)
    - System.Web.Mvc.Controller.RedirectToRoutePermanent(System.Object)
    - System.Web.Mvc.Controller.RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary)
    - System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String)
    - System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String,System.Object)
    - System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)
    - System.Web.Mvc.Controller.TryUpdateModel``1({TModel})
    - System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.String)
    - System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.String[])
    - System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.String,System.String[])
    - System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.String,System.String[],System.String[])
    - System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.Web.Mvc.IValueProvider)
    - System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.String,System.Web.Mvc.IValueProvider)
    - System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.String[],System.Web.Mvc.IValueProvider)
    - System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.String,System.String[],System.Web.Mvc.IValueProvider)
    - System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.String,System.String[],System.String[],System.Web.Mvc.IValueProvider)
    - System.Web.Mvc.Controller.TryValidateModel(System.Object)
    - System.Web.Mvc.Controller.TryValidateModel(System.Object,System.String)
    - System.Web.Mvc.Controller.UpdateModel``1({TModel})
    - System.Web.Mvc.Controller.UpdateModel``1({TModel},System.String)
    - System.Web.Mvc.Controller.UpdateModel``1({TModel},System.String[])
    - System.Web.Mvc.Controller.UpdateModel``1({TModel},System.String,System.String[])
    - System.Web.Mvc.Controller.UpdateModel``1({TModel},System.String,System.String[],System.String[])
    - System.Web.Mvc.Controller.UpdateModel``1({TModel},System.Web.Mvc.IValueProvider)
    - System.Web.Mvc.Controller.UpdateModel``1({TModel},System.String,System.Web.Mvc.IValueProvider)
    - System.Web.Mvc.Controller.UpdateModel``1({TModel},System.String[],System.Web.Mvc.IValueProvider)
    - System.Web.Mvc.Controller.UpdateModel``1({TModel},System.String,System.String[],System.Web.Mvc.IValueProvider)
    - System.Web.Mvc.Controller.UpdateModel``1({TModel},System.String,System.String[],System.String[],System.Web.Mvc.IValueProvider)
    - System.Web.Mvc.Controller.ValidateModel(System.Object)
    - System.Web.Mvc.Controller.ValidateModel(System.Object,System.String)
    - System.Web.Mvc.Controller.View
    - System.Web.Mvc.Controller.View(System.Object)
    - System.Web.Mvc.Controller.View(System.String)
    - System.Web.Mvc.Controller.View(System.String,System.String)
    - System.Web.Mvc.Controller.View(System.String,System.Object)
    - System.Web.Mvc.Controller.View(System.String,System.String,System.Object)
    - System.Web.Mvc.Controller.View(System.Web.Mvc.IView)
    - System.Web.Mvc.Controller.View(System.Web.Mvc.IView,System.Object)
    - System.Web.Mvc.Controller.System#Web#Mvc#Async#IAsyncController#BeginExecute(System.Web.Routing.RequestContext,System.AsyncCallback,System.Object)
    - System.Web.Mvc.Controller.System#Web#Mvc#Async#IAsyncController#EndExecute(System.IAsyncResult)
    - System.Web.Mvc.Controller.BeginExecute(System.Web.Routing.RequestContext,System.AsyncCallback,System.Object)
    - System.Web.Mvc.Controller.BeginExecuteCore(System.AsyncCallback,System.Object)
    - System.Web.Mvc.Controller.EndExecute(System.IAsyncResult)
    - System.Web.Mvc.Controller.EndExecuteCore(System.IAsyncResult)
    - System.Web.Mvc.Controller.System#Web#Mvc#IActionFilter#OnActionExecuting(System.Web.Mvc.ActionExecutingContext)
    - System.Web.Mvc.Controller.System#Web#Mvc#IActionFilter#OnActionExecuted(System.Web.Mvc.ActionExecutedContext)
    - System.Web.Mvc.Controller.System#Web#Mvc#Filters#IAuthenticationFilter#OnAuthentication(System.Web.Mvc.Filters.AuthenticationContext)
    - System.Web.Mvc.Controller.System#Web#Mvc#Filters#IAuthenticationFilter#OnAuthenticationChallenge(System.Web.Mvc.Filters.AuthenticationChallengeContext)
    - System.Web.Mvc.Controller.System#Web#Mvc#IAuthorizationFilter#OnAuthorization(System.Web.Mvc.AuthorizationContext)
    - System.Web.Mvc.Controller.System#Web#Mvc#IExceptionFilter#OnException(System.Web.Mvc.ExceptionContext)
    - System.Web.Mvc.Controller.System#Web#Mvc#IResultFilter#OnResultExecuting(System.Web.Mvc.ResultExecutingContext)
    - System.Web.Mvc.Controller.System#Web#Mvc#IResultFilter#OnResultExecuted(System.Web.Mvc.ResultExecutedContext)
    - System.Web.Mvc.Controller.Resolver
    - System.Web.Mvc.Controller.AsyncManager
    - System.Web.Mvc.Controller.DisableAsyncSupport
    - System.Web.Mvc.Controller.ActionInvoker
    - System.Web.Mvc.Controller.Binders
    - System.Web.Mvc.Controller.HttpContext
    - System.Web.Mvc.Controller.ModelState
    - System.Web.Mvc.Controller.Profile
    - System.Web.Mvc.Controller.Request
    - System.Web.Mvc.Controller.Response
    - System.Web.Mvc.Controller.RouteData
    - System.Web.Mvc.Controller.Server
    - System.Web.Mvc.Controller.Session
    - System.Web.Mvc.Controller.TempDataProvider
    - System.Web.Mvc.Controller.Url
    - System.Web.Mvc.Controller.User
    - System.Web.Mvc.Controller.ViewEngineCollection
    - System.Web.Mvc.ControllerBase.Execute(System.Web.Routing.RequestContext)
    - System.Web.Mvc.ControllerBase.System#Web#Mvc#IController#Execute(System.Web.Routing.RequestContext)
    - System.Web.Mvc.ControllerBase.ControllerContext
    - System.Web.Mvc.ControllerBase.TempData
    - System.Web.Mvc.ControllerBase.ValidateRequest
    - System.Web.Mvc.ControllerBase.ValueProvider
    - System.Web.Mvc.ControllerBase.ViewBag
    - System.Web.Mvc.ControllerBase.ViewData
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AQuIP.Admin.Controllers.ErrorController.Index
      commentId: M:AQuIP.Admin.Controllers.ErrorController.Index
      language: CSharp
      name:
        CSharp: Index()
        VB: Index()
      nameWithType:
        CSharp: ErrorController.Index()
        VB: ErrorController.Index()
      qualifiedName:
        CSharp: AQuIP.Admin.Controllers.ErrorController.Index()
        VB: AQuIP.Admin.Controllers.ErrorController.Index()
      type: Method
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Controllers
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Controllers/ErrorController.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: Index
        path: ../AQuIP.Admin/AQuIP.Admin/Controllers/ErrorController.cs
        startLine: 7
      syntax:
        content:
          CSharp: public ActionResult Index()
          VB: Public Function Index As ActionResult
        return:
          type: System.Web.Mvc.ActionResult
      overload: AQuIP.Admin.Controllers.ErrorController.Index*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AQuIP.Admin.Controllers.ErrorController.NotFound
      commentId: M:AQuIP.Admin.Controllers.ErrorController.NotFound
      language: CSharp
      name:
        CSharp: NotFound()
        VB: NotFound()
      nameWithType:
        CSharp: ErrorController.NotFound()
        VB: ErrorController.NotFound()
      qualifiedName:
        CSharp: AQuIP.Admin.Controllers.ErrorController.NotFound()
        VB: AQuIP.Admin.Controllers.ErrorController.NotFound()
      type: Method
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Controllers
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Controllers/ErrorController.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: NotFound
        path: ../AQuIP.Admin/AQuIP.Admin/Controllers/ErrorController.cs
        startLine: 12
      syntax:
        content:
          CSharp: public ActionResult NotFound()
          VB: Public Function NotFound As ActionResult
        return:
          type: System.Web.Mvc.ActionResult
      overload: AQuIP.Admin.Controllers.ErrorController.NotFound*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: AQuIP.Admin.Controllers.HomeController
    commentId: T:AQuIP.Admin.Controllers.HomeController
    language: CSharp
    name:
      CSharp: HomeController
      VB: HomeController
    nameWithType:
      CSharp: HomeController
      VB: HomeController
    qualifiedName:
      CSharp: AQuIP.Admin.Controllers.HomeController
      VB: AQuIP.Admin.Controllers.HomeController
    type: Class
    assemblies:
    - AQuIP.Admin
    namespace: AQuIP.Admin.Controllers
    source:
      remote:
        path: AQuIP.Admin/AQuIP.Admin/Controllers/HomeController.cs
        branch: master
        repo: https://github.com/kuttima/MyUserManagement.git
      id: HomeController
      path: ../AQuIP.Admin/AQuIP.Admin/Controllers/HomeController.cs
      startLine: 9
    syntax:
      content:
        CSharp: 'public class HomeController : Controller, IActionFilter, IAuthenticationFilter, IAuthorizationFilter, IDisposable, IExceptionFilter, IResultFilter, IAsyncController, IController, IAsyncManagerContainer'
        VB: >-
          Public Class HomeController

              Inherits Controller

              Implements IActionFilter, IAuthenticationFilter, IAuthorizationFilter, IDisposable, IExceptionFilter, IResultFilter, IAsyncController, IController, IAsyncManagerContainer
    inheritance:
    - System.Object
    - System.Web.Mvc.ControllerBase
    - System.Web.Mvc.Controller
    implements:
    - System.Web.Mvc.IActionFilter
    - System.Web.Mvc.Filters.IAuthenticationFilter
    - System.Web.Mvc.IAuthorizationFilter
    - System.IDisposable
    - System.Web.Mvc.IExceptionFilter
    - System.Web.Mvc.IResultFilter
    - System.Web.Mvc.Async.IAsyncController
    - System.Web.Mvc.IController
    - System.Web.Mvc.Async.IAsyncManagerContainer
    inheritedMembers:
    - System.Web.Mvc.Controller.Content(System.String)
    - System.Web.Mvc.Controller.Content(System.String,System.String)
    - System.Web.Mvc.Controller.Content(System.String,System.String,System.Text.Encoding)
    - System.Web.Mvc.Controller.CreateActionInvoker
    - System.Web.Mvc.Controller.CreateTempDataProvider
    - System.Web.Mvc.Controller.Dispose
    - System.Web.Mvc.Controller.Dispose(System.Boolean)
    - System.Web.Mvc.Controller.ExecuteCore
    - System.Web.Mvc.Controller.File(System.Byte[],System.String)
    - System.Web.Mvc.Controller.File(System.Byte[],System.String,System.String)
    - System.Web.Mvc.Controller.File(System.IO.Stream,System.String)
    - System.Web.Mvc.Controller.File(System.IO.Stream,System.String,System.String)
    - System.Web.Mvc.Controller.File(System.String,System.String)
    - System.Web.Mvc.Controller.File(System.String,System.String,System.String)
    - System.Web.Mvc.Controller.HandleUnknownAction(System.String)
    - System.Web.Mvc.Controller.HttpNotFound
    - System.Web.Mvc.Controller.HttpNotFound(System.String)
    - System.Web.Mvc.Controller.JavaScript(System.String)
    - System.Web.Mvc.Controller.Json(System.Object)
    - System.Web.Mvc.Controller.Json(System.Object,System.String)
    - System.Web.Mvc.Controller.Json(System.Object,System.String,System.Text.Encoding)
    - System.Web.Mvc.Controller.Json(System.Object,System.Web.Mvc.JsonRequestBehavior)
    - System.Web.Mvc.Controller.Json(System.Object,System.String,System.Web.Mvc.JsonRequestBehavior)
    - System.Web.Mvc.Controller.Json(System.Object,System.String,System.Text.Encoding,System.Web.Mvc.JsonRequestBehavior)
    - System.Web.Mvc.Controller.Initialize(System.Web.Routing.RequestContext)
    - System.Web.Mvc.Controller.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)
    - System.Web.Mvc.Controller.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)
    - System.Web.Mvc.Controller.OnAuthentication(System.Web.Mvc.Filters.AuthenticationContext)
    - System.Web.Mvc.Controller.OnAuthenticationChallenge(System.Web.Mvc.Filters.AuthenticationChallengeContext)
    - System.Web.Mvc.Controller.OnAuthorization(System.Web.Mvc.AuthorizationContext)
    - System.Web.Mvc.Controller.OnException(System.Web.Mvc.ExceptionContext)
    - System.Web.Mvc.Controller.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)
    - System.Web.Mvc.Controller.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)
    - System.Web.Mvc.Controller.PartialView
    - System.Web.Mvc.Controller.PartialView(System.Object)
    - System.Web.Mvc.Controller.PartialView(System.String)
    - System.Web.Mvc.Controller.PartialView(System.String,System.Object)
    - System.Web.Mvc.Controller.Redirect(System.String)
    - System.Web.Mvc.Controller.RedirectPermanent(System.String)
    - System.Web.Mvc.Controller.RedirectToAction(System.String)
    - System.Web.Mvc.Controller.RedirectToAction(System.String,System.Object)
    - System.Web.Mvc.Controller.RedirectToAction(System.String,System.Web.Routing.RouteValueDictionary)
    - System.Web.Mvc.Controller.RedirectToAction(System.String,System.String)
    - System.Web.Mvc.Controller.RedirectToAction(System.String,System.String,System.Object)
    - System.Web.Mvc.Controller.RedirectToAction(System.String,System.String,System.Web.Routing.RouteValueDictionary)
    - System.Web.Mvc.Controller.RedirectToActionPermanent(System.String)
    - System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.Object)
    - System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.Web.Routing.RouteValueDictionary)
    - System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String)
    - System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String,System.Object)
    - System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String,System.Web.Routing.RouteValueDictionary)
    - System.Web.Mvc.Controller.RedirectToRoute(System.Object)
    - System.Web.Mvc.Controller.RedirectToRoute(System.Web.Routing.RouteValueDictionary)
    - System.Web.Mvc.Controller.RedirectToRoute(System.String)
    - System.Web.Mvc.Controller.RedirectToRoute(System.String,System.Object)
    - System.Web.Mvc.Controller.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)
    - System.Web.Mvc.Controller.RedirectToRoutePermanent(System.Object)
    - System.Web.Mvc.Controller.RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary)
    - System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String)
    - System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String,System.Object)
    - System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)
    - System.Web.Mvc.Controller.TryUpdateModel``1({TModel})
    - System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.String)
    - System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.String[])
    - System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.String,System.String[])
    - System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.String,System.String[],System.String[])
    - System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.Web.Mvc.IValueProvider)
    - System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.String,System.Web.Mvc.IValueProvider)
    - System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.String[],System.Web.Mvc.IValueProvider)
    - System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.String,System.String[],System.Web.Mvc.IValueProvider)
    - System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.String,System.String[],System.String[],System.Web.Mvc.IValueProvider)
    - System.Web.Mvc.Controller.TryValidateModel(System.Object)
    - System.Web.Mvc.Controller.TryValidateModel(System.Object,System.String)
    - System.Web.Mvc.Controller.UpdateModel``1({TModel})
    - System.Web.Mvc.Controller.UpdateModel``1({TModel},System.String)
    - System.Web.Mvc.Controller.UpdateModel``1({TModel},System.String[])
    - System.Web.Mvc.Controller.UpdateModel``1({TModel},System.String,System.String[])
    - System.Web.Mvc.Controller.UpdateModel``1({TModel},System.String,System.String[],System.String[])
    - System.Web.Mvc.Controller.UpdateModel``1({TModel},System.Web.Mvc.IValueProvider)
    - System.Web.Mvc.Controller.UpdateModel``1({TModel},System.String,System.Web.Mvc.IValueProvider)
    - System.Web.Mvc.Controller.UpdateModel``1({TModel},System.String[],System.Web.Mvc.IValueProvider)
    - System.Web.Mvc.Controller.UpdateModel``1({TModel},System.String,System.String[],System.Web.Mvc.IValueProvider)
    - System.Web.Mvc.Controller.UpdateModel``1({TModel},System.String,System.String[],System.String[],System.Web.Mvc.IValueProvider)
    - System.Web.Mvc.Controller.ValidateModel(System.Object)
    - System.Web.Mvc.Controller.ValidateModel(System.Object,System.String)
    - System.Web.Mvc.Controller.View
    - System.Web.Mvc.Controller.View(System.Object)
    - System.Web.Mvc.Controller.View(System.String)
    - System.Web.Mvc.Controller.View(System.String,System.String)
    - System.Web.Mvc.Controller.View(System.String,System.Object)
    - System.Web.Mvc.Controller.View(System.String,System.String,System.Object)
    - System.Web.Mvc.Controller.View(System.Web.Mvc.IView)
    - System.Web.Mvc.Controller.View(System.Web.Mvc.IView,System.Object)
    - System.Web.Mvc.Controller.System#Web#Mvc#Async#IAsyncController#BeginExecute(System.Web.Routing.RequestContext,System.AsyncCallback,System.Object)
    - System.Web.Mvc.Controller.System#Web#Mvc#Async#IAsyncController#EndExecute(System.IAsyncResult)
    - System.Web.Mvc.Controller.BeginExecute(System.Web.Routing.RequestContext,System.AsyncCallback,System.Object)
    - System.Web.Mvc.Controller.BeginExecuteCore(System.AsyncCallback,System.Object)
    - System.Web.Mvc.Controller.EndExecute(System.IAsyncResult)
    - System.Web.Mvc.Controller.EndExecuteCore(System.IAsyncResult)
    - System.Web.Mvc.Controller.System#Web#Mvc#IActionFilter#OnActionExecuting(System.Web.Mvc.ActionExecutingContext)
    - System.Web.Mvc.Controller.System#Web#Mvc#IActionFilter#OnActionExecuted(System.Web.Mvc.ActionExecutedContext)
    - System.Web.Mvc.Controller.System#Web#Mvc#Filters#IAuthenticationFilter#OnAuthentication(System.Web.Mvc.Filters.AuthenticationContext)
    - System.Web.Mvc.Controller.System#Web#Mvc#Filters#IAuthenticationFilter#OnAuthenticationChallenge(System.Web.Mvc.Filters.AuthenticationChallengeContext)
    - System.Web.Mvc.Controller.System#Web#Mvc#IAuthorizationFilter#OnAuthorization(System.Web.Mvc.AuthorizationContext)
    - System.Web.Mvc.Controller.System#Web#Mvc#IExceptionFilter#OnException(System.Web.Mvc.ExceptionContext)
    - System.Web.Mvc.Controller.System#Web#Mvc#IResultFilter#OnResultExecuting(System.Web.Mvc.ResultExecutingContext)
    - System.Web.Mvc.Controller.System#Web#Mvc#IResultFilter#OnResultExecuted(System.Web.Mvc.ResultExecutedContext)
    - System.Web.Mvc.Controller.Resolver
    - System.Web.Mvc.Controller.AsyncManager
    - System.Web.Mvc.Controller.DisableAsyncSupport
    - System.Web.Mvc.Controller.ActionInvoker
    - System.Web.Mvc.Controller.Binders
    - System.Web.Mvc.Controller.HttpContext
    - System.Web.Mvc.Controller.ModelState
    - System.Web.Mvc.Controller.Profile
    - System.Web.Mvc.Controller.Request
    - System.Web.Mvc.Controller.Response
    - System.Web.Mvc.Controller.RouteData
    - System.Web.Mvc.Controller.Server
    - System.Web.Mvc.Controller.Session
    - System.Web.Mvc.Controller.TempDataProvider
    - System.Web.Mvc.Controller.Url
    - System.Web.Mvc.Controller.User
    - System.Web.Mvc.Controller.ViewEngineCollection
    - System.Web.Mvc.ControllerBase.Execute(System.Web.Routing.RequestContext)
    - System.Web.Mvc.ControllerBase.System#Web#Mvc#IController#Execute(System.Web.Routing.RequestContext)
    - System.Web.Mvc.ControllerBase.ControllerContext
    - System.Web.Mvc.ControllerBase.TempData
    - System.Web.Mvc.ControllerBase.ValidateRequest
    - System.Web.Mvc.ControllerBase.ValueProvider
    - System.Web.Mvc.ControllerBase.ViewBag
    - System.Web.Mvc.ControllerBase.ViewData
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AQuIP.Admin.Controllers.HomeController.Index
      commentId: M:AQuIP.Admin.Controllers.HomeController.Index
      language: CSharp
      name:
        CSharp: Index()
        VB: Index()
      nameWithType:
        CSharp: HomeController.Index()
        VB: HomeController.Index()
      qualifiedName:
        CSharp: AQuIP.Admin.Controllers.HomeController.Index()
        VB: AQuIP.Admin.Controllers.HomeController.Index()
      type: Method
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Controllers
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Controllers/HomeController.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: Index
        path: ../AQuIP.Admin/AQuIP.Admin/Controllers/HomeController.cs
        startLine: 15
      syntax:
        content:
          CSharp: >-
            [AllowAnonymous]

            public ActionResult Index()
          VB: >-
            <AllowAnonymous>

            Public Function Index As ActionResult
        return:
          type: System.Web.Mvc.ActionResult
      overload: AQuIP.Admin.Controllers.HomeController.Index*
      attributes:
      - type: System.Web.Mvc.AllowAnonymousAttribute
        ctor: System.Web.Mvc.AllowAnonymousAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AQuIP.Admin.Controllers.HomeController.Index(AQuIP.Admin.Models.LoginViewModel)
      commentId: M:AQuIP.Admin.Controllers.HomeController.Index(AQuIP.Admin.Models.LoginViewModel)
      language: CSharp
      name:
        CSharp: Index(LoginViewModel)
        VB: Index(LoginViewModel)
      nameWithType:
        CSharp: HomeController.Index(LoginViewModel)
        VB: HomeController.Index(LoginViewModel)
      qualifiedName:
        CSharp: AQuIP.Admin.Controllers.HomeController.Index(AQuIP.Admin.Models.LoginViewModel)
        VB: AQuIP.Admin.Controllers.HomeController.Index(AQuIP.Admin.Models.LoginViewModel)
      type: Method
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Controllers
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Controllers/HomeController.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: Index
        path: ../AQuIP.Admin/AQuIP.Admin/Controllers/HomeController.cs
        startLine: 22
      syntax:
        content:
          CSharp: >-
            [HttpPost]

            [AllowAnonymous]

            public ActionResult Index(LoginViewModel user)
          VB: >-
            <HttpPost>

            <AllowAnonymous>

            Public Function Index(user As LoginViewModel) As ActionResult
        parameters:
        - id: user
          type: AQuIP.Admin.Models.LoginViewModel
        return:
          type: System.Web.Mvc.ActionResult
      overload: AQuIP.Admin.Controllers.HomeController.Index*
      attributes:
      - type: System.Web.Mvc.HttpPostAttribute
        ctor: System.Web.Mvc.HttpPostAttribute.#ctor
        arguments: []
      - type: System.Web.Mvc.AllowAnonymousAttribute
        ctor: System.Web.Mvc.AllowAnonymousAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AQuIP.Admin.Controllers.HomeController.Logout
      commentId: M:AQuIP.Admin.Controllers.HomeController.Logout
      language: CSharp
      name:
        CSharp: Logout()
        VB: Logout()
      nameWithType:
        CSharp: HomeController.Logout()
        VB: HomeController.Logout()
      qualifiedName:
        CSharp: AQuIP.Admin.Controllers.HomeController.Logout()
        VB: AQuIP.Admin.Controllers.HomeController.Logout()
      type: Method
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Controllers
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Controllers/HomeController.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: Logout
        path: ../AQuIP.Admin/AQuIP.Admin/Controllers/HomeController.cs
        startLine: 42
      syntax:
        content:
          CSharp: >-
            [HttpPost]

            [Authorize]

            public ActionResult Logout()
          VB: >-
            <HttpPost>

            <Authorize>

            Public Function Logout As ActionResult
        return:
          type: System.Web.Mvc.ActionResult
      overload: AQuIP.Admin.Controllers.HomeController.Logout*
      attributes:
      - type: System.Web.Mvc.HttpPostAttribute
        ctor: System.Web.Mvc.HttpPostAttribute.#ctor
        arguments: []
      - type: System.Web.Mvc.AuthorizeAttribute
        ctor: System.Web.Mvc.AuthorizeAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: AQuIP.Admin.Controllers.UserController
    commentId: T:AQuIP.Admin.Controllers.UserController
    language: CSharp
    name:
      CSharp: UserController
      VB: UserController
    nameWithType:
      CSharp: UserController
      VB: UserController
    qualifiedName:
      CSharp: AQuIP.Admin.Controllers.UserController
      VB: AQuIP.Admin.Controllers.UserController
    type: Class
    assemblies:
    - AQuIP.Admin
    namespace: AQuIP.Admin.Controllers
    source:
      remote:
        path: AQuIP.Admin/AQuIP.Admin/Controllers/UserController.cs
        branch: master
        repo: https://github.com/kuttima/MyUserManagement.git
      id: UserController
      path: ../AQuIP.Admin/AQuIP.Admin/Controllers/UserController.cs
      startLine: 12
    syntax:
      content:
        CSharp: 'public class UserController : Controller, IActionFilter, IAuthenticationFilter, IAuthorizationFilter, IDisposable, IExceptionFilter, IResultFilter, IAsyncController, IController, IAsyncManagerContainer'
        VB: >-
          Public Class UserController

              Inherits Controller

              Implements IActionFilter, IAuthenticationFilter, IAuthorizationFilter, IDisposable, IExceptionFilter, IResultFilter, IAsyncController, IController, IAsyncManagerContainer
    inheritance:
    - System.Object
    - System.Web.Mvc.ControllerBase
    - System.Web.Mvc.Controller
    implements:
    - System.Web.Mvc.IActionFilter
    - System.Web.Mvc.Filters.IAuthenticationFilter
    - System.Web.Mvc.IAuthorizationFilter
    - System.IDisposable
    - System.Web.Mvc.IExceptionFilter
    - System.Web.Mvc.IResultFilter
    - System.Web.Mvc.Async.IAsyncController
    - System.Web.Mvc.IController
    - System.Web.Mvc.Async.IAsyncManagerContainer
    inheritedMembers:
    - System.Web.Mvc.Controller.Content(System.String)
    - System.Web.Mvc.Controller.Content(System.String,System.String)
    - System.Web.Mvc.Controller.Content(System.String,System.String,System.Text.Encoding)
    - System.Web.Mvc.Controller.CreateActionInvoker
    - System.Web.Mvc.Controller.CreateTempDataProvider
    - System.Web.Mvc.Controller.Dispose
    - System.Web.Mvc.Controller.Dispose(System.Boolean)
    - System.Web.Mvc.Controller.ExecuteCore
    - System.Web.Mvc.Controller.File(System.Byte[],System.String)
    - System.Web.Mvc.Controller.File(System.Byte[],System.String,System.String)
    - System.Web.Mvc.Controller.File(System.IO.Stream,System.String)
    - System.Web.Mvc.Controller.File(System.IO.Stream,System.String,System.String)
    - System.Web.Mvc.Controller.File(System.String,System.String)
    - System.Web.Mvc.Controller.File(System.String,System.String,System.String)
    - System.Web.Mvc.Controller.HandleUnknownAction(System.String)
    - System.Web.Mvc.Controller.HttpNotFound
    - System.Web.Mvc.Controller.HttpNotFound(System.String)
    - System.Web.Mvc.Controller.JavaScript(System.String)
    - System.Web.Mvc.Controller.Json(System.Object)
    - System.Web.Mvc.Controller.Json(System.Object,System.String)
    - System.Web.Mvc.Controller.Json(System.Object,System.String,System.Text.Encoding)
    - System.Web.Mvc.Controller.Json(System.Object,System.Web.Mvc.JsonRequestBehavior)
    - System.Web.Mvc.Controller.Json(System.Object,System.String,System.Web.Mvc.JsonRequestBehavior)
    - System.Web.Mvc.Controller.Json(System.Object,System.String,System.Text.Encoding,System.Web.Mvc.JsonRequestBehavior)
    - System.Web.Mvc.Controller.Initialize(System.Web.Routing.RequestContext)
    - System.Web.Mvc.Controller.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)
    - System.Web.Mvc.Controller.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)
    - System.Web.Mvc.Controller.OnAuthentication(System.Web.Mvc.Filters.AuthenticationContext)
    - System.Web.Mvc.Controller.OnAuthenticationChallenge(System.Web.Mvc.Filters.AuthenticationChallengeContext)
    - System.Web.Mvc.Controller.OnAuthorization(System.Web.Mvc.AuthorizationContext)
    - System.Web.Mvc.Controller.OnException(System.Web.Mvc.ExceptionContext)
    - System.Web.Mvc.Controller.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)
    - System.Web.Mvc.Controller.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)
    - System.Web.Mvc.Controller.PartialView
    - System.Web.Mvc.Controller.PartialView(System.Object)
    - System.Web.Mvc.Controller.PartialView(System.String)
    - System.Web.Mvc.Controller.PartialView(System.String,System.Object)
    - System.Web.Mvc.Controller.Redirect(System.String)
    - System.Web.Mvc.Controller.RedirectPermanent(System.String)
    - System.Web.Mvc.Controller.RedirectToAction(System.String)
    - System.Web.Mvc.Controller.RedirectToAction(System.String,System.Object)
    - System.Web.Mvc.Controller.RedirectToAction(System.String,System.Web.Routing.RouteValueDictionary)
    - System.Web.Mvc.Controller.RedirectToAction(System.String,System.String)
    - System.Web.Mvc.Controller.RedirectToAction(System.String,System.String,System.Object)
    - System.Web.Mvc.Controller.RedirectToAction(System.String,System.String,System.Web.Routing.RouteValueDictionary)
    - System.Web.Mvc.Controller.RedirectToActionPermanent(System.String)
    - System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.Object)
    - System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.Web.Routing.RouteValueDictionary)
    - System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String)
    - System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String,System.Object)
    - System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String,System.Web.Routing.RouteValueDictionary)
    - System.Web.Mvc.Controller.RedirectToRoute(System.Object)
    - System.Web.Mvc.Controller.RedirectToRoute(System.Web.Routing.RouteValueDictionary)
    - System.Web.Mvc.Controller.RedirectToRoute(System.String)
    - System.Web.Mvc.Controller.RedirectToRoute(System.String,System.Object)
    - System.Web.Mvc.Controller.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)
    - System.Web.Mvc.Controller.RedirectToRoutePermanent(System.Object)
    - System.Web.Mvc.Controller.RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary)
    - System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String)
    - System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String,System.Object)
    - System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)
    - System.Web.Mvc.Controller.TryUpdateModel``1({TModel})
    - System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.String)
    - System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.String[])
    - System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.String,System.String[])
    - System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.String,System.String[],System.String[])
    - System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.Web.Mvc.IValueProvider)
    - System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.String,System.Web.Mvc.IValueProvider)
    - System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.String[],System.Web.Mvc.IValueProvider)
    - System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.String,System.String[],System.Web.Mvc.IValueProvider)
    - System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.String,System.String[],System.String[],System.Web.Mvc.IValueProvider)
    - System.Web.Mvc.Controller.TryValidateModel(System.Object)
    - System.Web.Mvc.Controller.TryValidateModel(System.Object,System.String)
    - System.Web.Mvc.Controller.UpdateModel``1({TModel})
    - System.Web.Mvc.Controller.UpdateModel``1({TModel},System.String)
    - System.Web.Mvc.Controller.UpdateModel``1({TModel},System.String[])
    - System.Web.Mvc.Controller.UpdateModel``1({TModel},System.String,System.String[])
    - System.Web.Mvc.Controller.UpdateModel``1({TModel},System.String,System.String[],System.String[])
    - System.Web.Mvc.Controller.UpdateModel``1({TModel},System.Web.Mvc.IValueProvider)
    - System.Web.Mvc.Controller.UpdateModel``1({TModel},System.String,System.Web.Mvc.IValueProvider)
    - System.Web.Mvc.Controller.UpdateModel``1({TModel},System.String[],System.Web.Mvc.IValueProvider)
    - System.Web.Mvc.Controller.UpdateModel``1({TModel},System.String,System.String[],System.Web.Mvc.IValueProvider)
    - System.Web.Mvc.Controller.UpdateModel``1({TModel},System.String,System.String[],System.String[],System.Web.Mvc.IValueProvider)
    - System.Web.Mvc.Controller.ValidateModel(System.Object)
    - System.Web.Mvc.Controller.ValidateModel(System.Object,System.String)
    - System.Web.Mvc.Controller.View
    - System.Web.Mvc.Controller.View(System.Object)
    - System.Web.Mvc.Controller.View(System.String)
    - System.Web.Mvc.Controller.View(System.String,System.String)
    - System.Web.Mvc.Controller.View(System.String,System.Object)
    - System.Web.Mvc.Controller.View(System.String,System.String,System.Object)
    - System.Web.Mvc.Controller.View(System.Web.Mvc.IView)
    - System.Web.Mvc.Controller.View(System.Web.Mvc.IView,System.Object)
    - System.Web.Mvc.Controller.System#Web#Mvc#Async#IAsyncController#BeginExecute(System.Web.Routing.RequestContext,System.AsyncCallback,System.Object)
    - System.Web.Mvc.Controller.System#Web#Mvc#Async#IAsyncController#EndExecute(System.IAsyncResult)
    - System.Web.Mvc.Controller.BeginExecute(System.Web.Routing.RequestContext,System.AsyncCallback,System.Object)
    - System.Web.Mvc.Controller.BeginExecuteCore(System.AsyncCallback,System.Object)
    - System.Web.Mvc.Controller.EndExecute(System.IAsyncResult)
    - System.Web.Mvc.Controller.EndExecuteCore(System.IAsyncResult)
    - System.Web.Mvc.Controller.System#Web#Mvc#IActionFilter#OnActionExecuting(System.Web.Mvc.ActionExecutingContext)
    - System.Web.Mvc.Controller.System#Web#Mvc#IActionFilter#OnActionExecuted(System.Web.Mvc.ActionExecutedContext)
    - System.Web.Mvc.Controller.System#Web#Mvc#Filters#IAuthenticationFilter#OnAuthentication(System.Web.Mvc.Filters.AuthenticationContext)
    - System.Web.Mvc.Controller.System#Web#Mvc#Filters#IAuthenticationFilter#OnAuthenticationChallenge(System.Web.Mvc.Filters.AuthenticationChallengeContext)
    - System.Web.Mvc.Controller.System#Web#Mvc#IAuthorizationFilter#OnAuthorization(System.Web.Mvc.AuthorizationContext)
    - System.Web.Mvc.Controller.System#Web#Mvc#IExceptionFilter#OnException(System.Web.Mvc.ExceptionContext)
    - System.Web.Mvc.Controller.System#Web#Mvc#IResultFilter#OnResultExecuting(System.Web.Mvc.ResultExecutingContext)
    - System.Web.Mvc.Controller.System#Web#Mvc#IResultFilter#OnResultExecuted(System.Web.Mvc.ResultExecutedContext)
    - System.Web.Mvc.Controller.Resolver
    - System.Web.Mvc.Controller.AsyncManager
    - System.Web.Mvc.Controller.DisableAsyncSupport
    - System.Web.Mvc.Controller.ActionInvoker
    - System.Web.Mvc.Controller.Binders
    - System.Web.Mvc.Controller.HttpContext
    - System.Web.Mvc.Controller.ModelState
    - System.Web.Mvc.Controller.Profile
    - System.Web.Mvc.Controller.Request
    - System.Web.Mvc.Controller.Response
    - System.Web.Mvc.Controller.RouteData
    - System.Web.Mvc.Controller.Server
    - System.Web.Mvc.Controller.Session
    - System.Web.Mvc.Controller.TempDataProvider
    - System.Web.Mvc.Controller.Url
    - System.Web.Mvc.Controller.User
    - System.Web.Mvc.Controller.ViewEngineCollection
    - System.Web.Mvc.ControllerBase.Execute(System.Web.Routing.RequestContext)
    - System.Web.Mvc.ControllerBase.System#Web#Mvc#IController#Execute(System.Web.Routing.RequestContext)
    - System.Web.Mvc.ControllerBase.ControllerContext
    - System.Web.Mvc.ControllerBase.TempData
    - System.Web.Mvc.ControllerBase.ValidateRequest
    - System.Web.Mvc.ControllerBase.ValueProvider
    - System.Web.Mvc.ControllerBase.ViewBag
    - System.Web.Mvc.ControllerBase.ViewData
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AQuIP.Admin.Controllers.UserController.Index(System.String,System.String,System.Int32,System.Int32)
      commentId: M:AQuIP.Admin.Controllers.UserController.Index(System.String,System.String,System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: Index(String, String, Int32, Int32)
        VB: Index(String, String, Int32, Int32)
      nameWithType:
        CSharp: UserController.Index(String, String, Int32, Int32)
        VB: UserController.Index(String, String, Int32, Int32)
      qualifiedName:
        CSharp: AQuIP.Admin.Controllers.UserController.Index(System.String, System.String, System.Int32, System.Int32)
        VB: AQuIP.Admin.Controllers.UserController.Index(System.String, System.String, System.Int32, System.Int32)
      type: Method
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Controllers
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Controllers/UserController.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: Index
        path: ../AQuIP.Admin/AQuIP.Admin/Controllers/UserController.cs
        startLine: 17
      syntax:
        content:
          CSharp: >-
            [Authorize]

            public ActionResult Index(string sortOrder, string searchQuery, int page = 1, int pageSize = 10)
          VB: >-
            <Authorize>

            Public Function Index(sortOrder As String, searchQuery As String, page As Integer = 1, pageSize As Integer = 10) As ActionResult
        parameters:
        - id: sortOrder
          type: System.String
        - id: searchQuery
          type: System.String
        - id: page
          type: System.Int32
        - id: pageSize
          type: System.Int32
        return:
          type: System.Web.Mvc.ActionResult
      overload: AQuIP.Admin.Controllers.UserController.Index*
      attributes:
      - type: System.Web.Mvc.AuthorizeAttribute
        ctor: System.Web.Mvc.AuthorizeAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AQuIP.Admin.Controllers.UserController.Details(System.Int32)
      commentId: M:AQuIP.Admin.Controllers.UserController.Details(System.Int32)
      language: CSharp
      name:
        CSharp: Details(Int32)
        VB: Details(Int32)
      nameWithType:
        CSharp: UserController.Details(Int32)
        VB: UserController.Details(Int32)
      qualifiedName:
        CSharp: AQuIP.Admin.Controllers.UserController.Details(System.Int32)
        VB: AQuIP.Admin.Controllers.UserController.Details(System.Int32)
      type: Method
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Controllers
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Controllers/UserController.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: Details
        path: ../AQuIP.Admin/AQuIP.Admin/Controllers/UserController.cs
        startLine: 51
      syntax:
        content:
          CSharp: >-
            [Authorize]

            public ActionResult Details(int id)
          VB: >-
            <Authorize>

            Public Function Details(id As Integer) As ActionResult
        parameters:
        - id: id
          type: System.Int32
        return:
          type: System.Web.Mvc.ActionResult
      overload: AQuIP.Admin.Controllers.UserController.Details*
      attributes:
      - type: System.Web.Mvc.AuthorizeAttribute
        ctor: System.Web.Mvc.AuthorizeAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AQuIP.Admin.Controllers.UserController.Create
      commentId: M:AQuIP.Admin.Controllers.UserController.Create
      language: CSharp
      name:
        CSharp: Create()
        VB: Create()
      nameWithType:
        CSharp: UserController.Create()
        VB: UserController.Create()
      qualifiedName:
        CSharp: AQuIP.Admin.Controllers.UserController.Create()
        VB: AQuIP.Admin.Controllers.UserController.Create()
      type: Method
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Controllers
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Controllers/UserController.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: Create
        path: ../AQuIP.Admin/AQuIP.Admin/Controllers/UserController.cs
        startLine: 61
      syntax:
        content:
          CSharp: >-
            [Authorize]

            public ActionResult Create()
          VB: >-
            <Authorize>

            Public Function Create As ActionResult
        return:
          type: System.Web.Mvc.ActionResult
      overload: AQuIP.Admin.Controllers.UserController.Create*
      attributes:
      - type: System.Web.Mvc.AuthorizeAttribute
        ctor: System.Web.Mvc.AuthorizeAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AQuIP.Admin.Controllers.UserController.Create(AQuIP.Admin.Models.CreateUserViewModel)
      commentId: M:AQuIP.Admin.Controllers.UserController.Create(AQuIP.Admin.Models.CreateUserViewModel)
      language: CSharp
      name:
        CSharp: Create(CreateUserViewModel)
        VB: Create(CreateUserViewModel)
      nameWithType:
        CSharp: UserController.Create(CreateUserViewModel)
        VB: UserController.Create(CreateUserViewModel)
      qualifiedName:
        CSharp: AQuIP.Admin.Controllers.UserController.Create(AQuIP.Admin.Models.CreateUserViewModel)
        VB: AQuIP.Admin.Controllers.UserController.Create(AQuIP.Admin.Models.CreateUserViewModel)
      type: Method
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Controllers
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Controllers/UserController.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: Create
        path: ../AQuIP.Admin/AQuIP.Admin/Controllers/UserController.cs
        startLine: 71
      syntax:
        content:
          CSharp: >-
            [HttpPost]

            public ActionResult Create(CreateUserViewModel user)
          VB: >-
            <HttpPost>

            Public Function Create(user As CreateUserViewModel) As ActionResult
        parameters:
        - id: user
          type: AQuIP.Admin.Models.CreateUserViewModel
        return:
          type: System.Web.Mvc.ActionResult
      overload: AQuIP.Admin.Controllers.UserController.Create*
      attributes:
      - type: System.Web.Mvc.HttpPostAttribute
        ctor: System.Web.Mvc.HttpPostAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AQuIP.Admin.Controllers.UserController.Edit(System.Int32)
      commentId: M:AQuIP.Admin.Controllers.UserController.Edit(System.Int32)
      language: CSharp
      name:
        CSharp: Edit(Int32)
        VB: Edit(Int32)
      nameWithType:
        CSharp: UserController.Edit(Int32)
        VB: UserController.Edit(Int32)
      qualifiedName:
        CSharp: AQuIP.Admin.Controllers.UserController.Edit(System.Int32)
        VB: AQuIP.Admin.Controllers.UserController.Edit(System.Int32)
      type: Method
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Controllers
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Controllers/UserController.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: Edit
        path: ../AQuIP.Admin/AQuIP.Admin/Controllers/UserController.cs
        startLine: 102
      syntax:
        content:
          CSharp: >-
            [Authorize]

            public ActionResult Edit(int id)
          VB: >-
            <Authorize>

            Public Function Edit(id As Integer) As ActionResult
        parameters:
        - id: id
          type: System.Int32
        return:
          type: System.Web.Mvc.ActionResult
      overload: AQuIP.Admin.Controllers.UserController.Edit*
      attributes:
      - type: System.Web.Mvc.AuthorizeAttribute
        ctor: System.Web.Mvc.AuthorizeAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AQuIP.Admin.Controllers.UserController.Edit(System.Int32,AQuIP.Admin.Models.UserAccount)
      commentId: M:AQuIP.Admin.Controllers.UserController.Edit(System.Int32,AQuIP.Admin.Models.UserAccount)
      language: CSharp
      name:
        CSharp: Edit(Int32, UserAccount)
        VB: Edit(Int32, UserAccount)
      nameWithType:
        CSharp: UserController.Edit(Int32, UserAccount)
        VB: UserController.Edit(Int32, UserAccount)
      qualifiedName:
        CSharp: AQuIP.Admin.Controllers.UserController.Edit(System.Int32, AQuIP.Admin.Models.UserAccount)
        VB: AQuIP.Admin.Controllers.UserController.Edit(System.Int32, AQuIP.Admin.Models.UserAccount)
      type: Method
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Controllers
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Controllers/UserController.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: Edit
        path: ../AQuIP.Admin/AQuIP.Admin/Controllers/UserController.cs
        startLine: 112
      syntax:
        content:
          CSharp: >-
            [HttpPost]

            public ActionResult Edit(int id, UserAccount user)
          VB: >-
            <HttpPost>

            Public Function Edit(id As Integer, user As UserAccount) As ActionResult
        parameters:
        - id: id
          type: System.Int32
        - id: user
          type: AQuIP.Admin.Models.UserAccount
        return:
          type: System.Web.Mvc.ActionResult
      overload: AQuIP.Admin.Controllers.UserController.Edit*
      attributes:
      - type: System.Web.Mvc.HttpPostAttribute
        ctor: System.Web.Mvc.HttpPostAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AQuIP.Admin.Controllers.UserController.Delete(System.Int32)
      commentId: M:AQuIP.Admin.Controllers.UserController.Delete(System.Int32)
      language: CSharp
      name:
        CSharp: Delete(Int32)
        VB: Delete(Int32)
      nameWithType:
        CSharp: UserController.Delete(Int32)
        VB: UserController.Delete(Int32)
      qualifiedName:
        CSharp: AQuIP.Admin.Controllers.UserController.Delete(System.Int32)
        VB: AQuIP.Admin.Controllers.UserController.Delete(System.Int32)
      type: Method
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Controllers
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Controllers/UserController.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: Delete
        path: ../AQuIP.Admin/AQuIP.Admin/Controllers/UserController.cs
        startLine: 130
      syntax:
        content:
          CSharp: >-
            [Authorize]

            public ActionResult Delete(int id)
          VB: >-
            <Authorize>

            Public Function Delete(id As Integer) As ActionResult
        parameters:
        - id: id
          type: System.Int32
        return:
          type: System.Web.Mvc.ActionResult
      overload: AQuIP.Admin.Controllers.UserController.Delete*
      attributes:
      - type: System.Web.Mvc.AuthorizeAttribute
        ctor: System.Web.Mvc.AuthorizeAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AQuIP.Admin.Controllers.UserController.Delete(System.Int32,System.Boolean)
      commentId: M:AQuIP.Admin.Controllers.UserController.Delete(System.Int32,System.Boolean)
      language: CSharp
      name:
        CSharp: Delete(Int32, Boolean)
        VB: Delete(Int32, Boolean)
      nameWithType:
        CSharp: UserController.Delete(Int32, Boolean)
        VB: UserController.Delete(Int32, Boolean)
      qualifiedName:
        CSharp: AQuIP.Admin.Controllers.UserController.Delete(System.Int32, System.Boolean)
        VB: AQuIP.Admin.Controllers.UserController.Delete(System.Int32, System.Boolean)
      type: Method
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Controllers
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Controllers/UserController.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: Delete
        path: ../AQuIP.Admin/AQuIP.Admin/Controllers/UserController.cs
        startLine: 139
      syntax:
        content:
          CSharp: >-
            [HttpPost]

            public ActionResult Delete(int id, bool delete = true)
          VB: >-
            <HttpPost>

            Public Function Delete(id As Integer, delete As Boolean = True) As ActionResult
        parameters:
        - id: id
          type: System.Int32
        - id: delete
          type: System.Boolean
        return:
          type: System.Web.Mvc.ActionResult
      overload: AQuIP.Admin.Controllers.UserController.Delete*
      attributes:
      - type: System.Web.Mvc.HttpPostAttribute
        ctor: System.Web.Mvc.HttpPostAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AQuIP.Admin.Controllers.UserController.ResetPassword
      commentId: M:AQuIP.Admin.Controllers.UserController.ResetPassword
      language: CSharp
      name:
        CSharp: ResetPassword()
        VB: ResetPassword()
      nameWithType:
        CSharp: UserController.ResetPassword()
        VB: UserController.ResetPassword()
      qualifiedName:
        CSharp: AQuIP.Admin.Controllers.UserController.ResetPassword()
        VB: AQuIP.Admin.Controllers.UserController.ResetPassword()
      type: Method
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Controllers
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Controllers/UserController.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: ResetPassword
        path: ../AQuIP.Admin/AQuIP.Admin/Controllers/UserController.cs
        startLine: 170
      syntax:
        content:
          CSharp: >-
            [Authorize]

            public ActionResult ResetPassword()
          VB: >-
            <Authorize>

            Public Function ResetPassword As ActionResult
        return:
          type: System.Web.Mvc.ActionResult
      overload: AQuIP.Admin.Controllers.UserController.ResetPassword*
      attributes:
      - type: System.Web.Mvc.AuthorizeAttribute
        ctor: System.Web.Mvc.AuthorizeAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AQuIP.Admin.Controllers.UserController.ResetPassword(AQuIP.Admin.Models.ResetPasswordViewModel)
      commentId: M:AQuIP.Admin.Controllers.UserController.ResetPassword(AQuIP.Admin.Models.ResetPasswordViewModel)
      language: CSharp
      name:
        CSharp: ResetPassword(ResetPasswordViewModel)
        VB: ResetPassword(ResetPasswordViewModel)
      nameWithType:
        CSharp: UserController.ResetPassword(ResetPasswordViewModel)
        VB: UserController.ResetPassword(ResetPasswordViewModel)
      qualifiedName:
        CSharp: AQuIP.Admin.Controllers.UserController.ResetPassword(AQuIP.Admin.Models.ResetPasswordViewModel)
        VB: AQuIP.Admin.Controllers.UserController.ResetPassword(AQuIP.Admin.Models.ResetPasswordViewModel)
      type: Method
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Controllers
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Controllers/UserController.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: ResetPassword
        path: ../AQuIP.Admin/AQuIP.Admin/Controllers/UserController.cs
        startLine: 177
      syntax:
        content:
          CSharp: >-
            [HttpPost]

            public ActionResult ResetPassword(ResetPasswordViewModel user)
          VB: >-
            <HttpPost>

            Public Function ResetPassword(user As ResetPasswordViewModel) As ActionResult
        parameters:
        - id: user
          type: AQuIP.Admin.Models.ResetPasswordViewModel
        return:
          type: System.Web.Mvc.ActionResult
      overload: AQuIP.Admin.Controllers.UserController.ResetPassword*
      attributes:
      - type: System.Web.Mvc.HttpPostAttribute
        ctor: System.Web.Mvc.HttpPostAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AQuIP.Admin.Controllers.UserController.ActivateDeactivate
      commentId: M:AQuIP.Admin.Controllers.UserController.ActivateDeactivate
      language: CSharp
      name:
        CSharp: ActivateDeactivate()
        VB: ActivateDeactivate()
      nameWithType:
        CSharp: UserController.ActivateDeactivate()
        VB: UserController.ActivateDeactivate()
      qualifiedName:
        CSharp: AQuIP.Admin.Controllers.UserController.ActivateDeactivate()
        VB: AQuIP.Admin.Controllers.UserController.ActivateDeactivate()
      type: Method
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Controllers
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Controllers/UserController.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: ActivateDeactivate
        path: ../AQuIP.Admin/AQuIP.Admin/Controllers/UserController.cs
        startLine: 210
      syntax:
        content:
          CSharp: >-
            [Authorize]

            public ActionResult ActivateDeactivate()
          VB: >-
            <Authorize>

            Public Function ActivateDeactivate As ActionResult
        return:
          type: System.Web.Mvc.ActionResult
      overload: AQuIP.Admin.Controllers.UserController.ActivateDeactivate*
      attributes:
      - type: System.Web.Mvc.AuthorizeAttribute
        ctor: System.Web.Mvc.AuthorizeAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AQuIP.Admin.Controllers.UserController.ActivateDeactivate(AQuIP.Admin.Models.ActivateDeactivateViewModel)
      commentId: M:AQuIP.Admin.Controllers.UserController.ActivateDeactivate(AQuIP.Admin.Models.ActivateDeactivateViewModel)
      language: CSharp
      name:
        CSharp: ActivateDeactivate(ActivateDeactivateViewModel)
        VB: ActivateDeactivate(ActivateDeactivateViewModel)
      nameWithType:
        CSharp: UserController.ActivateDeactivate(ActivateDeactivateViewModel)
        VB: UserController.ActivateDeactivate(ActivateDeactivateViewModel)
      qualifiedName:
        CSharp: AQuIP.Admin.Controllers.UserController.ActivateDeactivate(AQuIP.Admin.Models.ActivateDeactivateViewModel)
        VB: AQuIP.Admin.Controllers.UserController.ActivateDeactivate(AQuIP.Admin.Models.ActivateDeactivateViewModel)
      type: Method
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Controllers
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Controllers/UserController.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: ActivateDeactivate
        path: ../AQuIP.Admin/AQuIP.Admin/Controllers/UserController.cs
        startLine: 216
      syntax:
        content:
          CSharp: >-
            [HttpPost]

            public ActionResult ActivateDeactivate(ActivateDeactivateViewModel user)
          VB: >-
            <HttpPost>

            Public Function ActivateDeactivate(user As ActivateDeactivateViewModel) As ActionResult
        parameters:
        - id: user
          type: AQuIP.Admin.Models.ActivateDeactivateViewModel
        return:
          type: System.Web.Mvc.ActionResult
      overload: AQuIP.Admin.Controllers.UserController.ActivateDeactivate*
      attributes:
      - type: System.Web.Mvc.HttpPostAttribute
        ctor: System.Web.Mvc.HttpPostAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: AQuIP.Admin.Data
  commentId: N:AQuIP.Admin.Data
  language: CSharp
  name:
    CSharp: AQuIP.Admin.Data
    VB: AQuIP.Admin.Data
  nameWithType:
    CSharp: AQuIP.Admin.Data
    VB: AQuIP.Admin.Data
  qualifiedName:
    CSharp: AQuIP.Admin.Data
    VB: AQuIP.Admin.Data
  type: Namespace
  assemblies:
  - AQuIP.Admin
  modifiers: {}
  items:
  - id: AQuIP.Admin.Data.DapperUnitOfWork
    commentId: T:AQuIP.Admin.Data.DapperUnitOfWork
    language: CSharp
    name:
      CSharp: DapperUnitOfWork
      VB: DapperUnitOfWork
    nameWithType:
      CSharp: DapperUnitOfWork
      VB: DapperUnitOfWork
    qualifiedName:
      CSharp: AQuIP.Admin.Data.DapperUnitOfWork
      VB: AQuIP.Admin.Data.DapperUnitOfWork
    type: Class
    assemblies:
    - AQuIP.Admin
    namespace: AQuIP.Admin.Data
    source:
      remote:
        path: AQuIP.Admin/AQuIP.Admin/Data/DapperUnitOfWork.cs
        branch: master
        repo: https://github.com/kuttima/MyUserManagement.git
      id: DapperUnitOfWork
      path: ../AQuIP.Admin/AQuIP.Admin/Data/DapperUnitOfWork.cs
      startLine: 7
    syntax:
      content:
        CSharp: 'public class DapperUnitOfWork : IDisposable'
        VB: >-
          Public Class DapperUnitOfWork

              Implements IDisposable
    inheritance:
    - System.Object
    implements:
    - System.IDisposable
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AQuIP.Admin.Data.DapperUnitOfWork.#ctor(System.String)
      commentId: M:AQuIP.Admin.Data.DapperUnitOfWork.#ctor(System.String)
      language: CSharp
      name:
        CSharp: DapperUnitOfWork(String)
        VB: DapperUnitOfWork(String)
      nameWithType:
        CSharp: DapperUnitOfWork.DapperUnitOfWork(String)
        VB: DapperUnitOfWork.DapperUnitOfWork(String)
      qualifiedName:
        CSharp: AQuIP.Admin.Data.DapperUnitOfWork.DapperUnitOfWork(System.String)
        VB: AQuIP.Admin.Data.DapperUnitOfWork.DapperUnitOfWork(System.String)
      type: Constructor
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Data
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Data/DapperUnitOfWork.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: .ctor
        path: ../AQuIP.Admin/AQuIP.Admin/Data/DapperUnitOfWork.cs
        startLine: 15
      syntax:
        content:
          CSharp: public DapperUnitOfWork(string connectionString)
          VB: Public Sub New(connectionString As String)
        parameters:
        - id: connectionString
          type: System.String
      overload: AQuIP.Admin.Data.DapperUnitOfWork.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AQuIP.Admin.Data.DapperUnitOfWork.Commit
      commentId: M:AQuIP.Admin.Data.DapperUnitOfWork.Commit
      language: CSharp
      name:
        CSharp: Commit()
        VB: Commit()
      nameWithType:
        CSharp: DapperUnitOfWork.Commit()
        VB: DapperUnitOfWork.Commit()
      qualifiedName:
        CSharp: AQuIP.Admin.Data.DapperUnitOfWork.Commit()
        VB: AQuIP.Admin.Data.DapperUnitOfWork.Commit()
      type: Method
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Data
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Data/DapperUnitOfWork.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: Commit
        path: ../AQuIP.Admin/AQuIP.Admin/Data/DapperUnitOfWork.cs
        startLine: 38
      syntax:
        content:
          CSharp: public void Commit()
          VB: Public Sub Commit
      overload: AQuIP.Admin.Data.DapperUnitOfWork.Commit*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AQuIP.Admin.Data.DapperUnitOfWork.Dispose
      commentId: M:AQuIP.Admin.Data.DapperUnitOfWork.Dispose
      language: CSharp
      name:
        CSharp: Dispose()
        VB: Dispose()
      nameWithType:
        CSharp: DapperUnitOfWork.Dispose()
        VB: DapperUnitOfWork.Dispose()
      qualifiedName:
        CSharp: AQuIP.Admin.Data.DapperUnitOfWork.Dispose()
        VB: AQuIP.Admin.Data.DapperUnitOfWork.Dispose()
      type: Method
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Data
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Data/DapperUnitOfWork.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: Dispose
        path: ../AQuIP.Admin/AQuIP.Admin/Data/DapperUnitOfWork.cs
        startLine: 63
      syntax:
        content:
          CSharp: public void Dispose()
          VB: Public Sub Dispose
      overload: AQuIP.Admin.Data.DapperUnitOfWork.Dispose*
      implements:
      - System.IDisposable.Dispose
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: AQuIP.Admin.Data.Repositories
  commentId: N:AQuIP.Admin.Data.Repositories
  language: CSharp
  name:
    CSharp: AQuIP.Admin.Data.Repositories
    VB: AQuIP.Admin.Data.Repositories
  nameWithType:
    CSharp: AQuIP.Admin.Data.Repositories
    VB: AQuIP.Admin.Data.Repositories
  qualifiedName:
    CSharp: AQuIP.Admin.Data.Repositories
    VB: AQuIP.Admin.Data.Repositories
  type: Namespace
  assemblies:
  - AQuIP.Admin
  modifiers: {}
  items:
  - id: AQuIP.Admin.Data.Repositories.AccountRepository
    commentId: T:AQuIP.Admin.Data.Repositories.AccountRepository
    language: CSharp
    name:
      CSharp: AccountRepository
      VB: AccountRepository
    nameWithType:
      CSharp: AccountRepository
      VB: AccountRepository
    qualifiedName:
      CSharp: AQuIP.Admin.Data.Repositories.AccountRepository
      VB: AQuIP.Admin.Data.Repositories.AccountRepository
    type: Class
    assemblies:
    - AQuIP.Admin
    namespace: AQuIP.Admin.Data.Repositories
    source:
      remote:
        path: AQuIP.Admin/AQuIP.Admin/Data/Repositories/AccountRepository.cs
        branch: master
        repo: https://github.com/kuttima/MyUserManagement.git
      id: AccountRepository
      path: ../AQuIP.Admin/AQuIP.Admin/Data/Repositories/AccountRepository.cs
      startLine: 9
    syntax:
      content:
        CSharp: public class AccountRepository
        VB: Public Class AccountRepository
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AQuIP.Admin.Data.Repositories.AccountRepository.#ctor(AQuIP.Admin.Infrastructure.IUnitOfWork)
      commentId: M:AQuIP.Admin.Data.Repositories.AccountRepository.#ctor(AQuIP.Admin.Infrastructure.IUnitOfWork)
      language: CSharp
      name:
        CSharp: AccountRepository(IUnitOfWork)
        VB: AccountRepository(IUnitOfWork)
      nameWithType:
        CSharp: AccountRepository.AccountRepository(IUnitOfWork)
        VB: AccountRepository.AccountRepository(IUnitOfWork)
      qualifiedName:
        CSharp: AQuIP.Admin.Data.Repositories.AccountRepository.AccountRepository(AQuIP.Admin.Infrastructure.IUnitOfWork)
        VB: AQuIP.Admin.Data.Repositories.AccountRepository.AccountRepository(AQuIP.Admin.Infrastructure.IUnitOfWork)
      type: Constructor
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Data.Repositories
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Data/Repositories/AccountRepository.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: .ctor
        path: ../AQuIP.Admin/AQuIP.Admin/Data/Repositories/AccountRepository.cs
        startLine: 20
      syntax:
        content:
          CSharp: public AccountRepository(IUnitOfWork unitOfwork)
          VB: Public Sub New(unitOfwork As IUnitOfWork)
        parameters:
        - id: unitOfwork
          type: AQuIP.Admin.Infrastructure.IUnitOfWork
      overload: AQuIP.Admin.Data.Repositories.AccountRepository.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AQuIP.Admin.Data.Repositories.AccountRepository.GetUserForLogin(System.String,System.String)
      commentId: M:AQuIP.Admin.Data.Repositories.AccountRepository.GetUserForLogin(System.String,System.String)
      language: CSharp
      name:
        CSharp: GetUserForLogin(String, String)
        VB: GetUserForLogin(String, String)
      nameWithType:
        CSharp: AccountRepository.GetUserForLogin(String, String)
        VB: AccountRepository.GetUserForLogin(String, String)
      qualifiedName:
        CSharp: AQuIP.Admin.Data.Repositories.AccountRepository.GetUserForLogin(System.String, System.String)
        VB: AQuIP.Admin.Data.Repositories.AccountRepository.GetUserForLogin(System.String, System.String)
      type: Method
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Data.Repositories
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Data/Repositories/AccountRepository.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: GetUserForLogin
        path: ../AQuIP.Admin/AQuIP.Admin/Data/Repositories/AccountRepository.cs
        startLine: 25
      syntax:
        content:
          CSharp: public UserAccount GetUserForLogin(string userName, string password)
          VB: Public Function GetUserForLogin(userName As String, password As String) As UserAccount
        parameters:
        - id: userName
          type: System.String
        - id: password
          type: System.String
        return:
          type: AQuIP.Admin.Models.UserAccount
      overload: AQuIP.Admin.Data.Repositories.AccountRepository.GetUserForLogin*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: AQuIP.Admin.Data.Repositories.UserRepository
    commentId: T:AQuIP.Admin.Data.Repositories.UserRepository
    language: CSharp
    name:
      CSharp: UserRepository
      VB: UserRepository
    nameWithType:
      CSharp: UserRepository
      VB: UserRepository
    qualifiedName:
      CSharp: AQuIP.Admin.Data.Repositories.UserRepository
      VB: AQuIP.Admin.Data.Repositories.UserRepository
    type: Class
    assemblies:
    - AQuIP.Admin
    namespace: AQuIP.Admin.Data.Repositories
    source:
      remote:
        path: AQuIP.Admin/AQuIP.Admin/Data/Repositories/UserRepository.cs
        branch: master
        repo: https://github.com/kuttima/MyUserManagement.git
      id: UserRepository
      path: ../AQuIP.Admin/AQuIP.Admin/Data/Repositories/UserRepository.cs
      startLine: 10
    syntax:
      content:
        CSharp: public sealed class UserRepository
        VB: Public NotInheritable Class UserRepository
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - sealed
      - class
      VB:
      - Public
      - NotInheritable
      - Class
    items:
    - id: AQuIP.Admin.Data.Repositories.UserRepository.#ctor(AQuIP.Admin.Infrastructure.IUnitOfWork)
      commentId: M:AQuIP.Admin.Data.Repositories.UserRepository.#ctor(AQuIP.Admin.Infrastructure.IUnitOfWork)
      language: CSharp
      name:
        CSharp: UserRepository(IUnitOfWork)
        VB: UserRepository(IUnitOfWork)
      nameWithType:
        CSharp: UserRepository.UserRepository(IUnitOfWork)
        VB: UserRepository.UserRepository(IUnitOfWork)
      qualifiedName:
        CSharp: AQuIP.Admin.Data.Repositories.UserRepository.UserRepository(AQuIP.Admin.Infrastructure.IUnitOfWork)
        VB: AQuIP.Admin.Data.Repositories.UserRepository.UserRepository(AQuIP.Admin.Infrastructure.IUnitOfWork)
      type: Constructor
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Data.Repositories
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Data/Repositories/UserRepository.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: .ctor
        path: ../AQuIP.Admin/AQuIP.Admin/Data/Repositories/UserRepository.cs
        startLine: 15
      syntax:
        content:
          CSharp: public UserRepository(IUnitOfWork unitOfwork)
          VB: Public Sub New(unitOfwork As IUnitOfWork)
        parameters:
        - id: unitOfwork
          type: AQuIP.Admin.Infrastructure.IUnitOfWork
      overload: AQuIP.Admin.Data.Repositories.UserRepository.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AQuIP.Admin.Data.Repositories.UserRepository.FindAll
      commentId: M:AQuIP.Admin.Data.Repositories.UserRepository.FindAll
      language: CSharp
      name:
        CSharp: FindAll()
        VB: FindAll()
      nameWithType:
        CSharp: UserRepository.FindAll()
        VB: UserRepository.FindAll()
      qualifiedName:
        CSharp: AQuIP.Admin.Data.Repositories.UserRepository.FindAll()
        VB: AQuIP.Admin.Data.Repositories.UserRepository.FindAll()
      type: Method
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Data.Repositories
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Data/Repositories/UserRepository.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: FindAll
        path: ../AQuIP.Admin/AQuIP.Admin/Data/Repositories/UserRepository.cs
        startLine: 22
      syntax:
        content:
          CSharp: public List<UserAccount> FindAll()
          VB: Public Function FindAll As List(Of UserAccount)
        return:
          type: System.Collections.Generic.List{AQuIP.Admin.Models.UserAccount}
      overload: AQuIP.Admin.Data.Repositories.UserRepository.FindAll*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AQuIP.Admin.Data.Repositories.UserRepository.FindByID(System.Int32)
      commentId: M:AQuIP.Admin.Data.Repositories.UserRepository.FindByID(System.Int32)
      language: CSharp
      name:
        CSharp: FindByID(Int32)
        VB: FindByID(Int32)
      nameWithType:
        CSharp: UserRepository.FindByID(Int32)
        VB: UserRepository.FindByID(Int32)
      qualifiedName:
        CSharp: AQuIP.Admin.Data.Repositories.UserRepository.FindByID(System.Int32)
        VB: AQuIP.Admin.Data.Repositories.UserRepository.FindByID(System.Int32)
      type: Method
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Data.Repositories
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Data/Repositories/UserRepository.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: FindByID
        path: ../AQuIP.Admin/AQuIP.Admin/Data/Repositories/UserRepository.cs
        startLine: 30
      syntax:
        content:
          CSharp: public UserAccount FindByID(int id)
          VB: Public Function FindByID(id As Integer) As UserAccount
        parameters:
        - id: id
          type: System.Int32
        return:
          type: AQuIP.Admin.Models.UserAccount
      overload: AQuIP.Admin.Data.Repositories.UserRepository.FindByID*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AQuIP.Admin.Data.Repositories.UserRepository.Add(AQuIP.Admin.Models.CreateUserDTO)
      commentId: M:AQuIP.Admin.Data.Repositories.UserRepository.Add(AQuIP.Admin.Models.CreateUserDTO)
      language: CSharp
      name:
        CSharp: Add(CreateUserDTO)
        VB: Add(CreateUserDTO)
      nameWithType:
        CSharp: UserRepository.Add(CreateUserDTO)
        VB: UserRepository.Add(CreateUserDTO)
      qualifiedName:
        CSharp: AQuIP.Admin.Data.Repositories.UserRepository.Add(AQuIP.Admin.Models.CreateUserDTO)
        VB: AQuIP.Admin.Data.Repositories.UserRepository.Add(AQuIP.Admin.Models.CreateUserDTO)
      type: Method
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Data.Repositories
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Data/Repositories/UserRepository.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: Add
        path: ../AQuIP.Admin/AQuIP.Admin/Data/Repositories/UserRepository.cs
        startLine: 37
      syntax:
        content:
          CSharp: public void Add(CreateUserDTO model)
          VB: Public Sub Add(model As CreateUserDTO)
        parameters:
        - id: model
          type: AQuIP.Admin.Models.CreateUserDTO
      overload: AQuIP.Admin.Data.Repositories.UserRepository.Add*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AQuIP.Admin.Data.Repositories.UserRepository.AddAssetViewer(AQuIP.Admin.Models.CreateAssetViewerDTO)
      commentId: M:AQuIP.Admin.Data.Repositories.UserRepository.AddAssetViewer(AQuIP.Admin.Models.CreateAssetViewerDTO)
      language: CSharp
      name:
        CSharp: AddAssetViewer(CreateAssetViewerDTO)
        VB: AddAssetViewer(CreateAssetViewerDTO)
      nameWithType:
        CSharp: UserRepository.AddAssetViewer(CreateAssetViewerDTO)
        VB: UserRepository.AddAssetViewer(CreateAssetViewerDTO)
      qualifiedName:
        CSharp: AQuIP.Admin.Data.Repositories.UserRepository.AddAssetViewer(AQuIP.Admin.Models.CreateAssetViewerDTO)
        VB: AQuIP.Admin.Data.Repositories.UserRepository.AddAssetViewer(AQuIP.Admin.Models.CreateAssetViewerDTO)
      type: Method
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Data.Repositories
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Data/Repositories/UserRepository.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: AddAssetViewer
        path: ../AQuIP.Admin/AQuIP.Admin/Data/Repositories/UserRepository.cs
        startLine: 42
      syntax:
        content:
          CSharp: public void AddAssetViewer(CreateAssetViewerDTO model)
          VB: Public Sub AddAssetViewer(model As CreateAssetViewerDTO)
        parameters:
        - id: model
          type: AQuIP.Admin.Models.CreateAssetViewerDTO
      overload: AQuIP.Admin.Data.Repositories.UserRepository.AddAssetViewer*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AQuIP.Admin.Data.Repositories.UserRepository.UpdateUser(System.Int32,AQuIP.Admin.Models.UserAccount)
      commentId: M:AQuIP.Admin.Data.Repositories.UserRepository.UpdateUser(System.Int32,AQuIP.Admin.Models.UserAccount)
      language: CSharp
      name:
        CSharp: UpdateUser(Int32, UserAccount)
        VB: UpdateUser(Int32, UserAccount)
      nameWithType:
        CSharp: UserRepository.UpdateUser(Int32, UserAccount)
        VB: UserRepository.UpdateUser(Int32, UserAccount)
      qualifiedName:
        CSharp: AQuIP.Admin.Data.Repositories.UserRepository.UpdateUser(System.Int32, AQuIP.Admin.Models.UserAccount)
        VB: AQuIP.Admin.Data.Repositories.UserRepository.UpdateUser(System.Int32, AQuIP.Admin.Models.UserAccount)
      type: Method
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Data.Repositories
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Data/Repositories/UserRepository.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: UpdateUser
        path: ../AQuIP.Admin/AQuIP.Admin/Data/Repositories/UserRepository.cs
        startLine: 48
      syntax:
        content:
          CSharp: public void UpdateUser(int id, UserAccount model)
          VB: Public Sub UpdateUser(id As Integer, model As UserAccount)
        parameters:
        - id: id
          type: System.Int32
        - id: model
          type: AQuIP.Admin.Models.UserAccount
      overload: AQuIP.Admin.Data.Repositories.UserRepository.UpdateUser*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AQuIP.Admin.Data.Repositories.UserRepository.UpdateOrganization(System.String,System.String)
      commentId: M:AQuIP.Admin.Data.Repositories.UserRepository.UpdateOrganization(System.String,System.String)
      language: CSharp
      name:
        CSharp: UpdateOrganization(String, String)
        VB: UpdateOrganization(String, String)
      nameWithType:
        CSharp: UserRepository.UpdateOrganization(String, String)
        VB: UserRepository.UpdateOrganization(String, String)
      qualifiedName:
        CSharp: AQuIP.Admin.Data.Repositories.UserRepository.UpdateOrganization(System.String, System.String)
        VB: AQuIP.Admin.Data.Repositories.UserRepository.UpdateOrganization(System.String, System.String)
      type: Method
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Data.Repositories
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Data/Repositories/UserRepository.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: UpdateOrganization
        path: ../AQuIP.Admin/AQuIP.Admin/Data/Repositories/UserRepository.cs
        startLine: 55
      syntax:
        content:
          CSharp: public void UpdateOrganization(string userName, string organization)
          VB: Public Sub UpdateOrganization(userName As String, organization As String)
        parameters:
        - id: userName
          type: System.String
        - id: organization
          type: System.String
      overload: AQuIP.Admin.Data.Repositories.UserRepository.UpdateOrganization*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AQuIP.Admin.Data.Repositories.UserRepository.ResetPassword(AQuIP.Admin.Models.ResetPasswordViewModel)
      commentId: M:AQuIP.Admin.Data.Repositories.UserRepository.ResetPassword(AQuIP.Admin.Models.ResetPasswordViewModel)
      language: CSharp
      name:
        CSharp: ResetPassword(ResetPasswordViewModel)
        VB: ResetPassword(ResetPasswordViewModel)
      nameWithType:
        CSharp: UserRepository.ResetPassword(ResetPasswordViewModel)
        VB: UserRepository.ResetPassword(ResetPasswordViewModel)
      qualifiedName:
        CSharp: AQuIP.Admin.Data.Repositories.UserRepository.ResetPassword(AQuIP.Admin.Models.ResetPasswordViewModel)
        VB: AQuIP.Admin.Data.Repositories.UserRepository.ResetPassword(AQuIP.Admin.Models.ResetPasswordViewModel)
      type: Method
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Data.Repositories
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Data/Repositories/UserRepository.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: ResetPassword
        path: ../AQuIP.Admin/AQuIP.Admin/Data/Repositories/UserRepository.cs
        startLine: 61
      syntax:
        content:
          CSharp: public int ResetPassword(ResetPasswordViewModel model)
          VB: Public Function ResetPassword(model As ResetPasswordViewModel) As Integer
        parameters:
        - id: model
          type: AQuIP.Admin.Models.ResetPasswordViewModel
        return:
          type: System.Int32
      overload: AQuIP.Admin.Data.Repositories.UserRepository.ResetPassword*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AQuIP.Admin.Data.Repositories.UserRepository.ActivateUser(System.String)
      commentId: M:AQuIP.Admin.Data.Repositories.UserRepository.ActivateUser(System.String)
      language: CSharp
      name:
        CSharp: ActivateUser(String)
        VB: ActivateUser(String)
      nameWithType:
        CSharp: UserRepository.ActivateUser(String)
        VB: UserRepository.ActivateUser(String)
      qualifiedName:
        CSharp: AQuIP.Admin.Data.Repositories.UserRepository.ActivateUser(System.String)
        VB: AQuIP.Admin.Data.Repositories.UserRepository.ActivateUser(System.String)
      type: Method
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Data.Repositories
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Data/Repositories/UserRepository.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: ActivateUser
        path: ../AQuIP.Admin/AQuIP.Admin/Data/Repositories/UserRepository.cs
        startLine: 71
      syntax:
        content:
          CSharp: public int ActivateUser(string userName)
          VB: Public Function ActivateUser(userName As String) As Integer
        parameters:
        - id: userName
          type: System.String
        return:
          type: System.Int32
      overload: AQuIP.Admin.Data.Repositories.UserRepository.ActivateUser*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AQuIP.Admin.Data.Repositories.UserRepository.DeactivateUser(System.String)
      commentId: M:AQuIP.Admin.Data.Repositories.UserRepository.DeactivateUser(System.String)
      language: CSharp
      name:
        CSharp: DeactivateUser(String)
        VB: DeactivateUser(String)
      nameWithType:
        CSharp: UserRepository.DeactivateUser(String)
        VB: UserRepository.DeactivateUser(String)
      qualifiedName:
        CSharp: AQuIP.Admin.Data.Repositories.UserRepository.DeactivateUser(System.String)
        VB: AQuIP.Admin.Data.Repositories.UserRepository.DeactivateUser(System.String)
      type: Method
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Data.Repositories
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Data/Repositories/UserRepository.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: DeactivateUser
        path: ../AQuIP.Admin/AQuIP.Admin/Data/Repositories/UserRepository.cs
        startLine: 82
      syntax:
        content:
          CSharp: public int DeactivateUser(string userName)
          VB: Public Function DeactivateUser(userName As String) As Integer
        parameters:
        - id: userName
          type: System.String
        return:
          type: System.Int32
      overload: AQuIP.Admin.Data.Repositories.UserRepository.DeactivateUser*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AQuIP.Admin.Data.Repositories.UserRepository.DeleteUser(System.String)
      commentId: M:AQuIP.Admin.Data.Repositories.UserRepository.DeleteUser(System.String)
      language: CSharp
      name:
        CSharp: DeleteUser(String)
        VB: DeleteUser(String)
      nameWithType:
        CSharp: UserRepository.DeleteUser(String)
        VB: UserRepository.DeleteUser(String)
      qualifiedName:
        CSharp: AQuIP.Admin.Data.Repositories.UserRepository.DeleteUser(System.String)
        VB: AQuIP.Admin.Data.Repositories.UserRepository.DeleteUser(System.String)
      type: Method
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Data.Repositories
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Data/Repositories/UserRepository.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: DeleteUser
        path: ../AQuIP.Admin/AQuIP.Admin/Data/Repositories/UserRepository.cs
        startLine: 92
      syntax:
        content:
          CSharp: public void DeleteUser(string userName)
          VB: Public Sub DeleteUser(userName As String)
        parameters:
        - id: userName
          type: System.String
      overload: AQuIP.Admin.Data.Repositories.UserRepository.DeleteUser*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AQuIP.Admin.Data.Repositories.UserRepository.GetRoles
      commentId: M:AQuIP.Admin.Data.Repositories.UserRepository.GetRoles
      language: CSharp
      name:
        CSharp: GetRoles()
        VB: GetRoles()
      nameWithType:
        CSharp: UserRepository.GetRoles()
        VB: UserRepository.GetRoles()
      qualifiedName:
        CSharp: AQuIP.Admin.Data.Repositories.UserRepository.GetRoles()
        VB: AQuIP.Admin.Data.Repositories.UserRepository.GetRoles()
      type: Method
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Data.Repositories
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Data/Repositories/UserRepository.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: GetRoles
        path: ../AQuIP.Admin/AQuIP.Admin/Data/Repositories/UserRepository.cs
        startLine: 100
      syntax:
        content:
          CSharp: public IEnumerable<string> GetRoles()
          VB: Public Function GetRoles As IEnumerable(Of String)
        return:
          type: System.Collections.Generic.IEnumerable{System.String}
      overload: AQuIP.Admin.Data.Repositories.UserRepository.GetRoles*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: AQuIP.Admin.Helpers
  commentId: N:AQuIP.Admin.Helpers
  language: CSharp
  name:
    CSharp: AQuIP.Admin.Helpers
    VB: AQuIP.Admin.Helpers
  nameWithType:
    CSharp: AQuIP.Admin.Helpers
    VB: AQuIP.Admin.Helpers
  qualifiedName:
    CSharp: AQuIP.Admin.Helpers
    VB: AQuIP.Admin.Helpers
  type: Namespace
  assemblies:
  - AQuIP.Admin
  modifiers: {}
  items:
  - id: AQuIP.Admin.Helpers.Constant
    commentId: T:AQuIP.Admin.Helpers.Constant
    language: CSharp
    name:
      CSharp: Constant
      VB: Constant
    nameWithType:
      CSharp: Constant
      VB: Constant
    qualifiedName:
      CSharp: AQuIP.Admin.Helpers.Constant
      VB: AQuIP.Admin.Helpers.Constant
    type: Class
    assemblies:
    - AQuIP.Admin
    namespace: AQuIP.Admin.Helpers
    source:
      remote:
        path: AQuIP.Admin/AQuIP.Admin/Helpers/Constant.cs
        branch: master
        repo: https://github.com/kuttima/MyUserManagement.git
      id: Constant
      path: ../AQuIP.Admin/AQuIP.Admin/Helpers/Constant.cs
      startLine: 7
    syntax:
      content:
        CSharp: public static class Constant
        VB: Public Module Constant
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: AQuIP.Admin.Helpers.Constant.UserSelectListSql
      commentId: F:AQuIP.Admin.Helpers.Constant.UserSelectListSql
      language: CSharp
      name:
        CSharp: UserSelectListSql
        VB: UserSelectListSql
      nameWithType:
        CSharp: Constant.UserSelectListSql
        VB: Constant.UserSelectListSql
      qualifiedName:
        CSharp: AQuIP.Admin.Helpers.Constant.UserSelectListSql
        VB: AQuIP.Admin.Helpers.Constant.UserSelectListSql
      type: Field
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Helpers
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Helpers/Constant.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: UserSelectListSql
        path: ../AQuIP.Admin/AQuIP.Admin/Helpers/Constant.cs
        startLine: 9
      syntax:
        content:
          CSharp: public const string UserSelectListSql = "SELECT UserId, FirstName, LastName, UserName,  o.Name, r.RoleName FROM [DCP].[USER] u JOIN [DCP].[ORGANIZATION] o ON u.OrganizationKey = o.OrganizationId JOIN [DCP].[UserRoles] ur ON ur.UserKey = u.UserId JOIN [DCP].[ROLE] r ON r.RoleId = ur.RoleKey WHERE u.RecordStatusFlag = 'Active'"
          VB: Public Const UserSelectListSql As String = "SELECT UserId, FirstName, LastName, UserName,  o.Name, r.RoleName FROM [DCP].[USER] u JOIN [DCP].[ORGANIZATION] o ON u.OrganizationKey = o.OrganizationId JOIN [DCP].[UserRoles] ur ON ur.UserKey = u.UserId JOIN [DCP].[ROLE] r ON r.RoleId = ur.RoleKey WHERE u.RecordStatusFlag = 'Active'"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AQuIP.Admin.Helpers.Constant.UserDetailsSql
      commentId: F:AQuIP.Admin.Helpers.Constant.UserDetailsSql
      language: CSharp
      name:
        CSharp: UserDetailsSql
        VB: UserDetailsSql
      nameWithType:
        CSharp: Constant.UserDetailsSql
        VB: Constant.UserDetailsSql
      qualifiedName:
        CSharp: AQuIP.Admin.Helpers.Constant.UserDetailsSql
        VB: AQuIP.Admin.Helpers.Constant.UserDetailsSql
      type: Field
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Helpers
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Helpers/Constant.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: UserDetailsSql
        path: ../AQuIP.Admin/AQuIP.Admin/Helpers/Constant.cs
        startLine: 10
      syntax:
        content:
          CSharp: public const string UserDetailsSql = "SELECT UserId, FirstName, LastName, UserName, u.Phone, o.Name, r.RoleName FROM [DCP].[USER] u INNER JOIN [DCP].[ORGANIZATION] o ON u.OrganizationKey = o.OrganizationId INNER JOIN [DCP].[UserRoles] ur ON ur.UserKey = u.UserId INNER JOIN [DCP].[ROLE] r ON r.RoleId = ur.RoleKey WHERE USERID = "
          VB: Public Const UserDetailsSql As String = "SELECT UserId, FirstName, LastName, UserName, u.Phone, o.Name, r.RoleName FROM [DCP].[USER] u INNER JOIN [DCP].[ORGANIZATION] o ON u.OrganizationKey = o.OrganizationId INNER JOIN [DCP].[UserRoles] ur ON ur.UserKey = u.UserId INNER JOIN [DCP].[ROLE] r ON r.RoleId = ur.RoleKey WHERE USERID = "
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AQuIP.Admin.Helpers.Constant.UpdateUserQuery
      commentId: F:AQuIP.Admin.Helpers.Constant.UpdateUserQuery
      language: CSharp
      name:
        CSharp: UpdateUserQuery
        VB: UpdateUserQuery
      nameWithType:
        CSharp: Constant.UpdateUserQuery
        VB: Constant.UpdateUserQuery
      qualifiedName:
        CSharp: AQuIP.Admin.Helpers.Constant.UpdateUserQuery
        VB: AQuIP.Admin.Helpers.Constant.UpdateUserQuery
      type: Field
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Helpers
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Helpers/Constant.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: UpdateUserQuery
        path: ../AQuIP.Admin/AQuIP.Admin/Helpers/Constant.cs
        startLine: 11
      syntax:
        content:
          CSharp: public const string UpdateUserQuery = "UPDATE [DCP].[USER] SET FirstName = @Firstname, LastName = @Lastname, Username = @Username, Phone = @Phone, LastChangedDate = GETDATE(), LastChangedUser = @LastChangedUser WHERE UserId = @Userid"
          VB: Public Const UpdateUserQuery As String = "UPDATE [DCP].[USER] SET FirstName = @Firstname, LastName = @Lastname, Username = @Username, Phone = @Phone, LastChangedDate = GETDATE(), LastChangedUser = @LastChangedUser WHERE UserId = @Userid"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AQuIP.Admin.Helpers.Constant.UpdatePassword
      commentId: F:AQuIP.Admin.Helpers.Constant.UpdatePassword
      language: CSharp
      name:
        CSharp: UpdatePassword
        VB: UpdatePassword
      nameWithType:
        CSharp: Constant.UpdatePassword
        VB: Constant.UpdatePassword
      qualifiedName:
        CSharp: AQuIP.Admin.Helpers.Constant.UpdatePassword
        VB: AQuIP.Admin.Helpers.Constant.UpdatePassword
      type: Field
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Helpers
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Helpers/Constant.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: UpdatePassword
        path: ../AQuIP.Admin/AQuIP.Admin/Helpers/Constant.cs
        startLine: 12
      syntax:
        content:
          CSharp: public const string UpdatePassword = "UPDATE [DCP].[USER] SET Password = @Password, PasswordResetDate = GETDATE(), LastChangedDate = GETDATE(), LastChangedUser = @Currentuser WHERE Username = @Username"
          VB: Public Const UpdatePassword As String = "UPDATE [DCP].[USER] SET Password = @Password, PasswordResetDate = GETDATE(), LastChangedDate = GETDATE(), LastChangedUser = @Currentuser WHERE Username = @Username"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AQuIP.Admin.Helpers.Constant.GetUserForLoginQuery
      commentId: F:AQuIP.Admin.Helpers.Constant.GetUserForLoginQuery
      language: CSharp
      name:
        CSharp: GetUserForLoginQuery
        VB: GetUserForLoginQuery
      nameWithType:
        CSharp: Constant.GetUserForLoginQuery
        VB: Constant.GetUserForLoginQuery
      qualifiedName:
        CSharp: AQuIP.Admin.Helpers.Constant.GetUserForLoginQuery
        VB: AQuIP.Admin.Helpers.Constant.GetUserForLoginQuery
      type: Field
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Helpers
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Helpers/Constant.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: GetUserForLoginQuery
        path: ../AQuIP.Admin/AQuIP.Admin/Helpers/Constant.cs
        startLine: 13
      syntax:
        content:
          CSharp: public const string GetUserForLoginQuery = "Select Username, Password, r.RoleName from [DCP].[User] u INNER JOIN [DCP].[UserRoles] ur ON ur.UserKey = u.UserId INNER JOIN [DCP].[ROLE] r ON r.RoleId = ur.RoleKey WHERE u.UserName = @Username AND u.Password = @Password"
          VB: Public Const GetUserForLoginQuery As String = "Select Username, Password, r.RoleName from [DCP].[User] u INNER JOIN [DCP].[UserRoles] ur ON ur.UserKey = u.UserId INNER JOIN [DCP].[ROLE] r ON r.RoleId = ur.RoleKey WHERE u.UserName = @Username AND u.Password = @Password"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AQuIP.Admin.Helpers.Constant.GetRoles
      commentId: F:AQuIP.Admin.Helpers.Constant.GetRoles
      language: CSharp
      name:
        CSharp: GetRoles
        VB: GetRoles
      nameWithType:
        CSharp: Constant.GetRoles
        VB: Constant.GetRoles
      qualifiedName:
        CSharp: AQuIP.Admin.Helpers.Constant.GetRoles
        VB: AQuIP.Admin.Helpers.Constant.GetRoles
      type: Field
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Helpers
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Helpers/Constant.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: GetRoles
        path: ../AQuIP.Admin/AQuIP.Admin/Helpers/Constant.cs
        startLine: 15
      syntax:
        content:
          CSharp: public const string GetRoles = "SELECT RoleName FROM [DCP].[Role]"
          VB: Public Const GetRoles As String = "SELECT RoleName FROM [DCP].[Role]"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AQuIP.Admin.Helpers.Constant.RoleAdmin
      commentId: F:AQuIP.Admin.Helpers.Constant.RoleAdmin
      language: CSharp
      name:
        CSharp: RoleAdmin
        VB: RoleAdmin
      nameWithType:
        CSharp: Constant.RoleAdmin
        VB: Constant.RoleAdmin
      qualifiedName:
        CSharp: AQuIP.Admin.Helpers.Constant.RoleAdmin
        VB: AQuIP.Admin.Helpers.Constant.RoleAdmin
      type: Field
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Helpers
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Helpers/Constant.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: RoleAdmin
        path: ../AQuIP.Admin/AQuIP.Admin/Helpers/Constant.cs
        startLine: 17
      syntax:
        content:
          CSharp: public const string RoleAdmin = "TRIAdmin"
          VB: Public Const RoleAdmin As String = "TRIAdmin"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AQuIP.Admin.Helpers.Constant.RoleAssetViewer
      commentId: F:AQuIP.Admin.Helpers.Constant.RoleAssetViewer
      language: CSharp
      name:
        CSharp: RoleAssetViewer
        VB: RoleAssetViewer
      nameWithType:
        CSharp: Constant.RoleAssetViewer
        VB: Constant.RoleAssetViewer
      qualifiedName:
        CSharp: AQuIP.Admin.Helpers.Constant.RoleAssetViewer
        VB: AQuIP.Admin.Helpers.Constant.RoleAssetViewer
      type: Field
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Helpers
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Helpers/Constant.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: RoleAssetViewer
        path: ../AQuIP.Admin/AQuIP.Admin/Helpers/Constant.cs
        startLine: 18
      syntax:
        content:
          CSharp: public const string RoleAssetViewer = "AssetViewer"
          VB: Public Const RoleAssetViewer As String = "AssetViewer"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AQuIP.Admin.Helpers.Constant.Active
      commentId: F:AQuIP.Admin.Helpers.Constant.Active
      language: CSharp
      name:
        CSharp: Active
        VB: Active
      nameWithType:
        CSharp: Constant.Active
        VB: Constant.Active
      qualifiedName:
        CSharp: AQuIP.Admin.Helpers.Constant.Active
        VB: AQuIP.Admin.Helpers.Constant.Active
      type: Field
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Helpers
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Helpers/Constant.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: Active
        path: ../AQuIP.Admin/AQuIP.Admin/Helpers/Constant.cs
        startLine: 19
      syntax:
        content:
          CSharp: public const string Active = "Active"
          VB: Public Const Active As String = "Active"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AQuIP.Admin.Helpers.Constant.DeleteUserSuccessMsg
      commentId: F:AQuIP.Admin.Helpers.Constant.DeleteUserSuccessMsg
      language: CSharp
      name:
        CSharp: DeleteUserSuccessMsg
        VB: DeleteUserSuccessMsg
      nameWithType:
        CSharp: Constant.DeleteUserSuccessMsg
        VB: Constant.DeleteUserSuccessMsg
      qualifiedName:
        CSharp: AQuIP.Admin.Helpers.Constant.DeleteUserSuccessMsg
        VB: AQuIP.Admin.Helpers.Constant.DeleteUserSuccessMsg
      type: Field
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Helpers
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Helpers/Constant.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: DeleteUserSuccessMsg
        path: ../AQuIP.Admin/AQuIP.Admin/Helpers/Constant.cs
        startLine: 21
      syntax:
        content:
          CSharp: public const string DeleteUserSuccessMsg = "User successfully deleted!"
          VB: Public Const DeleteUserSuccessMsg As String = "User successfully deleted!"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AQuIP.Admin.Helpers.Constant.ActivateUserSuccessMsg
      commentId: F:AQuIP.Admin.Helpers.Constant.ActivateUserSuccessMsg
      language: CSharp
      name:
        CSharp: ActivateUserSuccessMsg
        VB: ActivateUserSuccessMsg
      nameWithType:
        CSharp: Constant.ActivateUserSuccessMsg
        VB: Constant.ActivateUserSuccessMsg
      qualifiedName:
        CSharp: AQuIP.Admin.Helpers.Constant.ActivateUserSuccessMsg
        VB: AQuIP.Admin.Helpers.Constant.ActivateUserSuccessMsg
      type: Field
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Helpers
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Helpers/Constant.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: ActivateUserSuccessMsg
        path: ../AQuIP.Admin/AQuIP.Admin/Helpers/Constant.cs
        startLine: 22
      syntax:
        content:
          CSharp: public const string ActivateUserSuccessMsg = "User Activation was successful!"
          VB: Public Const ActivateUserSuccessMsg As String = "User Activation was successful!"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AQuIP.Admin.Helpers.Constant.DeactivateUserSuccessMsg
      commentId: F:AQuIP.Admin.Helpers.Constant.DeactivateUserSuccessMsg
      language: CSharp
      name:
        CSharp: DeactivateUserSuccessMsg
        VB: DeactivateUserSuccessMsg
      nameWithType:
        CSharp: Constant.DeactivateUserSuccessMsg
        VB: Constant.DeactivateUserSuccessMsg
      qualifiedName:
        CSharp: AQuIP.Admin.Helpers.Constant.DeactivateUserSuccessMsg
        VB: AQuIP.Admin.Helpers.Constant.DeactivateUserSuccessMsg
      type: Field
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Helpers
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Helpers/Constant.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: DeactivateUserSuccessMsg
        path: ../AQuIP.Admin/AQuIP.Admin/Helpers/Constant.cs
        startLine: 23
      syntax:
        content:
          CSharp: public const string DeactivateUserSuccessMsg = "User Deactivation was successful!"
          VB: Public Const DeactivateUserSuccessMsg As String = "User Deactivation was successful!"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AQuIP.Admin.Helpers.Constant.ResetPasswordSuccessMsg
      commentId: F:AQuIP.Admin.Helpers.Constant.ResetPasswordSuccessMsg
      language: CSharp
      name:
        CSharp: ResetPasswordSuccessMsg
        VB: ResetPasswordSuccessMsg
      nameWithType:
        CSharp: Constant.ResetPasswordSuccessMsg
        VB: Constant.ResetPasswordSuccessMsg
      qualifiedName:
        CSharp: AQuIP.Admin.Helpers.Constant.ResetPasswordSuccessMsg
        VB: AQuIP.Admin.Helpers.Constant.ResetPasswordSuccessMsg
      type: Field
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Helpers
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Helpers/Constant.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: ResetPasswordSuccessMsg
        path: ../AQuIP.Admin/AQuIP.Admin/Helpers/Constant.cs
        startLine: 24
      syntax:
        content:
          CSharp: public const string ResetPasswordSuccessMsg = "Password was successfully reset for user!"
          VB: Public Const ResetPasswordSuccessMsg As String = "Password was successfully reset for user!"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AQuIP.Admin.Helpers.Constant.EditUserSuccessMsg
      commentId: F:AQuIP.Admin.Helpers.Constant.EditUserSuccessMsg
      language: CSharp
      name:
        CSharp: EditUserSuccessMsg
        VB: EditUserSuccessMsg
      nameWithType:
        CSharp: Constant.EditUserSuccessMsg
        VB: Constant.EditUserSuccessMsg
      qualifiedName:
        CSharp: AQuIP.Admin.Helpers.Constant.EditUserSuccessMsg
        VB: AQuIP.Admin.Helpers.Constant.EditUserSuccessMsg
      type: Field
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Helpers
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Helpers/Constant.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: EditUserSuccessMsg
        path: ../AQuIP.Admin/AQuIP.Admin/Helpers/Constant.cs
        startLine: 25
      syntax:
        content:
          CSharp: public const string EditUserSuccessMsg = "User update was successful!"
          VB: Public Const EditUserSuccessMsg As String = "User update was successful!"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AQuIP.Admin.Helpers.Constant.CreateUserSuccessMsg
      commentId: F:AQuIP.Admin.Helpers.Constant.CreateUserSuccessMsg
      language: CSharp
      name:
        CSharp: CreateUserSuccessMsg
        VB: CreateUserSuccessMsg
      nameWithType:
        CSharp: Constant.CreateUserSuccessMsg
        VB: Constant.CreateUserSuccessMsg
      qualifiedName:
        CSharp: AQuIP.Admin.Helpers.Constant.CreateUserSuccessMsg
        VB: AQuIP.Admin.Helpers.Constant.CreateUserSuccessMsg
      type: Field
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Helpers
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Helpers/Constant.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: CreateUserSuccessMsg
        path: ../AQuIP.Admin/AQuIP.Admin/Helpers/Constant.cs
        startLine: 26
      syntax:
        content:
          CSharp: public const string CreateUserSuccessMsg = "User added successfully!"
          VB: Public Const CreateUserSuccessMsg As String = "User added successfully!"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AQuIP.Admin.Helpers.Constant.LoginErrorMsg
      commentId: F:AQuIP.Admin.Helpers.Constant.LoginErrorMsg
      language: CSharp
      name:
        CSharp: LoginErrorMsg
        VB: LoginErrorMsg
      nameWithType:
        CSharp: Constant.LoginErrorMsg
        VB: Constant.LoginErrorMsg
      qualifiedName:
        CSharp: AQuIP.Admin.Helpers.Constant.LoginErrorMsg
        VB: AQuIP.Admin.Helpers.Constant.LoginErrorMsg
      type: Field
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Helpers
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Helpers/Constant.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: LoginErrorMsg
        path: ../AQuIP.Admin/AQuIP.Admin/Helpers/Constant.cs
        startLine: 28
      syntax:
        content:
          CSharp: public const string LoginErrorMsg = "Username and password do not match!"
          VB: Public Const LoginErrorMsg As String = "Username and password do not match!"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AQuIP.Admin.Helpers.Constant.ResetPasswordErrorMsg
      commentId: F:AQuIP.Admin.Helpers.Constant.ResetPasswordErrorMsg
      language: CSharp
      name:
        CSharp: ResetPasswordErrorMsg
        VB: ResetPasswordErrorMsg
      nameWithType:
        CSharp: Constant.ResetPasswordErrorMsg
        VB: Constant.ResetPasswordErrorMsg
      qualifiedName:
        CSharp: AQuIP.Admin.Helpers.Constant.ResetPasswordErrorMsg
        VB: AQuIP.Admin.Helpers.Constant.ResetPasswordErrorMsg
      type: Field
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Helpers
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Helpers/Constant.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: ResetPasswordErrorMsg
        path: ../AQuIP.Admin/AQuIP.Admin/Helpers/Constant.cs
        startLine: 29
      syntax:
        content:
          CSharp: public const string ResetPasswordErrorMsg = "Password reset failed, user does not exist!"
          VB: Public Const ResetPasswordErrorMsg As String = "Password reset failed, user does not exist!"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AQuIP.Admin.Helpers.Constant.ActivateUserErrorMsg
      commentId: F:AQuIP.Admin.Helpers.Constant.ActivateUserErrorMsg
      language: CSharp
      name:
        CSharp: ActivateUserErrorMsg
        VB: ActivateUserErrorMsg
      nameWithType:
        CSharp: Constant.ActivateUserErrorMsg
        VB: Constant.ActivateUserErrorMsg
      qualifiedName:
        CSharp: AQuIP.Admin.Helpers.Constant.ActivateUserErrorMsg
        VB: AQuIP.Admin.Helpers.Constant.ActivateUserErrorMsg
      type: Field
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Helpers
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Helpers/Constant.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: ActivateUserErrorMsg
        path: ../AQuIP.Admin/AQuIP.Admin/Helpers/Constant.cs
        startLine: 30
      syntax:
        content:
          CSharp: public const string ActivateUserErrorMsg = "Activation failed, user already active or does not exist!"
          VB: Public Const ActivateUserErrorMsg As String = "Activation failed, user already active or does not exist!"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AQuIP.Admin.Helpers.Constant.DeactivationErrorMsg
      commentId: F:AQuIP.Admin.Helpers.Constant.DeactivationErrorMsg
      language: CSharp
      name:
        CSharp: DeactivationErrorMsg
        VB: DeactivationErrorMsg
      nameWithType:
        CSharp: Constant.DeactivationErrorMsg
        VB: Constant.DeactivationErrorMsg
      qualifiedName:
        CSharp: AQuIP.Admin.Helpers.Constant.DeactivationErrorMsg
        VB: AQuIP.Admin.Helpers.Constant.DeactivationErrorMsg
      type: Field
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Helpers
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Helpers/Constant.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: DeactivationErrorMsg
        path: ../AQuIP.Admin/AQuIP.Admin/Helpers/Constant.cs
        startLine: 31
      syntax:
        content:
          CSharp: public const string DeactivationErrorMsg = "Deactivation failed, user already deactivated or does not exist!"
          VB: Public Const DeactivationErrorMsg As String = "Deactivation failed, user already deactivated or does not exist!"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AQuIP.Admin.Helpers.Constant.DeletionErrorMsg
      commentId: F:AQuIP.Admin.Helpers.Constant.DeletionErrorMsg
      language: CSharp
      name:
        CSharp: DeletionErrorMsg
        VB: DeletionErrorMsg
      nameWithType:
        CSharp: Constant.DeletionErrorMsg
        VB: Constant.DeletionErrorMsg
      qualifiedName:
        CSharp: AQuIP.Admin.Helpers.Constant.DeletionErrorMsg
        VB: AQuIP.Admin.Helpers.Constant.DeletionErrorMsg
      type: Field
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Helpers
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Helpers/Constant.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: DeletionErrorMsg
        path: ../AQuIP.Admin/AQuIP.Admin/Helpers/Constant.cs
        startLine: 32
      syntax:
        content:
          CSharp: public const string DeletionErrorMsg = "Deletion failed, user already deleted!"
          VB: Public Const DeletionErrorMsg As String = "Deletion failed, user already deleted!"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AQuIP.Admin.Helpers.Constant.ProductName
      commentId: F:AQuIP.Admin.Helpers.Constant.ProductName
      language: CSharp
      name:
        CSharp: ProductName
        VB: ProductName
      nameWithType:
        CSharp: Constant.ProductName
        VB: Constant.ProductName
      qualifiedName:
        CSharp: AQuIP.Admin.Helpers.Constant.ProductName
        VB: AQuIP.Admin.Helpers.Constant.ProductName
      type: Field
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Helpers
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Helpers/Constant.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: ProductName
        path: ../AQuIP.Admin/AQuIP.Admin/Helpers/Constant.cs
        startLine: 35
      syntax:
        content:
          CSharp: public const string ProductName = "AQuIP.Admin"
          VB: Public Const ProductName As String = "AQuIP.Admin"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: AQuIP.Admin.Helpers.Constant.LayerName
      commentId: F:AQuIP.Admin.Helpers.Constant.LayerName
      language: CSharp
      name:
        CSharp: LayerName
        VB: LayerName
      nameWithType:
        CSharp: Constant.LayerName
        VB: Constant.LayerName
      qualifiedName:
        CSharp: AQuIP.Admin.Helpers.Constant.LayerName
        VB: AQuIP.Admin.Helpers.Constant.LayerName
      type: Field
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Helpers
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Helpers/Constant.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: LayerName
        path: ../AQuIP.Admin/AQuIP.Admin/Helpers/Constant.cs
        startLine: 36
      syntax:
        content:
          CSharp: public const string LayerName = "MVC"
          VB: Public Const LayerName As String = "MVC"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: AQuIP.Admin.Helpers.Extensions
    commentId: T:AQuIP.Admin.Helpers.Extensions
    language: CSharp
    name:
      CSharp: Extensions
      VB: Extensions
    nameWithType:
      CSharp: Extensions
      VB: Extensions
    qualifiedName:
      CSharp: AQuIP.Admin.Helpers.Extensions
      VB: AQuIP.Admin.Helpers.Extensions
    type: Class
    assemblies:
    - AQuIP.Admin
    namespace: AQuIP.Admin.Helpers
    source:
      remote:
        path: AQuIP.Admin/AQuIP.Admin/Helpers/Extensions.cs
        branch: master
        repo: https://github.com/kuttima/MyUserManagement.git
      id: Extensions
      path: ../AQuIP.Admin/AQuIP.Admin/Helpers/Extensions.cs
      startLine: 11
    syntax:
      content:
        CSharp: public static class Extensions
        VB: Public Module Extensions
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - isExtensionMethod: true
      id: AQuIP.Admin.Helpers.Extensions.SortIdentifier(System.Web.Mvc.HtmlHelper,System.String,System.String)
      commentId: M:AQuIP.Admin.Helpers.Extensions.SortIdentifier(System.Web.Mvc.HtmlHelper,System.String,System.String)
      language: CSharp
      name:
        CSharp: SortIdentifier(HtmlHelper, String, String)
        VB: SortIdentifier(HtmlHelper, String, String)
      nameWithType:
        CSharp: Extensions.SortIdentifier(HtmlHelper, String, String)
        VB: Extensions.SortIdentifier(HtmlHelper, String, String)
      qualifiedName:
        CSharp: AQuIP.Admin.Helpers.Extensions.SortIdentifier(System.Web.Mvc.HtmlHelper, System.String, System.String)
        VB: AQuIP.Admin.Helpers.Extensions.SortIdentifier(System.Web.Mvc.HtmlHelper, System.String, System.String)
      type: Method
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Helpers
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Helpers/Extensions.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: SortIdentifier
        path: ../AQuIP.Admin/AQuIP.Admin/Helpers/Extensions.cs
        startLine: 20
      summary: "\nUsed to determine the direction of the sort identifier used when filtering lists\n"
      example: []
      syntax:
        content:
          CSharp: public static IHtmlString SortIdentifier(this HtmlHelper htmlHelper, string sortOrder, string field)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function SortIdentifier(htmlHelper As HtmlHelper, sortOrder As String, field As String) As IHtmlString
        parameters:
        - id: htmlHelper
          type: System.Web.Mvc.HtmlHelper
          description: ''
        - id: sortOrder
          type: System.String
          description: the current sort order being used on the page
        - id: field
          type: System.String
          description: the field that we are attaching this sort identifier to
        return:
          type: System.Web.IHtmlString
          description: MvcHtmlString used to indicate the sort order of the field
      overload: AQuIP.Admin.Helpers.Extensions.SortIdentifier*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: AQuIP.Admin.Helpers.Extensions.ToRouteValueDictionary(System.Collections.Specialized.NameValueCollection,System.String,System.String)
      commentId: M:AQuIP.Admin.Helpers.Extensions.ToRouteValueDictionary(System.Collections.Specialized.NameValueCollection,System.String,System.String)
      language: CSharp
      name:
        CSharp: ToRouteValueDictionary(NameValueCollection, String, String)
        VB: ToRouteValueDictionary(NameValueCollection, String, String)
      nameWithType:
        CSharp: Extensions.ToRouteValueDictionary(NameValueCollection, String, String)
        VB: Extensions.ToRouteValueDictionary(NameValueCollection, String, String)
      qualifiedName:
        CSharp: AQuIP.Admin.Helpers.Extensions.ToRouteValueDictionary(System.Collections.Specialized.NameValueCollection, System.String, System.String)
        VB: AQuIP.Admin.Helpers.Extensions.ToRouteValueDictionary(System.Collections.Specialized.NameValueCollection, System.String, System.String)
      type: Method
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Helpers
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Helpers/Extensions.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: ToRouteValueDictionary
        path: ../AQuIP.Admin/AQuIP.Admin/Helpers/Extensions.cs
        startLine: 44
      summary: "\nConverts a NameValueCollection into a RouteValueDictionary containing all of the elements in the collection, and optionally appends\n{newKey: newValue} if they are not null\n"
      example: []
      syntax:
        content:
          CSharp: public static RouteValueDictionary ToRouteValueDictionary(this NameValueCollection collection, string newKey, string newValue)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function ToRouteValueDictionary(collection As NameValueCollection, newKey As String, newValue As String) As RouteValueDictionary
        parameters:
        - id: collection
          type: System.Collections.Specialized.NameValueCollection
          description: NameValue collection to convert into a RouteValueDictionary
        - id: newKey
          type: System.String
          description: the name of a key to add to the RouteValueDictionary
        - id: newValue
          type: System.String
          description: the value associated with newKey to add to the RouteValueDictionary
        return:
          type: System.Web.Routing.RouteValueDictionary
          description: 'A RouteValueDictionary containing all of the keys in collection, as well as {newKey: newValue} if they are not null'
      overload: AQuIP.Admin.Helpers.Extensions.ToRouteValueDictionary*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: AQuIP.Admin.Helpers.Extensions.GetSortedList(System.Collections.Generic.List{AQuIP.Admin.Models.UserAccount},System.String)
      commentId: M:AQuIP.Admin.Helpers.Extensions.GetSortedList(System.Collections.Generic.List{AQuIP.Admin.Models.UserAccount},System.String)
      language: CSharp
      name:
        CSharp: GetSortedList(List<UserAccount>, String)
        VB: GetSortedList(List(Of UserAccount), String)
      nameWithType:
        CSharp: Extensions.GetSortedList(List<UserAccount>, String)
        VB: Extensions.GetSortedList(List(Of UserAccount), String)
      qualifiedName:
        CSharp: AQuIP.Admin.Helpers.Extensions.GetSortedList(System.Collections.Generic.List<AQuIP.Admin.Models.UserAccount>, System.String)
        VB: AQuIP.Admin.Helpers.Extensions.GetSortedList(System.Collections.Generic.List(Of AQuIP.Admin.Models.UserAccount), System.String)
      type: Method
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Helpers
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Helpers/Extensions.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: GetSortedList
        path: ../AQuIP.Admin/AQuIP.Admin/Helpers/Extensions.cs
        startLine: 69
      syntax:
        content:
          CSharp: public static List<UserAccount> GetSortedList(List<UserAccount> userList, string sortOrder)
          VB: Public Shared Function GetSortedList(userList As List(Of UserAccount), sortOrder As String) As List(Of UserAccount)
        parameters:
        - id: userList
          type: System.Collections.Generic.List{AQuIP.Admin.Models.UserAccount}
        - id: sortOrder
          type: System.String
        return:
          type: System.Collections.Generic.List{AQuIP.Admin.Models.UserAccount}
      overload: AQuIP.Admin.Helpers.Extensions.GetSortedList*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: AQuIP.Admin.Helpers.Helpers
    commentId: T:AQuIP.Admin.Helpers.Helpers
    language: CSharp
    name:
      CSharp: Helpers
      VB: Helpers
    nameWithType:
      CSharp: Helpers
      VB: Helpers
    qualifiedName:
      CSharp: AQuIP.Admin.Helpers.Helpers
      VB: AQuIP.Admin.Helpers.Helpers
    type: Class
    assemblies:
    - AQuIP.Admin
    namespace: AQuIP.Admin.Helpers
    source:
      remote:
        path: AQuIP.Admin/AQuIP.Admin/Helpers/Helpers.cs
        branch: master
        repo: https://github.com/kuttima/MyUserManagement.git
      id: Helpers
      path: ../AQuIP.Admin/AQuIP.Admin/Helpers/Helpers.cs
      startLine: 9
    syntax:
      content:
        CSharp: public static class Helpers
        VB: Public Module Helpers
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: AQuIP.Admin.Helpers.Helpers.LogWebUsage(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})
      commentId: M:AQuIP.Admin.Helpers.Helpers.LogWebUsage(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})
      language: CSharp
      name:
        CSharp: LogWebUsage(String, String, String, Dictionary<String, Object>)
        VB: LogWebUsage(String, String, String, Dictionary(Of String, Object))
      nameWithType:
        CSharp: Helpers.LogWebUsage(String, String, String, Dictionary<String, Object>)
        VB: Helpers.LogWebUsage(String, String, String, Dictionary(Of String, Object))
      qualifiedName:
        CSharp: AQuIP.Admin.Helpers.Helpers.LogWebUsage(System.String, System.String, System.String, System.Collections.Generic.Dictionary<System.String, System.Object>)
        VB: AQuIP.Admin.Helpers.Helpers.LogWebUsage(System.String, System.String, System.String, System.Collections.Generic.Dictionary(Of System.String, System.Object))
      type: Method
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Helpers
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Helpers/Helpers.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: LogWebUsage
        path: ../AQuIP.Admin/AQuIP.Admin/Helpers/Helpers.cs
        startLine: 100
      syntax:
        content:
          CSharp: public static void LogWebUsage(string product, string layer, string activityName, Dictionary<string, object> additonalInfo = null)
          VB: Public Shared Sub LogWebUsage(product As String, layer As String, activityName As String, additonalInfo As Dictionary(Of String, Object) = Nothing)
        parameters:
        - id: product
          type: System.String
        - id: layer
          type: System.String
        - id: activityName
          type: System.String
        - id: additonalInfo
          type: System.Collections.Generic.Dictionary{System.String,System.Object}
      overload: AQuIP.Admin.Helpers.Helpers.LogWebUsage*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: AQuIP.Admin.Helpers.Helpers.LogWebError(System.String,System.String,System.Exception)
      commentId: M:AQuIP.Admin.Helpers.Helpers.LogWebError(System.String,System.String,System.Exception)
      language: CSharp
      name:
        CSharp: LogWebError(String, String, Exception)
        VB: LogWebError(String, String, Exception)
      nameWithType:
        CSharp: Helpers.LogWebError(String, String, Exception)
        VB: Helpers.LogWebError(String, String, Exception)
      qualifiedName:
        CSharp: AQuIP.Admin.Helpers.Helpers.LogWebError(System.String, System.String, System.Exception)
        VB: AQuIP.Admin.Helpers.Helpers.LogWebError(System.String, System.String, System.Exception)
      type: Method
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Helpers
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Helpers/Helpers.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: LogWebError
        path: ../AQuIP.Admin/AQuIP.Admin/Helpers/Helpers.cs
        startLine: 129
      syntax:
        content:
          CSharp: public static void LogWebError(string product, string layer, Exception ex)
          VB: Public Shared Sub LogWebError(product As String, layer As String, ex As Exception)
        parameters:
        - id: product
          type: System.String
        - id: layer
          type: System.String
        - id: ex
          type: System.Exception
      overload: AQuIP.Admin.Helpers.Helpers.LogWebError*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: AQuIP.Admin.Helpers.Helpers.LogWebDiagnostic(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})
      commentId: M:AQuIP.Admin.Helpers.Helpers.LogWebDiagnostic(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})
      language: CSharp
      name:
        CSharp: LogWebDiagnostic(String, String, String, Dictionary<String, Object>)
        VB: LogWebDiagnostic(String, String, String, Dictionary(Of String, Object))
      nameWithType:
        CSharp: Helpers.LogWebDiagnostic(String, String, String, Dictionary<String, Object>)
        VB: Helpers.LogWebDiagnostic(String, String, String, Dictionary(Of String, Object))
      qualifiedName:
        CSharp: AQuIP.Admin.Helpers.Helpers.LogWebDiagnostic(System.String, System.String, System.String, System.Collections.Generic.Dictionary<System.String, System.Object>)
        VB: AQuIP.Admin.Helpers.Helpers.LogWebDiagnostic(System.String, System.String, System.String, System.Collections.Generic.Dictionary(Of System.String, System.Object))
      type: Method
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Helpers
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Helpers/Helpers.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: LogWebDiagnostic
        path: ../AQuIP.Admin/AQuIP.Admin/Helpers/Helpers.cs
        startLine: 150
      syntax:
        content:
          CSharp: public static void LogWebDiagnostic(string product, string layer, string message, Dictionary<string, object> diagnosticInfo = null)
          VB: Public Shared Sub LogWebDiagnostic(product As String, layer As String, message As String, diagnosticInfo As Dictionary(Of String, Object) = Nothing)
        parameters:
        - id: product
          type: System.String
        - id: layer
          type: System.String
        - id: message
          type: System.String
        - id: diagnosticInfo
          type: System.Collections.Generic.Dictionary{System.String,System.Object}
      overload: AQuIP.Admin.Helpers.Helpers.LogWebDiagnostic*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: AQuIP.Admin.Helpers.Helpers.GetHttpStatus(System.Exception,System.Int32@)
      commentId: M:AQuIP.Admin.Helpers.Helpers.GetHttpStatus(System.Exception,System.Int32@)
      language: CSharp
      name:
        CSharp: GetHttpStatus(Exception, out Int32)
        VB: GetHttpStatus(Exception, ByRef Int32)
      nameWithType:
        CSharp: Helpers.GetHttpStatus(Exception, out Int32)
        VB: Helpers.GetHttpStatus(Exception, ByRef Int32)
      qualifiedName:
        CSharp: AQuIP.Admin.Helpers.Helpers.GetHttpStatus(System.Exception, out System.Int32)
        VB: AQuIP.Admin.Helpers.Helpers.GetHttpStatus(System.Exception, ByRef System.Int32)
      type: Method
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Helpers
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Helpers/Helpers.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: GetHttpStatus
        path: ../AQuIP.Admin/AQuIP.Admin/Helpers/Helpers.cs
        startLine: 156
      syntax:
        content:
          CSharp: public static void GetHttpStatus(Exception ex, out int httpStatus)
          VB: Public Shared Sub GetHttpStatus(ex As Exception, ByRef httpStatus As Integer)
        parameters:
        - id: ex
          type: System.Exception
        - id: httpStatus
          type: System.Int32
      overload: AQuIP.Admin.Helpers.Helpers.GetHttpStatus*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
- id: AQuIP.Admin.Infrastructure
  commentId: N:AQuIP.Admin.Infrastructure
  language: CSharp
  name:
    CSharp: AQuIP.Admin.Infrastructure
    VB: AQuIP.Admin.Infrastructure
  nameWithType:
    CSharp: AQuIP.Admin.Infrastructure
    VB: AQuIP.Admin.Infrastructure
  qualifiedName:
    CSharp: AQuIP.Admin.Infrastructure
    VB: AQuIP.Admin.Infrastructure
  type: Namespace
  assemblies:
  - AQuIP.Admin
  modifiers: {}
  items:
  - id: AQuIP.Admin.Infrastructure.DalSession
    commentId: T:AQuIP.Admin.Infrastructure.DalSession
    language: CSharp
    name:
      CSharp: DalSession
      VB: DalSession
    nameWithType:
      CSharp: DalSession
      VB: DalSession
    qualifiedName:
      CSharp: AQuIP.Admin.Infrastructure.DalSession
      VB: AQuIP.Admin.Infrastructure.DalSession
    type: Class
    assemblies:
    - AQuIP.Admin
    namespace: AQuIP.Admin.Infrastructure
    source:
      remote:
        path: AQuIP.Admin/AQuIP.Admin/Infrastructure/DalSession.cs
        branch: master
        repo: https://github.com/kuttima/MyUserManagement.git
      id: DalSession
      path: ../AQuIP.Admin/AQuIP.Admin/Infrastructure/DalSession.cs
      startLine: 8
    syntax:
      content:
        CSharp: 'public sealed class DalSession : IDisposable'
        VB: >-
          Public NotInheritable Class DalSession

              Implements IDisposable
    inheritance:
    - System.Object
    implements:
    - System.IDisposable
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - sealed
      - class
      VB:
      - Public
      - NotInheritable
      - Class
    items:
    - id: AQuIP.Admin.Infrastructure.DalSession.#ctor
      commentId: M:AQuIP.Admin.Infrastructure.DalSession.#ctor
      language: CSharp
      name:
        CSharp: DalSession()
        VB: DalSession()
      nameWithType:
        CSharp: DalSession.DalSession()
        VB: DalSession.DalSession()
      qualifiedName:
        CSharp: AQuIP.Admin.Infrastructure.DalSession.DalSession()
        VB: AQuIP.Admin.Infrastructure.DalSession.DalSession()
      type: Constructor
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Infrastructure
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Infrastructure/DalSession.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: .ctor
        path: ../AQuIP.Admin/AQuIP.Admin/Infrastructure/DalSession.cs
        startLine: 13
      syntax:
        content:
          CSharp: public DalSession()
          VB: Public Sub New
      overload: AQuIP.Admin.Infrastructure.DalSession.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AQuIP.Admin.Infrastructure.DalSession.UnitOfWork
      commentId: P:AQuIP.Admin.Infrastructure.DalSession.UnitOfWork
      language: CSharp
      name:
        CSharp: UnitOfWork
        VB: UnitOfWork
      nameWithType:
        CSharp: DalSession.UnitOfWork
        VB: DalSession.UnitOfWork
      qualifiedName:
        CSharp: AQuIP.Admin.Infrastructure.DalSession.UnitOfWork
        VB: AQuIP.Admin.Infrastructure.DalSession.UnitOfWork
      type: Property
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Infrastructure
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Infrastructure/DalSession.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: UnitOfWork
        path: ../AQuIP.Admin/AQuIP.Admin/Infrastructure/DalSession.cs
        startLine: 20
      syntax:
        content:
          CSharp: public UnitOfWork UnitOfWork { get; }
          VB: Public ReadOnly Property UnitOfWork As UnitOfWork
        parameters: []
        return:
          type: AQuIP.Admin.Infrastructure.UnitOfWork
      overload: AQuIP.Admin.Infrastructure.DalSession.UnitOfWork*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: AQuIP.Admin.Infrastructure.DalSession.Dispose
      commentId: M:AQuIP.Admin.Infrastructure.DalSession.Dispose
      language: CSharp
      name:
        CSharp: Dispose()
        VB: Dispose()
      nameWithType:
        CSharp: DalSession.Dispose()
        VB: DalSession.Dispose()
      qualifiedName:
        CSharp: AQuIP.Admin.Infrastructure.DalSession.Dispose()
        VB: AQuIP.Admin.Infrastructure.DalSession.Dispose()
      type: Method
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Infrastructure
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Infrastructure/DalSession.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: Dispose
        path: ../AQuIP.Admin/AQuIP.Admin/Infrastructure/DalSession.cs
        startLine: 24
      syntax:
        content:
          CSharp: public void Dispose()
          VB: Public Sub Dispose
      overload: AQuIP.Admin.Infrastructure.DalSession.Dispose*
      implements:
      - System.IDisposable.Dispose
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: AQuIP.Admin.Infrastructure.IUnitOfWork
    commentId: T:AQuIP.Admin.Infrastructure.IUnitOfWork
    language: CSharp
    name:
      CSharp: IUnitOfWork
      VB: IUnitOfWork
    nameWithType:
      CSharp: IUnitOfWork
      VB: IUnitOfWork
    qualifiedName:
      CSharp: AQuIP.Admin.Infrastructure.IUnitOfWork
      VB: AQuIP.Admin.Infrastructure.IUnitOfWork
    type: Interface
    assemblies:
    - AQuIP.Admin
    namespace: AQuIP.Admin.Infrastructure
    source:
      remote:
        path: AQuIP.Admin/AQuIP.Admin/Infrastructure/UnitOfWork.cs
        branch: master
        repo: https://github.com/kuttima/MyUserManagement.git
      id: IUnitOfWork
      path: ../AQuIP.Admin/AQuIP.Admin/Infrastructure/UnitOfWork.cs
      startLine: 8
    syntax:
      content:
        CSharp: 'public interface IUnitOfWork : IDisposable'
        VB: >-
          Public Interface IUnitOfWork

              Inherits IDisposable
    inheritedMembers:
    - System.IDisposable.Dispose
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: AQuIP.Admin.Infrastructure.IUnitOfWork.Connection
      commentId: P:AQuIP.Admin.Infrastructure.IUnitOfWork.Connection
      language: CSharp
      name:
        CSharp: Connection
        VB: Connection
      nameWithType:
        CSharp: IUnitOfWork.Connection
        VB: IUnitOfWork.Connection
      qualifiedName:
        CSharp: AQuIP.Admin.Infrastructure.IUnitOfWork.Connection
        VB: AQuIP.Admin.Infrastructure.IUnitOfWork.Connection
      type: Property
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Infrastructure
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Infrastructure/UnitOfWork.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: Connection
        path: ../AQuIP.Admin/AQuIP.Admin/Infrastructure/UnitOfWork.cs
        startLine: 10
      syntax:
        content:
          CSharp: IDbConnection Connection { get; }
          VB: ReadOnly Property Connection As IDbConnection
        parameters: []
        return:
          type: System.Data.IDbConnection
      overload: AQuIP.Admin.Infrastructure.IUnitOfWork.Connection*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: AQuIP.Admin.Infrastructure.IUnitOfWork.Transaction
      commentId: P:AQuIP.Admin.Infrastructure.IUnitOfWork.Transaction
      language: CSharp
      name:
        CSharp: Transaction
        VB: Transaction
      nameWithType:
        CSharp: IUnitOfWork.Transaction
        VB: IUnitOfWork.Transaction
      qualifiedName:
        CSharp: AQuIP.Admin.Infrastructure.IUnitOfWork.Transaction
        VB: AQuIP.Admin.Infrastructure.IUnitOfWork.Transaction
      type: Property
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Infrastructure
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Infrastructure/UnitOfWork.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: Transaction
        path: ../AQuIP.Admin/AQuIP.Admin/Infrastructure/UnitOfWork.cs
        startLine: 11
      syntax:
        content:
          CSharp: IDbTransaction Transaction { get; }
          VB: ReadOnly Property Transaction As IDbTransaction
        parameters: []
        return:
          type: System.Data.IDbTransaction
      overload: AQuIP.Admin.Infrastructure.IUnitOfWork.Transaction*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: AQuIP.Admin.Infrastructure.IUnitOfWork.Begin
      commentId: M:AQuIP.Admin.Infrastructure.IUnitOfWork.Begin
      language: CSharp
      name:
        CSharp: Begin()
        VB: Begin()
      nameWithType:
        CSharp: IUnitOfWork.Begin()
        VB: IUnitOfWork.Begin()
      qualifiedName:
        CSharp: AQuIP.Admin.Infrastructure.IUnitOfWork.Begin()
        VB: AQuIP.Admin.Infrastructure.IUnitOfWork.Begin()
      type: Method
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Infrastructure
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Infrastructure/UnitOfWork.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: Begin
        path: ../AQuIP.Admin/AQuIP.Admin/Infrastructure/UnitOfWork.cs
        startLine: 12
      syntax:
        content:
          CSharp: void Begin()
          VB: Sub Begin
      overload: AQuIP.Admin.Infrastructure.IUnitOfWork.Begin*
      modifiers:
        CSharp: []
        VB: []
    - id: AQuIP.Admin.Infrastructure.IUnitOfWork.Commit
      commentId: M:AQuIP.Admin.Infrastructure.IUnitOfWork.Commit
      language: CSharp
      name:
        CSharp: Commit()
        VB: Commit()
      nameWithType:
        CSharp: IUnitOfWork.Commit()
        VB: IUnitOfWork.Commit()
      qualifiedName:
        CSharp: AQuIP.Admin.Infrastructure.IUnitOfWork.Commit()
        VB: AQuIP.Admin.Infrastructure.IUnitOfWork.Commit()
      type: Method
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Infrastructure
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Infrastructure/UnitOfWork.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: Commit
        path: ../AQuIP.Admin/AQuIP.Admin/Infrastructure/UnitOfWork.cs
        startLine: 13
      syntax:
        content:
          CSharp: void Commit()
          VB: Sub Commit
      overload: AQuIP.Admin.Infrastructure.IUnitOfWork.Commit*
      modifiers:
        CSharp: []
        VB: []
    - id: AQuIP.Admin.Infrastructure.IUnitOfWork.Rollback
      commentId: M:AQuIP.Admin.Infrastructure.IUnitOfWork.Rollback
      language: CSharp
      name:
        CSharp: Rollback()
        VB: Rollback()
      nameWithType:
        CSharp: IUnitOfWork.Rollback()
        VB: IUnitOfWork.Rollback()
      qualifiedName:
        CSharp: AQuIP.Admin.Infrastructure.IUnitOfWork.Rollback()
        VB: AQuIP.Admin.Infrastructure.IUnitOfWork.Rollback()
      type: Method
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Infrastructure
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Infrastructure/UnitOfWork.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: Rollback
        path: ../AQuIP.Admin/AQuIP.Admin/Infrastructure/UnitOfWork.cs
        startLine: 14
      syntax:
        content:
          CSharp: void Rollback()
          VB: Sub Rollback
      overload: AQuIP.Admin.Infrastructure.IUnitOfWork.Rollback*
      modifiers:
        CSharp: []
        VB: []
  - id: AQuIP.Admin.Infrastructure.UnitOfWork
    commentId: T:AQuIP.Admin.Infrastructure.UnitOfWork
    language: CSharp
    name:
      CSharp: UnitOfWork
      VB: UnitOfWork
    nameWithType:
      CSharp: UnitOfWork
      VB: UnitOfWork
    qualifiedName:
      CSharp: AQuIP.Admin.Infrastructure.UnitOfWork
      VB: AQuIP.Admin.Infrastructure.UnitOfWork
    type: Class
    assemblies:
    - AQuIP.Admin
    namespace: AQuIP.Admin.Infrastructure
    source:
      remote:
        path: AQuIP.Admin/AQuIP.Admin/Infrastructure/UnitOfWork.cs
        branch: master
        repo: https://github.com/kuttima/MyUserManagement.git
      id: UnitOfWork
      path: ../AQuIP.Admin/AQuIP.Admin/Infrastructure/UnitOfWork.cs
      startLine: 16
    syntax:
      content:
        CSharp: 'public sealed class UnitOfWork : IUnitOfWork, IDisposable'
        VB: >-
          Public NotInheritable Class UnitOfWork

              Implements IUnitOfWork, IDisposable
    inheritance:
    - System.Object
    implements:
    - AQuIP.Admin.Infrastructure.IUnitOfWork
    - System.IDisposable
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - sealed
      - class
      VB:
      - Public
      - NotInheritable
      - Class
    items:
    - isEii: true
      id: AQuIP.Admin.Infrastructure.UnitOfWork.AQuIP#Admin#Infrastructure#IUnitOfWork#Connection
      commentId: P:AQuIP.Admin.Infrastructure.UnitOfWork.AQuIP#Admin#Infrastructure#IUnitOfWork#Connection
      language: CSharp
      name:
        CSharp: IUnitOfWork.Connection
        VB: AQuIP.Admin.Infrastructure.IUnitOfWork.Connection
      nameWithType:
        CSharp: UnitOfWork.IUnitOfWork.Connection
        VB: UnitOfWork.AQuIP.Admin.Infrastructure.IUnitOfWork.Connection
      qualifiedName:
        CSharp: AQuIP.Admin.Infrastructure.UnitOfWork.AQuIP.Admin.Infrastructure.IUnitOfWork.Connection
        VB: AQuIP.Admin.Infrastructure.UnitOfWork.AQuIP.Admin.Infrastructure.IUnitOfWork.Connection
      type: Property
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Infrastructure
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Infrastructure/UnitOfWork.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: AQuIP.Admin.Infrastructure.IUnitOfWork.Connection
        path: ../AQuIP.Admin/AQuIP.Admin/Infrastructure/UnitOfWork.cs
        startLine: 25
      syntax:
        content:
          CSharp: IDbConnection IUnitOfWork.Connection { get; }
          VB: ReadOnly WriteOnly Property AQuIP.Admin.Infrastructure.IUnitOfWork.Connection As IDbConnection Implements IUnitOfWork.Connection
        parameters: []
        return:
          type: System.Data.IDbConnection
      overload: AQuIP.Admin.Infrastructure.UnitOfWork.AQuIP#Admin#Infrastructure#IUnitOfWork#Connection*
      implements:
      - AQuIP.Admin.Infrastructure.IUnitOfWork.Connection
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: AQuIP.Admin.Infrastructure.UnitOfWork.Transaction
      commentId: P:AQuIP.Admin.Infrastructure.UnitOfWork.Transaction
      language: CSharp
      name:
        CSharp: Transaction
        VB: Transaction
      nameWithType:
        CSharp: UnitOfWork.Transaction
        VB: UnitOfWork.Transaction
      qualifiedName:
        CSharp: AQuIP.Admin.Infrastructure.UnitOfWork.Transaction
        VB: AQuIP.Admin.Infrastructure.UnitOfWork.Transaction
      type: Property
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Infrastructure
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Infrastructure/UnitOfWork.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: Transaction
        path: ../AQuIP.Admin/AQuIP.Admin/Infrastructure/UnitOfWork.cs
        startLine: 33
      syntax:
        content:
          CSharp: public IDbTransaction Transaction { get; }
          VB: Public ReadOnly Property Transaction As IDbTransaction
        parameters: []
        return:
          type: System.Data.IDbTransaction
      overload: AQuIP.Admin.Infrastructure.UnitOfWork.Transaction*
      implements:
      - AQuIP.Admin.Infrastructure.IUnitOfWork.Transaction
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: AQuIP.Admin.Infrastructure.UnitOfWork.Begin
      commentId: M:AQuIP.Admin.Infrastructure.UnitOfWork.Begin
      language: CSharp
      name:
        CSharp: Begin()
        VB: Begin()
      nameWithType:
        CSharp: UnitOfWork.Begin()
        VB: UnitOfWork.Begin()
      qualifiedName:
        CSharp: AQuIP.Admin.Infrastructure.UnitOfWork.Begin()
        VB: AQuIP.Admin.Infrastructure.UnitOfWork.Begin()
      type: Method
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Infrastructure
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Infrastructure/UnitOfWork.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: Begin
        path: ../AQuIP.Admin/AQuIP.Admin/Infrastructure/UnitOfWork.cs
        startLine: 41
      syntax:
        content:
          CSharp: public void Begin()
          VB: Public Sub Begin
      overload: AQuIP.Admin.Infrastructure.UnitOfWork.Begin*
      implements:
      - AQuIP.Admin.Infrastructure.IUnitOfWork.Begin
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AQuIP.Admin.Infrastructure.UnitOfWork.Commit
      commentId: M:AQuIP.Admin.Infrastructure.UnitOfWork.Commit
      language: CSharp
      name:
        CSharp: Commit()
        VB: Commit()
      nameWithType:
        CSharp: UnitOfWork.Commit()
        VB: UnitOfWork.Commit()
      qualifiedName:
        CSharp: AQuIP.Admin.Infrastructure.UnitOfWork.Commit()
        VB: AQuIP.Admin.Infrastructure.UnitOfWork.Commit()
      type: Method
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Infrastructure
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Infrastructure/UnitOfWork.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: Commit
        path: ../AQuIP.Admin/AQuIP.Admin/Infrastructure/UnitOfWork.cs
        startLine: 46
      syntax:
        content:
          CSharp: public void Commit()
          VB: Public Sub Commit
      overload: AQuIP.Admin.Infrastructure.UnitOfWork.Commit*
      implements:
      - AQuIP.Admin.Infrastructure.IUnitOfWork.Commit
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AQuIP.Admin.Infrastructure.UnitOfWork.Rollback
      commentId: M:AQuIP.Admin.Infrastructure.UnitOfWork.Rollback
      language: CSharp
      name:
        CSharp: Rollback()
        VB: Rollback()
      nameWithType:
        CSharp: UnitOfWork.Rollback()
        VB: UnitOfWork.Rollback()
      qualifiedName:
        CSharp: AQuIP.Admin.Infrastructure.UnitOfWork.Rollback()
        VB: AQuIP.Admin.Infrastructure.UnitOfWork.Rollback()
      type: Method
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Infrastructure
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Infrastructure/UnitOfWork.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: Rollback
        path: ../AQuIP.Admin/AQuIP.Admin/Infrastructure/UnitOfWork.cs
        startLine: 52
      syntax:
        content:
          CSharp: public void Rollback()
          VB: Public Sub Rollback
      overload: AQuIP.Admin.Infrastructure.UnitOfWork.Rollback*
      implements:
      - AQuIP.Admin.Infrastructure.IUnitOfWork.Rollback
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AQuIP.Admin.Infrastructure.UnitOfWork.Dispose
      commentId: M:AQuIP.Admin.Infrastructure.UnitOfWork.Dispose
      language: CSharp
      name:
        CSharp: Dispose()
        VB: Dispose()
      nameWithType:
        CSharp: UnitOfWork.Dispose()
        VB: UnitOfWork.Dispose()
      qualifiedName:
        CSharp: AQuIP.Admin.Infrastructure.UnitOfWork.Dispose()
        VB: AQuIP.Admin.Infrastructure.UnitOfWork.Dispose()
      type: Method
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Infrastructure
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Infrastructure/UnitOfWork.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: Dispose
        path: ../AQuIP.Admin/AQuIP.Admin/Infrastructure/UnitOfWork.cs
        startLine: 58
      syntax:
        content:
          CSharp: public void Dispose()
          VB: Public Sub Dispose
      overload: AQuIP.Admin.Infrastructure.UnitOfWork.Dispose*
      implements:
      - System.IDisposable.Dispose
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: AQuIP.Admin.Models
  commentId: N:AQuIP.Admin.Models
  language: CSharp
  name:
    CSharp: AQuIP.Admin.Models
    VB: AQuIP.Admin.Models
  nameWithType:
    CSharp: AQuIP.Admin.Models
    VB: AQuIP.Admin.Models
  qualifiedName:
    CSharp: AQuIP.Admin.Models
    VB: AQuIP.Admin.Models
  type: Namespace
  assemblies:
  - AQuIP.Admin
  modifiers: {}
  items:
  - id: AQuIP.Admin.Models.BaseModel
    commentId: T:AQuIP.Admin.Models.BaseModel
    language: CSharp
    name:
      CSharp: BaseModel
      VB: BaseModel
    nameWithType:
      CSharp: BaseModel
      VB: BaseModel
    qualifiedName:
      CSharp: AQuIP.Admin.Models.BaseModel
      VB: AQuIP.Admin.Models.BaseModel
    type: Class
    assemblies:
    - AQuIP.Admin
    namespace: AQuIP.Admin.Models
    source:
      remote:
        path: AQuIP.Admin/AQuIP.Admin/Models/BaseModel.cs
        branch: master
        repo: https://github.com/kuttima/MyUserManagement.git
      id: BaseModel
      path: ../AQuIP.Admin/AQuIP.Admin/Models/BaseModel.cs
      startLine: 4
    syntax:
      content:
        CSharp: public class BaseModel
        VB: Public Class BaseModel
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AQuIP.Admin.Models.BaseModel.#ctor
      commentId: M:AQuIP.Admin.Models.BaseModel.#ctor
      language: CSharp
      name:
        CSharp: BaseModel()
        VB: BaseModel()
      nameWithType:
        CSharp: BaseModel.BaseModel()
        VB: BaseModel.BaseModel()
      qualifiedName:
        CSharp: AQuIP.Admin.Models.BaseModel.BaseModel()
        VB: AQuIP.Admin.Models.BaseModel.BaseModel()
      type: Constructor
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Models
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Models/BaseModel.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: .ctor
        path: ../AQuIP.Admin/AQuIP.Admin/Models/BaseModel.cs
        startLine: 6
      syntax:
        content:
          CSharp: public BaseModel()
          VB: Public Sub New
      overload: AQuIP.Admin.Models.BaseModel.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AQuIP.Admin.Models.BaseModel.LastChangedUser
      commentId: P:AQuIP.Admin.Models.BaseModel.LastChangedUser
      language: CSharp
      name:
        CSharp: LastChangedUser
        VB: LastChangedUser
      nameWithType:
        CSharp: BaseModel.LastChangedUser
        VB: BaseModel.LastChangedUser
      qualifiedName:
        CSharp: AQuIP.Admin.Models.BaseModel.LastChangedUser
        VB: AQuIP.Admin.Models.BaseModel.LastChangedUser
      type: Property
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Models
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Models/BaseModel.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: LastChangedUser
        path: ../AQuIP.Admin/AQuIP.Admin/Models/BaseModel.cs
        startLine: 13
      syntax:
        content:
          CSharp: public string LastChangedUser { get; set; }
          VB: Public Property LastChangedUser As String
        parameters: []
        return:
          type: System.String
      overload: AQuIP.Admin.Models.BaseModel.LastChangedUser*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
  - id: AQuIP.Admin.Models.UserAccount
    commentId: T:AQuIP.Admin.Models.UserAccount
    language: CSharp
    name:
      CSharp: UserAccount
      VB: UserAccount
    nameWithType:
      CSharp: UserAccount
      VB: UserAccount
    qualifiedName:
      CSharp: AQuIP.Admin.Models.UserAccount
      VB: AQuIP.Admin.Models.UserAccount
    type: Class
    assemblies:
    - AQuIP.Admin
    namespace: AQuIP.Admin.Models
    source:
      remote:
        path: AQuIP.Admin/AQuIP.Admin/Models/UserAccount.cs
        branch: master
        repo: https://github.com/kuttima/MyUserManagement.git
      id: UserAccount
      path: ../AQuIP.Admin/AQuIP.Admin/Models/UserAccount.cs
      startLine: 4
    syntax:
      content:
        CSharp: 'public class UserAccount : BaseModel'
        VB: >-
          Public Class UserAccount

              Inherits BaseModel
    inheritance:
    - System.Object
    - AQuIP.Admin.Models.BaseModel
    inheritedMembers:
    - AQuIP.Admin.Models.BaseModel.LastChangedUser
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AQuIP.Admin.Models.UserAccount.UserId
      commentId: P:AQuIP.Admin.Models.UserAccount.UserId
      language: CSharp
      name:
        CSharp: UserId
        VB: UserId
      nameWithType:
        CSharp: UserAccount.UserId
        VB: UserAccount.UserId
      qualifiedName:
        CSharp: AQuIP.Admin.Models.UserAccount.UserId
        VB: AQuIP.Admin.Models.UserAccount.UserId
      type: Property
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Models
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Models/UserAccount.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: UserId
        path: ../AQuIP.Admin/AQuIP.Admin/Models/UserAccount.cs
        startLine: 6
      syntax:
        content:
          CSharp: >-
            [Key]

            public int UserId { get; }
          VB: >-
            <Key>

            Public ReadOnly Property UserId As Integer
        parameters: []
        return:
          type: System.Int32
      overload: AQuIP.Admin.Models.UserAccount.UserId*
      attributes:
      - type: System.ComponentModel.DataAnnotations.KeyAttribute
        ctor: System.ComponentModel.DataAnnotations.KeyAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: AQuIP.Admin.Models.UserAccount.FirstName
      commentId: P:AQuIP.Admin.Models.UserAccount.FirstName
      language: CSharp
      name:
        CSharp: FirstName
        VB: FirstName
      nameWithType:
        CSharp: UserAccount.FirstName
        VB: UserAccount.FirstName
      qualifiedName:
        CSharp: AQuIP.Admin.Models.UserAccount.FirstName
        VB: AQuIP.Admin.Models.UserAccount.FirstName
      type: Property
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Models
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Models/UserAccount.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: FirstName
        path: ../AQuIP.Admin/AQuIP.Admin/Models/UserAccount.cs
        startLine: 9
      syntax:
        content:
          CSharp: >-
            [Required(ErrorMessage = "First name is required.")]

            [Display(Name = "First Name")]

            public string FirstName { get; set; }
          VB: >-
            <Required(ErrorMessage:="First name is required.")>

            <Display(Name:="First Name")>

            Public Property FirstName As String
        parameters: []
        return:
          type: System.String
      overload: AQuIP.Admin.Models.UserAccount.FirstName*
      attributes:
      - type: System.ComponentModel.DataAnnotations.RequiredAttribute
        ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
        arguments: []
        namedArguments:
        - name: ErrorMessage
          type: System.String
          value: First name is required.
      - type: System.ComponentModel.DataAnnotations.DisplayAttribute
        ctor: System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor
        arguments: []
        namedArguments:
        - name: Name
          type: System.String
          value: First Name
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AQuIP.Admin.Models.UserAccount.LastName
      commentId: P:AQuIP.Admin.Models.UserAccount.LastName
      language: CSharp
      name:
        CSharp: LastName
        VB: LastName
      nameWithType:
        CSharp: UserAccount.LastName
        VB: UserAccount.LastName
      qualifiedName:
        CSharp: AQuIP.Admin.Models.UserAccount.LastName
        VB: AQuIP.Admin.Models.UserAccount.LastName
      type: Property
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Models
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Models/UserAccount.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: LastName
        path: ../AQuIP.Admin/AQuIP.Admin/Models/UserAccount.cs
        startLine: 13
      syntax:
        content:
          CSharp: >-
            [Required(ErrorMessage = "Last name is required.")]

            [Display(Name = "Last Name")]

            public string LastName { get; set; }
          VB: >-
            <Required(ErrorMessage:="Last name is required.")>

            <Display(Name:="Last Name")>

            Public Property LastName As String
        parameters: []
        return:
          type: System.String
      overload: AQuIP.Admin.Models.UserAccount.LastName*
      attributes:
      - type: System.ComponentModel.DataAnnotations.RequiredAttribute
        ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
        arguments: []
        namedArguments:
        - name: ErrorMessage
          type: System.String
          value: Last name is required.
      - type: System.ComponentModel.DataAnnotations.DisplayAttribute
        ctor: System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor
        arguments: []
        namedArguments:
        - name: Name
          type: System.String
          value: Last Name
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AQuIP.Admin.Models.UserAccount.UserName
      commentId: P:AQuIP.Admin.Models.UserAccount.UserName
      language: CSharp
      name:
        CSharp: UserName
        VB: UserName
      nameWithType:
        CSharp: UserAccount.UserName
        VB: UserAccount.UserName
      qualifiedName:
        CSharp: AQuIP.Admin.Models.UserAccount.UserName
        VB: AQuIP.Admin.Models.UserAccount.UserName
      type: Property
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Models
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Models/UserAccount.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: UserName
        path: ../AQuIP.Admin/AQuIP.Admin/Models/UserAccount.cs
        startLine: 17
      syntax:
        content:
          CSharp: >-
            [Required(ErrorMessage = "User name is required.")]

            [EmailAddress(ErrorMessage = "User name has to be a valid email address.")]

            [Display(Name = "User Name")]

            public string UserName { get; set; }
          VB: >-
            <Required(ErrorMessage:="User name is required.")>

            <EmailAddress(ErrorMessage:="User name has to be a valid email address.")>

            <Display(Name:="User Name")>

            Public Property UserName As String
        parameters: []
        return:
          type: System.String
      overload: AQuIP.Admin.Models.UserAccount.UserName*
      attributes:
      - type: System.ComponentModel.DataAnnotations.RequiredAttribute
        ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
        arguments: []
        namedArguments:
        - name: ErrorMessage
          type: System.String
          value: User name is required.
      - type: System.ComponentModel.DataAnnotations.EmailAddressAttribute
        ctor: System.ComponentModel.DataAnnotations.EmailAddressAttribute.#ctor
        arguments: []
        namedArguments:
        - name: ErrorMessage
          type: System.String
          value: User name has to be a valid email address.
      - type: System.ComponentModel.DataAnnotations.DisplayAttribute
        ctor: System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor
        arguments: []
        namedArguments:
        - name: Name
          type: System.String
          value: User Name
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AQuIP.Admin.Models.UserAccount.Password
      commentId: P:AQuIP.Admin.Models.UserAccount.Password
      language: CSharp
      name:
        CSharp: Password
        VB: Password
      nameWithType:
        CSharp: UserAccount.Password
        VB: UserAccount.Password
      qualifiedName:
        CSharp: AQuIP.Admin.Models.UserAccount.Password
        VB: AQuIP.Admin.Models.UserAccount.Password
      type: Property
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Models
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Models/UserAccount.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: Password
        path: ../AQuIP.Admin/AQuIP.Admin/Models/UserAccount.cs
        startLine: 22
      syntax:
        content:
          CSharp: >-
            [Required(ErrorMessage = "Password is required.")]

            [DataType(DataType.Password)]

            public string Password { get; set; }
          VB: >-
            <Required(ErrorMessage:="Password is required.")>

            <DataType(DataType.Password)>

            Public Property Password As String
        parameters: []
        return:
          type: System.String
      overload: AQuIP.Admin.Models.UserAccount.Password*
      attributes:
      - type: System.ComponentModel.DataAnnotations.RequiredAttribute
        ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
        arguments: []
        namedArguments:
        - name: ErrorMessage
          type: System.String
          value: Password is required.
      - type: System.ComponentModel.DataAnnotations.DataTypeAttribute
        ctor: System.ComponentModel.DataAnnotations.DataTypeAttribute.#ctor(System.ComponentModel.DataAnnotations.DataType)
        arguments:
        - type: System.ComponentModel.DataAnnotations.DataType
          value: 11
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AQuIP.Admin.Models.UserAccount.Phone
      commentId: P:AQuIP.Admin.Models.UserAccount.Phone
      language: CSharp
      name:
        CSharp: Phone
        VB: Phone
      nameWithType:
        CSharp: UserAccount.Phone
        VB: UserAccount.Phone
      qualifiedName:
        CSharp: AQuIP.Admin.Models.UserAccount.Phone
        VB: AQuIP.Admin.Models.UserAccount.Phone
      type: Property
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Models
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Models/UserAccount.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: Phone
        path: ../AQuIP.Admin/AQuIP.Admin/Models/UserAccount.cs
        startLine: 26
      syntax:
        content:
          CSharp: >-
            [Required(ErrorMessage = "Phone is required.")]

            [DataType(DataType.PhoneNumber)]

            [RegularExpression("^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$", ErrorMessage = "Not a valid phone number.")]

            public string Phone { get; set; }
          VB: >-
            <Required(ErrorMessage:="Phone is required.")>

            <DataType(DataType.PhoneNumber)>

            <RegularExpression("^\(?([0-9]{3})\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$", ErrorMessage:="Not a valid phone number.")>

            Public Property Phone As String
        parameters: []
        return:
          type: System.String
      overload: AQuIP.Admin.Models.UserAccount.Phone*
      attributes:
      - type: System.ComponentModel.DataAnnotations.RequiredAttribute
        ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
        arguments: []
        namedArguments:
        - name: ErrorMessage
          type: System.String
          value: Phone is required.
      - type: System.ComponentModel.DataAnnotations.DataTypeAttribute
        ctor: System.ComponentModel.DataAnnotations.DataTypeAttribute.#ctor(System.ComponentModel.DataAnnotations.DataType)
        arguments:
        - type: System.ComponentModel.DataAnnotations.DataType
          value: 5
      - type: System.ComponentModel.DataAnnotations.RegularExpressionAttribute
        ctor: System.ComponentModel.DataAnnotations.RegularExpressionAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: ^\(?([0-9]{3})\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$
        namedArguments:
        - name: ErrorMessage
          type: System.String
          value: Not a valid phone number.
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AQuIP.Admin.Models.UserAccount.RoleName
      commentId: P:AQuIP.Admin.Models.UserAccount.RoleName
      language: CSharp
      name:
        CSharp: RoleName
        VB: RoleName
      nameWithType:
        CSharp: UserAccount.RoleName
        VB: UserAccount.RoleName
      qualifiedName:
        CSharp: AQuIP.Admin.Models.UserAccount.RoleName
        VB: AQuIP.Admin.Models.UserAccount.RoleName
      type: Property
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Models
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Models/UserAccount.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: RoleName
        path: ../AQuIP.Admin/AQuIP.Admin/Models/UserAccount.cs
        startLine: 31
      syntax:
        content:
          CSharp: >-
            [Required(ErrorMessage = "Role is required.")]

            [Display(Name = "Role")]

            public string RoleName { get; set; }
          VB: >-
            <Required(ErrorMessage:="Role is required.")>

            <Display(Name:="Role")>

            Public Property RoleName As String
        parameters: []
        return:
          type: System.String
      overload: AQuIP.Admin.Models.UserAccount.RoleName*
      attributes:
      - type: System.ComponentModel.DataAnnotations.RequiredAttribute
        ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
        arguments: []
        namedArguments:
        - name: ErrorMessage
          type: System.String
          value: Role is required.
      - type: System.ComponentModel.DataAnnotations.DisplayAttribute
        ctor: System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor
        arguments: []
        namedArguments:
        - name: Name
          type: System.String
          value: Role
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AQuIP.Admin.Models.UserAccount.Name
      commentId: P:AQuIP.Admin.Models.UserAccount.Name
      language: CSharp
      name:
        CSharp: Name
        VB: Name
      nameWithType:
        CSharp: UserAccount.Name
        VB: UserAccount.Name
      qualifiedName:
        CSharp: AQuIP.Admin.Models.UserAccount.Name
        VB: AQuIP.Admin.Models.UserAccount.Name
      type: Property
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Models
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Models/UserAccount.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: Name
        path: ../AQuIP.Admin/AQuIP.Admin/Models/UserAccount.cs
        startLine: 35
      syntax:
        content:
          CSharp: >-
            [Required(ErrorMessage = "Organization name is required.")]

            [Display(Name = "Organization")]

            public string Name { get; set; }
          VB: >-
            <Required(ErrorMessage:="Organization name is required.")>

            <Display(Name:="Organization")>

            Public Property Name As String
        parameters: []
        return:
          type: System.String
      overload: AQuIP.Admin.Models.UserAccount.Name*
      attributes:
      - type: System.ComponentModel.DataAnnotations.RequiredAttribute
        ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
        arguments: []
        namedArguments:
        - name: ErrorMessage
          type: System.String
          value: Organization name is required.
      - type: System.ComponentModel.DataAnnotations.DisplayAttribute
        ctor: System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor
        arguments: []
        namedArguments:
        - name: Name
          type: System.String
          value: Organization
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
  - id: AQuIP.Admin.Models.CreateUserDTO
    commentId: T:AQuIP.Admin.Models.CreateUserDTO
    language: CSharp
    name:
      CSharp: CreateUserDTO
      VB: CreateUserDTO
    nameWithType:
      CSharp: CreateUserDTO
      VB: CreateUserDTO
    qualifiedName:
      CSharp: AQuIP.Admin.Models.CreateUserDTO
      VB: AQuIP.Admin.Models.CreateUserDTO
    type: Class
    assemblies:
    - AQuIP.Admin
    namespace: AQuIP.Admin.Models
    source:
      remote:
        path: AQuIP.Admin/AQuIP.Admin/Models/UserDTOs.cs
        branch: master
        repo: https://github.com/kuttima/MyUserManagement.git
      id: CreateUserDTO
      path: ../AQuIP.Admin/AQuIP.Admin/Models/UserDTOs.cs
      startLine: 4
    syntax:
      content:
        CSharp: public class CreateUserDTO
        VB: Public Class CreateUserDTO
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AQuIP.Admin.Models.CreateUserDTO.UserLogin
      commentId: P:AQuIP.Admin.Models.CreateUserDTO.UserLogin
      language: CSharp
      name:
        CSharp: UserLogin
        VB: UserLogin
      nameWithType:
        CSharp: CreateUserDTO.UserLogin
        VB: CreateUserDTO.UserLogin
      qualifiedName:
        CSharp: AQuIP.Admin.Models.CreateUserDTO.UserLogin
        VB: AQuIP.Admin.Models.CreateUserDTO.UserLogin
      type: Property
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Models
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Models/UserDTOs.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: UserLogin
        path: ../AQuIP.Admin/AQuIP.Admin/Models/UserDTOs.cs
        startLine: 6
      syntax:
        content:
          CSharp: public string UserLogin { get; set; }
          VB: Public Property UserLogin As String
        parameters: []
        return:
          type: System.String
      overload: AQuIP.Admin.Models.CreateUserDTO.UserLogin*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AQuIP.Admin.Models.CreateUserDTO.FirstName
      commentId: P:AQuIP.Admin.Models.CreateUserDTO.FirstName
      language: CSharp
      name:
        CSharp: FirstName
        VB: FirstName
      nameWithType:
        CSharp: CreateUserDTO.FirstName
        VB: CreateUserDTO.FirstName
      qualifiedName:
        CSharp: AQuIP.Admin.Models.CreateUserDTO.FirstName
        VB: AQuIP.Admin.Models.CreateUserDTO.FirstName
      type: Property
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Models
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Models/UserDTOs.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: FirstName
        path: ../AQuIP.Admin/AQuIP.Admin/Models/UserDTOs.cs
        startLine: 7
      syntax:
        content:
          CSharp: public string FirstName { get; set; }
          VB: Public Property FirstName As String
        parameters: []
        return:
          type: System.String
      overload: AQuIP.Admin.Models.CreateUserDTO.FirstName*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AQuIP.Admin.Models.CreateUserDTO.LastName
      commentId: P:AQuIP.Admin.Models.CreateUserDTO.LastName
      language: CSharp
      name:
        CSharp: LastName
        VB: LastName
      nameWithType:
        CSharp: CreateUserDTO.LastName
        VB: CreateUserDTO.LastName
      qualifiedName:
        CSharp: AQuIP.Admin.Models.CreateUserDTO.LastName
        VB: AQuIP.Admin.Models.CreateUserDTO.LastName
      type: Property
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Models
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Models/UserDTOs.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: LastName
        path: ../AQuIP.Admin/AQuIP.Admin/Models/UserDTOs.cs
        startLine: 8
      syntax:
        content:
          CSharp: public string LastName { get; set; }
          VB: Public Property LastName As String
        parameters: []
        return:
          type: System.String
      overload: AQuIP.Admin.Models.CreateUserDTO.LastName*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AQuIP.Admin.Models.CreateUserDTO.Password
      commentId: P:AQuIP.Admin.Models.CreateUserDTO.Password
      language: CSharp
      name:
        CSharp: Password
        VB: Password
      nameWithType:
        CSharp: CreateUserDTO.Password
        VB: CreateUserDTO.Password
      qualifiedName:
        CSharp: AQuIP.Admin.Models.CreateUserDTO.Password
        VB: AQuIP.Admin.Models.CreateUserDTO.Password
      type: Property
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Models
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Models/UserDTOs.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: Password
        path: ../AQuIP.Admin/AQuIP.Admin/Models/UserDTOs.cs
        startLine: 9
      syntax:
        content:
          CSharp: public string Password { get; set; }
          VB: Public Property Password As String
        parameters: []
        return:
          type: System.String
      overload: AQuIP.Admin.Models.CreateUserDTO.Password*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AQuIP.Admin.Models.CreateUserDTO.Phone
      commentId: P:AQuIP.Admin.Models.CreateUserDTO.Phone
      language: CSharp
      name:
        CSharp: Phone
        VB: Phone
      nameWithType:
        CSharp: CreateUserDTO.Phone
        VB: CreateUserDTO.Phone
      qualifiedName:
        CSharp: AQuIP.Admin.Models.CreateUserDTO.Phone
        VB: AQuIP.Admin.Models.CreateUserDTO.Phone
      type: Property
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Models
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Models/UserDTOs.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: Phone
        path: ../AQuIP.Admin/AQuIP.Admin/Models/UserDTOs.cs
        startLine: 10
      syntax:
        content:
          CSharp: public string Phone { get; set; }
          VB: Public Property Phone As String
        parameters: []
        return:
          type: System.String
      overload: AQuIP.Admin.Models.CreateUserDTO.Phone*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AQuIP.Admin.Models.CreateUserDTO.Role
      commentId: P:AQuIP.Admin.Models.CreateUserDTO.Role
      language: CSharp
      name:
        CSharp: Role
        VB: Role
      nameWithType:
        CSharp: CreateUserDTO.Role
        VB: CreateUserDTO.Role
      qualifiedName:
        CSharp: AQuIP.Admin.Models.CreateUserDTO.Role
        VB: AQuIP.Admin.Models.CreateUserDTO.Role
      type: Property
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Models
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Models/UserDTOs.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: Role
        path: ../AQuIP.Admin/AQuIP.Admin/Models/UserDTOs.cs
        startLine: 11
      syntax:
        content:
          CSharp: public string Role { get; set; }
          VB: Public Property Role As String
        parameters: []
        return:
          type: System.String
      overload: AQuIP.Admin.Models.CreateUserDTO.Role*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AQuIP.Admin.Models.CreateUserDTO.Organization
      commentId: P:AQuIP.Admin.Models.CreateUserDTO.Organization
      language: CSharp
      name:
        CSharp: Organization
        VB: Organization
      nameWithType:
        CSharp: CreateUserDTO.Organization
        VB: CreateUserDTO.Organization
      qualifiedName:
        CSharp: AQuIP.Admin.Models.CreateUserDTO.Organization
        VB: AQuIP.Admin.Models.CreateUserDTO.Organization
      type: Property
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Models
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Models/UserDTOs.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: Organization
        path: ../AQuIP.Admin/AQuIP.Admin/Models/UserDTOs.cs
        startLine: 12
      syntax:
        content:
          CSharp: public string Organization { get; set; }
          VB: Public Property Organization As String
        parameters: []
        return:
          type: System.String
      overload: AQuIP.Admin.Models.CreateUserDTO.Organization*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
  - id: AQuIP.Admin.Models.CreateAssetViewerDTO
    commentId: T:AQuIP.Admin.Models.CreateAssetViewerDTO
    language: CSharp
    name:
      CSharp: CreateAssetViewerDTO
      VB: CreateAssetViewerDTO
    nameWithType:
      CSharp: CreateAssetViewerDTO
      VB: CreateAssetViewerDTO
    qualifiedName:
      CSharp: AQuIP.Admin.Models.CreateAssetViewerDTO
      VB: AQuIP.Admin.Models.CreateAssetViewerDTO
    type: Class
    assemblies:
    - AQuIP.Admin
    namespace: AQuIP.Admin.Models
    source:
      remote:
        path: AQuIP.Admin/AQuIP.Admin/Models/UserDTOs.cs
        branch: master
        repo: https://github.com/kuttima/MyUserManagement.git
      id: CreateAssetViewerDTO
      path: ../AQuIP.Admin/AQuIP.Admin/Models/UserDTOs.cs
      startLine: 16
    syntax:
      content:
        CSharp: public class CreateAssetViewerDTO
        VB: Public Class CreateAssetViewerDTO
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AQuIP.Admin.Models.CreateAssetViewerDTO.UserLogin
      commentId: P:AQuIP.Admin.Models.CreateAssetViewerDTO.UserLogin
      language: CSharp
      name:
        CSharp: UserLogin
        VB: UserLogin
      nameWithType:
        CSharp: CreateAssetViewerDTO.UserLogin
        VB: CreateAssetViewerDTO.UserLogin
      qualifiedName:
        CSharp: AQuIP.Admin.Models.CreateAssetViewerDTO.UserLogin
        VB: AQuIP.Admin.Models.CreateAssetViewerDTO.UserLogin
      type: Property
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Models
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Models/UserDTOs.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: UserLogin
        path: ../AQuIP.Admin/AQuIP.Admin/Models/UserDTOs.cs
        startLine: 18
      syntax:
        content:
          CSharp: public string UserLogin { get; set; }
          VB: Public Property UserLogin As String
        parameters: []
        return:
          type: System.String
      overload: AQuIP.Admin.Models.CreateAssetViewerDTO.UserLogin*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AQuIP.Admin.Models.CreateAssetViewerDTO.FirstName
      commentId: P:AQuIP.Admin.Models.CreateAssetViewerDTO.FirstName
      language: CSharp
      name:
        CSharp: FirstName
        VB: FirstName
      nameWithType:
        CSharp: CreateAssetViewerDTO.FirstName
        VB: CreateAssetViewerDTO.FirstName
      qualifiedName:
        CSharp: AQuIP.Admin.Models.CreateAssetViewerDTO.FirstName
        VB: AQuIP.Admin.Models.CreateAssetViewerDTO.FirstName
      type: Property
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Models
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Models/UserDTOs.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: FirstName
        path: ../AQuIP.Admin/AQuIP.Admin/Models/UserDTOs.cs
        startLine: 19
      syntax:
        content:
          CSharp: public string FirstName { get; set; }
          VB: Public Property FirstName As String
        parameters: []
        return:
          type: System.String
      overload: AQuIP.Admin.Models.CreateAssetViewerDTO.FirstName*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AQuIP.Admin.Models.CreateAssetViewerDTO.LastName
      commentId: P:AQuIP.Admin.Models.CreateAssetViewerDTO.LastName
      language: CSharp
      name:
        CSharp: LastName
        VB: LastName
      nameWithType:
        CSharp: CreateAssetViewerDTO.LastName
        VB: CreateAssetViewerDTO.LastName
      qualifiedName:
        CSharp: AQuIP.Admin.Models.CreateAssetViewerDTO.LastName
        VB: AQuIP.Admin.Models.CreateAssetViewerDTO.LastName
      type: Property
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Models
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Models/UserDTOs.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: LastName
        path: ../AQuIP.Admin/AQuIP.Admin/Models/UserDTOs.cs
        startLine: 20
      syntax:
        content:
          CSharp: public string LastName { get; set; }
          VB: Public Property LastName As String
        parameters: []
        return:
          type: System.String
      overload: AQuIP.Admin.Models.CreateAssetViewerDTO.LastName*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AQuIP.Admin.Models.CreateAssetViewerDTO.Password
      commentId: P:AQuIP.Admin.Models.CreateAssetViewerDTO.Password
      language: CSharp
      name:
        CSharp: Password
        VB: Password
      nameWithType:
        CSharp: CreateAssetViewerDTO.Password
        VB: CreateAssetViewerDTO.Password
      qualifiedName:
        CSharp: AQuIP.Admin.Models.CreateAssetViewerDTO.Password
        VB: AQuIP.Admin.Models.CreateAssetViewerDTO.Password
      type: Property
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Models
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Models/UserDTOs.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: Password
        path: ../AQuIP.Admin/AQuIP.Admin/Models/UserDTOs.cs
        startLine: 21
      syntax:
        content:
          CSharp: public string Password { get; set; }
          VB: Public Property Password As String
        parameters: []
        return:
          type: System.String
      overload: AQuIP.Admin.Models.CreateAssetViewerDTO.Password*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AQuIP.Admin.Models.CreateAssetViewerDTO.Phone
      commentId: P:AQuIP.Admin.Models.CreateAssetViewerDTO.Phone
      language: CSharp
      name:
        CSharp: Phone
        VB: Phone
      nameWithType:
        CSharp: CreateAssetViewerDTO.Phone
        VB: CreateAssetViewerDTO.Phone
      qualifiedName:
        CSharp: AQuIP.Admin.Models.CreateAssetViewerDTO.Phone
        VB: AQuIP.Admin.Models.CreateAssetViewerDTO.Phone
      type: Property
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Models
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Models/UserDTOs.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: Phone
        path: ../AQuIP.Admin/AQuIP.Admin/Models/UserDTOs.cs
        startLine: 22
      syntax:
        content:
          CSharp: public string Phone { get; set; }
          VB: Public Property Phone As String
        parameters: []
        return:
          type: System.String
      overload: AQuIP.Admin.Models.CreateAssetViewerDTO.Phone*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
  - id: AQuIP.Admin.Models.LoginViewModel
    commentId: T:AQuIP.Admin.Models.LoginViewModel
    language: CSharp
    name:
      CSharp: LoginViewModel
      VB: LoginViewModel
    nameWithType:
      CSharp: LoginViewModel
      VB: LoginViewModel
    qualifiedName:
      CSharp: AQuIP.Admin.Models.LoginViewModel
      VB: AQuIP.Admin.Models.LoginViewModel
    type: Class
    assemblies:
    - AQuIP.Admin
    namespace: AQuIP.Admin.Models
    source:
      remote:
        path: AQuIP.Admin/AQuIP.Admin/Models/UserViewModels.cs
        branch: master
        repo: https://github.com/kuttima/MyUserManagement.git
      id: LoginViewModel
      path: ../AQuIP.Admin/AQuIP.Admin/Models/UserViewModels.cs
      startLine: 7
    syntax:
      content:
        CSharp: public class LoginViewModel
        VB: Public Class LoginViewModel
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AQuIP.Admin.Models.LoginViewModel.LoginName
      commentId: P:AQuIP.Admin.Models.LoginViewModel.LoginName
      language: CSharp
      name:
        CSharp: LoginName
        VB: LoginName
      nameWithType:
        CSharp: LoginViewModel.LoginName
        VB: LoginViewModel.LoginName
      qualifiedName:
        CSharp: AQuIP.Admin.Models.LoginViewModel.LoginName
        VB: AQuIP.Admin.Models.LoginViewModel.LoginName
      type: Property
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Models
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Models/UserViewModels.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: LoginName
        path: ../AQuIP.Admin/AQuIP.Admin/Models/UserViewModels.cs
        startLine: 10
      syntax:
        content:
          CSharp: >-
            [Required(ErrorMessage = "User name is required.")]

            [EmailAddress(ErrorMessage = "User name has to be a valid email address.")]

            [Display(Name = "User Name")]

            public string LoginName { get; set; }
          VB: >-
            <Required(ErrorMessage:="User name is required.")>

            <EmailAddress(ErrorMessage:="User name has to be a valid email address.")>

            <Display(Name:="User Name")>

            Public Property LoginName As String
        parameters: []
        return:
          type: System.String
      overload: AQuIP.Admin.Models.LoginViewModel.LoginName*
      attributes:
      - type: System.ComponentModel.DataAnnotations.RequiredAttribute
        ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
        arguments: []
        namedArguments:
        - name: ErrorMessage
          type: System.String
          value: User name is required.
      - type: System.ComponentModel.DataAnnotations.EmailAddressAttribute
        ctor: System.ComponentModel.DataAnnotations.EmailAddressAttribute.#ctor
        arguments: []
        namedArguments:
        - name: ErrorMessage
          type: System.String
          value: User name has to be a valid email address.
      - type: System.ComponentModel.DataAnnotations.DisplayAttribute
        ctor: System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor
        arguments: []
        namedArguments:
        - name: Name
          type: System.String
          value: User Name
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AQuIP.Admin.Models.LoginViewModel.Pwd
      commentId: P:AQuIP.Admin.Models.LoginViewModel.Pwd
      language: CSharp
      name:
        CSharp: Pwd
        VB: Pwd
      nameWithType:
        CSharp: LoginViewModel.Pwd
        VB: LoginViewModel.Pwd
      qualifiedName:
        CSharp: AQuIP.Admin.Models.LoginViewModel.Pwd
        VB: AQuIP.Admin.Models.LoginViewModel.Pwd
      type: Property
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Models
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Models/UserViewModels.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: Pwd
        path: ../AQuIP.Admin/AQuIP.Admin/Models/UserViewModels.cs
        startLine: 15
      syntax:
        content:
          CSharp: >-
            [Required(ErrorMessage = "Password is required.")]

            [DataType(DataType.Password)]

            [Display(Name = "Password")]

            public string Pwd { get; set; }
          VB: >-
            <Required(ErrorMessage:="Password is required.")>

            <DataType(DataType.Password)>

            <Display(Name:="Password")>

            Public Property Pwd As String
        parameters: []
        return:
          type: System.String
      overload: AQuIP.Admin.Models.LoginViewModel.Pwd*
      attributes:
      - type: System.ComponentModel.DataAnnotations.RequiredAttribute
        ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
        arguments: []
        namedArguments:
        - name: ErrorMessage
          type: System.String
          value: Password is required.
      - type: System.ComponentModel.DataAnnotations.DataTypeAttribute
        ctor: System.ComponentModel.DataAnnotations.DataTypeAttribute.#ctor(System.ComponentModel.DataAnnotations.DataType)
        arguments:
        - type: System.ComponentModel.DataAnnotations.DataType
          value: 11
      - type: System.ComponentModel.DataAnnotations.DisplayAttribute
        ctor: System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor
        arguments: []
        namedArguments:
        - name: Name
          type: System.String
          value: Password
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
  - id: AQuIP.Admin.Models.CreateUserViewModel
    commentId: T:AQuIP.Admin.Models.CreateUserViewModel
    language: CSharp
    name:
      CSharp: CreateUserViewModel
      VB: CreateUserViewModel
    nameWithType:
      CSharp: CreateUserViewModel
      VB: CreateUserViewModel
    qualifiedName:
      CSharp: AQuIP.Admin.Models.CreateUserViewModel
      VB: AQuIP.Admin.Models.CreateUserViewModel
    type: Class
    assemblies:
    - AQuIP.Admin
    namespace: AQuIP.Admin.Models
    source:
      remote:
        path: AQuIP.Admin/AQuIP.Admin/Models/UserViewModels.cs
        branch: master
        repo: https://github.com/kuttima/MyUserManagement.git
      id: CreateUserViewModel
      path: ../AQuIP.Admin/AQuIP.Admin/Models/UserViewModels.cs
      startLine: 22
    syntax:
      content:
        CSharp: public class CreateUserViewModel
        VB: Public Class CreateUserViewModel
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AQuIP.Admin.Models.CreateUserViewModel.UserLogin
      commentId: P:AQuIP.Admin.Models.CreateUserViewModel.UserLogin
      language: CSharp
      name:
        CSharp: UserLogin
        VB: UserLogin
      nameWithType:
        CSharp: CreateUserViewModel.UserLogin
        VB: CreateUserViewModel.UserLogin
      qualifiedName:
        CSharp: AQuIP.Admin.Models.CreateUserViewModel.UserLogin
        VB: AQuIP.Admin.Models.CreateUserViewModel.UserLogin
      type: Property
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Models
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Models/UserViewModels.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: UserLogin
        path: ../AQuIP.Admin/AQuIP.Admin/Models/UserViewModels.cs
        startLine: 25
      syntax:
        content:
          CSharp: >-
            [Required(ErrorMessage = "User name is required.")]

            [EmailAddress(ErrorMessage = "User name has to be a valid email address.")]

            [Display(Name = "User Name")]

            public string UserLogin { get; set; }
          VB: >-
            <Required(ErrorMessage:="User name is required.")>

            <EmailAddress(ErrorMessage:="User name has to be a valid email address.")>

            <Display(Name:="User Name")>

            Public Property UserLogin As String
        parameters: []
        return:
          type: System.String
      overload: AQuIP.Admin.Models.CreateUserViewModel.UserLogin*
      attributes:
      - type: System.ComponentModel.DataAnnotations.RequiredAttribute
        ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
        arguments: []
        namedArguments:
        - name: ErrorMessage
          type: System.String
          value: User name is required.
      - type: System.ComponentModel.DataAnnotations.EmailAddressAttribute
        ctor: System.ComponentModel.DataAnnotations.EmailAddressAttribute.#ctor
        arguments: []
        namedArguments:
        - name: ErrorMessage
          type: System.String
          value: User name has to be a valid email address.
      - type: System.ComponentModel.DataAnnotations.DisplayAttribute
        ctor: System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor
        arguments: []
        namedArguments:
        - name: Name
          type: System.String
          value: User Name
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AQuIP.Admin.Models.CreateUserViewModel.FirstName
      commentId: P:AQuIP.Admin.Models.CreateUserViewModel.FirstName
      language: CSharp
      name:
        CSharp: FirstName
        VB: FirstName
      nameWithType:
        CSharp: CreateUserViewModel.FirstName
        VB: CreateUserViewModel.FirstName
      qualifiedName:
        CSharp: AQuIP.Admin.Models.CreateUserViewModel.FirstName
        VB: AQuIP.Admin.Models.CreateUserViewModel.FirstName
      type: Property
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Models
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Models/UserViewModels.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: FirstName
        path: ../AQuIP.Admin/AQuIP.Admin/Models/UserViewModels.cs
        startLine: 30
      syntax:
        content:
          CSharp: >-
            [Required(ErrorMessage = "First name is required.")]

            [Display(Name = "First Name")]

            public string FirstName { get; set; }
          VB: >-
            <Required(ErrorMessage:="First name is required.")>

            <Display(Name:="First Name")>

            Public Property FirstName As String
        parameters: []
        return:
          type: System.String
      overload: AQuIP.Admin.Models.CreateUserViewModel.FirstName*
      attributes:
      - type: System.ComponentModel.DataAnnotations.RequiredAttribute
        ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
        arguments: []
        namedArguments:
        - name: ErrorMessage
          type: System.String
          value: First name is required.
      - type: System.ComponentModel.DataAnnotations.DisplayAttribute
        ctor: System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor
        arguments: []
        namedArguments:
        - name: Name
          type: System.String
          value: First Name
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AQuIP.Admin.Models.CreateUserViewModel.LastName
      commentId: P:AQuIP.Admin.Models.CreateUserViewModel.LastName
      language: CSharp
      name:
        CSharp: LastName
        VB: LastName
      nameWithType:
        CSharp: CreateUserViewModel.LastName
        VB: CreateUserViewModel.LastName
      qualifiedName:
        CSharp: AQuIP.Admin.Models.CreateUserViewModel.LastName
        VB: AQuIP.Admin.Models.CreateUserViewModel.LastName
      type: Property
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Models
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Models/UserViewModels.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: LastName
        path: ../AQuIP.Admin/AQuIP.Admin/Models/UserViewModels.cs
        startLine: 34
      syntax:
        content:
          CSharp: >-
            [Required(ErrorMessage = "Last name is required.")]

            [Display(Name = "Last Name")]

            public string LastName { get; set; }
          VB: >-
            <Required(ErrorMessage:="Last name is required.")>

            <Display(Name:="Last Name")>

            Public Property LastName As String
        parameters: []
        return:
          type: System.String
      overload: AQuIP.Admin.Models.CreateUserViewModel.LastName*
      attributes:
      - type: System.ComponentModel.DataAnnotations.RequiredAttribute
        ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
        arguments: []
        namedArguments:
        - name: ErrorMessage
          type: System.String
          value: Last name is required.
      - type: System.ComponentModel.DataAnnotations.DisplayAttribute
        ctor: System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor
        arguments: []
        namedArguments:
        - name: Name
          type: System.String
          value: Last Name
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AQuIP.Admin.Models.CreateUserViewModel.Password
      commentId: P:AQuIP.Admin.Models.CreateUserViewModel.Password
      language: CSharp
      name:
        CSharp: Password
        VB: Password
      nameWithType:
        CSharp: CreateUserViewModel.Password
        VB: CreateUserViewModel.Password
      qualifiedName:
        CSharp: AQuIP.Admin.Models.CreateUserViewModel.Password
        VB: AQuIP.Admin.Models.CreateUserViewModel.Password
      type: Property
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Models
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Models/UserViewModels.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: Password
        path: ../AQuIP.Admin/AQuIP.Admin/Models/UserViewModels.cs
        startLine: 38
      syntax:
        content:
          CSharp: >-
            [Required(ErrorMessage = "Password is required.")]

            [DataType(DataType.Password)]

            public string Password { get; set; }
          VB: >-
            <Required(ErrorMessage:="Password is required.")>

            <DataType(DataType.Password)>

            Public Property Password As String
        parameters: []
        return:
          type: System.String
      overload: AQuIP.Admin.Models.CreateUserViewModel.Password*
      attributes:
      - type: System.ComponentModel.DataAnnotations.RequiredAttribute
        ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
        arguments: []
        namedArguments:
        - name: ErrorMessage
          type: System.String
          value: Password is required.
      - type: System.ComponentModel.DataAnnotations.DataTypeAttribute
        ctor: System.ComponentModel.DataAnnotations.DataTypeAttribute.#ctor(System.ComponentModel.DataAnnotations.DataType)
        arguments:
        - type: System.ComponentModel.DataAnnotations.DataType
          value: 11
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AQuIP.Admin.Models.CreateUserViewModel.Phone
      commentId: P:AQuIP.Admin.Models.CreateUserViewModel.Phone
      language: CSharp
      name:
        CSharp: Phone
        VB: Phone
      nameWithType:
        CSharp: CreateUserViewModel.Phone
        VB: CreateUserViewModel.Phone
      qualifiedName:
        CSharp: AQuIP.Admin.Models.CreateUserViewModel.Phone
        VB: AQuIP.Admin.Models.CreateUserViewModel.Phone
      type: Property
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Models
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Models/UserViewModels.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: Phone
        path: ../AQuIP.Admin/AQuIP.Admin/Models/UserViewModels.cs
        startLine: 42
      syntax:
        content:
          CSharp: >-
            [Required(ErrorMessage = "Phone is required.")]

            [DataType(DataType.PhoneNumber)]

            [RegularExpression("^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$", ErrorMessage = "Not a valid phone number.")]

            public string Phone { get; set; }
          VB: >-
            <Required(ErrorMessage:="Phone is required.")>

            <DataType(DataType.PhoneNumber)>

            <RegularExpression("^\(?([0-9]{3})\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$", ErrorMessage:="Not a valid phone number.")>

            Public Property Phone As String
        parameters: []
        return:
          type: System.String
      overload: AQuIP.Admin.Models.CreateUserViewModel.Phone*
      attributes:
      - type: System.ComponentModel.DataAnnotations.RequiredAttribute
        ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
        arguments: []
        namedArguments:
        - name: ErrorMessage
          type: System.String
          value: Phone is required.
      - type: System.ComponentModel.DataAnnotations.DataTypeAttribute
        ctor: System.ComponentModel.DataAnnotations.DataTypeAttribute.#ctor(System.ComponentModel.DataAnnotations.DataType)
        arguments:
        - type: System.ComponentModel.DataAnnotations.DataType
          value: 5
      - type: System.ComponentModel.DataAnnotations.RegularExpressionAttribute
        ctor: System.ComponentModel.DataAnnotations.RegularExpressionAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: ^\(?([0-9]{3})\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$
        namedArguments:
        - name: ErrorMessage
          type: System.String
          value: Not a valid phone number.
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AQuIP.Admin.Models.CreateUserViewModel.Role
      commentId: P:AQuIP.Admin.Models.CreateUserViewModel.Role
      language: CSharp
      name:
        CSharp: Role
        VB: Role
      nameWithType:
        CSharp: CreateUserViewModel.Role
        VB: CreateUserViewModel.Role
      qualifiedName:
        CSharp: AQuIP.Admin.Models.CreateUserViewModel.Role
        VB: AQuIP.Admin.Models.CreateUserViewModel.Role
      type: Property
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Models
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Models/UserViewModels.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: Role
        path: ../AQuIP.Admin/AQuIP.Admin/Models/UserViewModels.cs
        startLine: 47
      syntax:
        content:
          CSharp: >-
            [Required(ErrorMessage = "Role is required.")]

            [Display(Name = "Role")]

            public string Role { get; set; }
          VB: >-
            <Required(ErrorMessage:="Role is required.")>

            <Display(Name:="Role")>

            Public Property Role As String
        parameters: []
        return:
          type: System.String
      overload: AQuIP.Admin.Models.CreateUserViewModel.Role*
      attributes:
      - type: System.ComponentModel.DataAnnotations.RequiredAttribute
        ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
        arguments: []
        namedArguments:
        - name: ErrorMessage
          type: System.String
          value: Role is required.
      - type: System.ComponentModel.DataAnnotations.DisplayAttribute
        ctor: System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor
        arguments: []
        namedArguments:
        - name: Name
          type: System.String
          value: Role
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AQuIP.Admin.Models.CreateUserViewModel.Roles
      commentId: P:AQuIP.Admin.Models.CreateUserViewModel.Roles
      language: CSharp
      name:
        CSharp: Roles
        VB: Roles
      nameWithType:
        CSharp: CreateUserViewModel.Roles
        VB: CreateUserViewModel.Roles
      qualifiedName:
        CSharp: AQuIP.Admin.Models.CreateUserViewModel.Roles
        VB: AQuIP.Admin.Models.CreateUserViewModel.Roles
      type: Property
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Models
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Models/UserViewModels.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: Roles
        path: ../AQuIP.Admin/AQuIP.Admin/Models/UserViewModels.cs
        startLine: 50
      syntax:
        content:
          CSharp: public IEnumerable<SelectListItem> Roles { get; set; }
          VB: Public Property Roles As IEnumerable(Of SelectListItem)
        parameters: []
        return:
          type: System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem}
      overload: AQuIP.Admin.Models.CreateUserViewModel.Roles*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AQuIP.Admin.Models.CreateUserViewModel.Organization
      commentId: P:AQuIP.Admin.Models.CreateUserViewModel.Organization
      language: CSharp
      name:
        CSharp: Organization
        VB: Organization
      nameWithType:
        CSharp: CreateUserViewModel.Organization
        VB: CreateUserViewModel.Organization
      qualifiedName:
        CSharp: AQuIP.Admin.Models.CreateUserViewModel.Organization
        VB: AQuIP.Admin.Models.CreateUserViewModel.Organization
      type: Property
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Models
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Models/UserViewModels.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: Organization
        path: ../AQuIP.Admin/AQuIP.Admin/Models/UserViewModels.cs
        startLine: 52
      syntax:
        content:
          CSharp: >-
            [Required(ErrorMessage = "Organization name is required.")]

            [Display(Name = "Organization")]

            public string Organization { get; set; }
          VB: >-
            <Required(ErrorMessage:="Organization name is required.")>

            <Display(Name:="Organization")>

            Public Property Organization As String
        parameters: []
        return:
          type: System.String
      overload: AQuIP.Admin.Models.CreateUserViewModel.Organization*
      attributes:
      - type: System.ComponentModel.DataAnnotations.RequiredAttribute
        ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
        arguments: []
        namedArguments:
        - name: ErrorMessage
          type: System.String
          value: Organization name is required.
      - type: System.ComponentModel.DataAnnotations.DisplayAttribute
        ctor: System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor
        arguments: []
        namedArguments:
        - name: Name
          type: System.String
          value: Organization
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
  - id: AQuIP.Admin.Models.ResetPasswordViewModel
    commentId: T:AQuIP.Admin.Models.ResetPasswordViewModel
    language: CSharp
    name:
      CSharp: ResetPasswordViewModel
      VB: ResetPasswordViewModel
    nameWithType:
      CSharp: ResetPasswordViewModel
      VB: ResetPasswordViewModel
    qualifiedName:
      CSharp: AQuIP.Admin.Models.ResetPasswordViewModel
      VB: AQuIP.Admin.Models.ResetPasswordViewModel
    type: Class
    assemblies:
    - AQuIP.Admin
    namespace: AQuIP.Admin.Models
    source:
      remote:
        path: AQuIP.Admin/AQuIP.Admin/Models/UserViewModels.cs
        branch: master
        repo: https://github.com/kuttima/MyUserManagement.git
      id: ResetPasswordViewModel
      path: ../AQuIP.Admin/AQuIP.Admin/Models/UserViewModels.cs
      startLine: 59
    syntax:
      content:
        CSharp: 'public class ResetPasswordViewModel : BaseModel'
        VB: >-
          Public Class ResetPasswordViewModel

              Inherits BaseModel
    inheritance:
    - System.Object
    - AQuIP.Admin.Models.BaseModel
    inheritedMembers:
    - AQuIP.Admin.Models.BaseModel.LastChangedUser
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AQuIP.Admin.Models.ResetPasswordViewModel.UserName
      commentId: P:AQuIP.Admin.Models.ResetPasswordViewModel.UserName
      language: CSharp
      name:
        CSharp: UserName
        VB: UserName
      nameWithType:
        CSharp: ResetPasswordViewModel.UserName
        VB: ResetPasswordViewModel.UserName
      qualifiedName:
        CSharp: AQuIP.Admin.Models.ResetPasswordViewModel.UserName
        VB: AQuIP.Admin.Models.ResetPasswordViewModel.UserName
      type: Property
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Models
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Models/UserViewModels.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: UserName
        path: ../AQuIP.Admin/AQuIP.Admin/Models/UserViewModels.cs
        startLine: 62
      syntax:
        content:
          CSharp: >-
            [Required(ErrorMessage = "User name is required.")]

            [EmailAddress(ErrorMessage = "User name has to be a valid email address.")]

            [Display(Name = "User Name")]

            public string UserName { get; set; }
          VB: >-
            <Required(ErrorMessage:="User name is required.")>

            <EmailAddress(ErrorMessage:="User name has to be a valid email address.")>

            <Display(Name:="User Name")>

            Public Property UserName As String
        parameters: []
        return:
          type: System.String
      overload: AQuIP.Admin.Models.ResetPasswordViewModel.UserName*
      attributes:
      - type: System.ComponentModel.DataAnnotations.RequiredAttribute
        ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
        arguments: []
        namedArguments:
        - name: ErrorMessage
          type: System.String
          value: User name is required.
      - type: System.ComponentModel.DataAnnotations.EmailAddressAttribute
        ctor: System.ComponentModel.DataAnnotations.EmailAddressAttribute.#ctor
        arguments: []
        namedArguments:
        - name: ErrorMessage
          type: System.String
          value: User name has to be a valid email address.
      - type: System.ComponentModel.DataAnnotations.DisplayAttribute
        ctor: System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor
        arguments: []
        namedArguments:
        - name: Name
          type: System.String
          value: User Name
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AQuIP.Admin.Models.ResetPasswordViewModel.Password
      commentId: P:AQuIP.Admin.Models.ResetPasswordViewModel.Password
      language: CSharp
      name:
        CSharp: Password
        VB: Password
      nameWithType:
        CSharp: ResetPasswordViewModel.Password
        VB: ResetPasswordViewModel.Password
      qualifiedName:
        CSharp: AQuIP.Admin.Models.ResetPasswordViewModel.Password
        VB: AQuIP.Admin.Models.ResetPasswordViewModel.Password
      type: Property
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Models
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Models/UserViewModels.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: Password
        path: ../AQuIP.Admin/AQuIP.Admin/Models/UserViewModels.cs
        startLine: 67
      syntax:
        content:
          CSharp: >-
            [Required]

            [StringLength(100, ErrorMessage = "The {0} must be at least {2} characters long.", MinimumLength = 6)]

            [DataType(DataType.Password)]

            [Display(Name = "Password")]

            public string Password { get; set; }
          VB: >-
            <Required>

            <StringLength(100, ErrorMessage:="The {0} must be at least {2} characters long.", MinimumLength:=6)>

            <DataType(DataType.Password)>

            <Display(Name:="Password")>

            Public Property Password As String
        parameters: []
        return:
          type: System.String
      overload: AQuIP.Admin.Models.ResetPasswordViewModel.Password*
      attributes:
      - type: System.ComponentModel.DataAnnotations.RequiredAttribute
        ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
        arguments: []
      - type: System.ComponentModel.DataAnnotations.StringLengthAttribute
        ctor: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
        arguments:
        - type: System.Int32
          value: 100
        namedArguments:
        - name: ErrorMessage
          type: System.String
          value: The {0} must be at least {2} characters long.
        - name: MinimumLength
          type: System.Int32
          value: 6
      - type: System.ComponentModel.DataAnnotations.DataTypeAttribute
        ctor: System.ComponentModel.DataAnnotations.DataTypeAttribute.#ctor(System.ComponentModel.DataAnnotations.DataType)
        arguments:
        - type: System.ComponentModel.DataAnnotations.DataType
          value: 11
      - type: System.ComponentModel.DataAnnotations.DisplayAttribute
        ctor: System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor
        arguments: []
        namedArguments:
        - name: Name
          type: System.String
          value: Password
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AQuIP.Admin.Models.ResetPasswordViewModel.ConfirmPassword
      commentId: P:AQuIP.Admin.Models.ResetPasswordViewModel.ConfirmPassword
      language: CSharp
      name:
        CSharp: ConfirmPassword
        VB: ConfirmPassword
      nameWithType:
        CSharp: ResetPasswordViewModel.ConfirmPassword
        VB: ResetPasswordViewModel.ConfirmPassword
      qualifiedName:
        CSharp: AQuIP.Admin.Models.ResetPasswordViewModel.ConfirmPassword
        VB: AQuIP.Admin.Models.ResetPasswordViewModel.ConfirmPassword
      type: Property
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Models
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Models/UserViewModels.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: ConfirmPassword
        path: ../AQuIP.Admin/AQuIP.Admin/Models/UserViewModels.cs
        startLine: 73
      syntax:
        content:
          CSharp: >-
            [DataType(DataType.Password)]

            [Display(Name = "Confirm password")]

            [Compare("Password", ErrorMessage = "The password and confirmation password do not match.")]

            public string ConfirmPassword { get; set; }
          VB: >-
            <DataType(DataType.Password)>

            <Display(Name:="Confirm password")>

            <Compare("Password", ErrorMessage:="The password and confirmation password do not match.")>

            Public Property ConfirmPassword As String
        parameters: []
        return:
          type: System.String
      overload: AQuIP.Admin.Models.ResetPasswordViewModel.ConfirmPassword*
      attributes:
      - type: System.ComponentModel.DataAnnotations.DataTypeAttribute
        ctor: System.ComponentModel.DataAnnotations.DataTypeAttribute.#ctor(System.ComponentModel.DataAnnotations.DataType)
        arguments:
        - type: System.ComponentModel.DataAnnotations.DataType
          value: 11
      - type: System.ComponentModel.DataAnnotations.DisplayAttribute
        ctor: System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor
        arguments: []
        namedArguments:
        - name: Name
          type: System.String
          value: Confirm password
      - type: System.ComponentModel.DataAnnotations.CompareAttribute
        ctor: System.ComponentModel.DataAnnotations.CompareAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: Password
        namedArguments:
        - name: ErrorMessage
          type: System.String
          value: The password and confirmation password do not match.
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
  - id: AQuIP.Admin.Models.ActivateDeactivateViewModel
    commentId: T:AQuIP.Admin.Models.ActivateDeactivateViewModel
    language: CSharp
    name:
      CSharp: ActivateDeactivateViewModel
      VB: ActivateDeactivateViewModel
    nameWithType:
      CSharp: ActivateDeactivateViewModel
      VB: ActivateDeactivateViewModel
    qualifiedName:
      CSharp: AQuIP.Admin.Models.ActivateDeactivateViewModel
      VB: AQuIP.Admin.Models.ActivateDeactivateViewModel
    type: Class
    assemblies:
    - AQuIP.Admin
    namespace: AQuIP.Admin.Models
    source:
      remote:
        path: AQuIP.Admin/AQuIP.Admin/Models/UserViewModels.cs
        branch: master
        repo: https://github.com/kuttima/MyUserManagement.git
      id: ActivateDeactivateViewModel
      path: ../AQuIP.Admin/AQuIP.Admin/Models/UserViewModels.cs
      startLine: 79
    syntax:
      content:
        CSharp: public class ActivateDeactivateViewModel
        VB: Public Class ActivateDeactivateViewModel
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AQuIP.Admin.Models.ActivateDeactivateViewModel.Username
      commentId: P:AQuIP.Admin.Models.ActivateDeactivateViewModel.Username
      language: CSharp
      name:
        CSharp: Username
        VB: Username
      nameWithType:
        CSharp: ActivateDeactivateViewModel.Username
        VB: ActivateDeactivateViewModel.Username
      qualifiedName:
        CSharp: AQuIP.Admin.Models.ActivateDeactivateViewModel.Username
        VB: AQuIP.Admin.Models.ActivateDeactivateViewModel.Username
      type: Property
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Models
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Models/UserViewModels.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: Username
        path: ../AQuIP.Admin/AQuIP.Admin/Models/UserViewModels.cs
        startLine: 82
      syntax:
        content:
          CSharp: >-
            [Required(ErrorMessage = "User name is required.")]

            [EmailAddress(ErrorMessage = "User name has to be a valid email address.")]

            [Display(Name = "User Name")]

            public string Username { get; set; }
          VB: >-
            <Required(ErrorMessage:="User name is required.")>

            <EmailAddress(ErrorMessage:="User name has to be a valid email address.")>

            <Display(Name:="User Name")>

            Public Property Username As String
        parameters: []
        return:
          type: System.String
      overload: AQuIP.Admin.Models.ActivateDeactivateViewModel.Username*
      attributes:
      - type: System.ComponentModel.DataAnnotations.RequiredAttribute
        ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
        arguments: []
        namedArguments:
        - name: ErrorMessage
          type: System.String
          value: User name is required.
      - type: System.ComponentModel.DataAnnotations.EmailAddressAttribute
        ctor: System.ComponentModel.DataAnnotations.EmailAddressAttribute.#ctor
        arguments: []
        namedArguments:
        - name: ErrorMessage
          type: System.String
          value: User name has to be a valid email address.
      - type: System.ComponentModel.DataAnnotations.DisplayAttribute
        ctor: System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor
        arguments: []
        namedArguments:
        - name: Name
          type: System.String
          value: User Name
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: AQuIP.Admin.Models.ActivateDeactivateViewModel.Status
      commentId: P:AQuIP.Admin.Models.ActivateDeactivateViewModel.Status
      language: CSharp
      name:
        CSharp: Status
        VB: Status
      nameWithType:
        CSharp: ActivateDeactivateViewModel.Status
        VB: ActivateDeactivateViewModel.Status
      qualifiedName:
        CSharp: AQuIP.Admin.Models.ActivateDeactivateViewModel.Status
        VB: AQuIP.Admin.Models.ActivateDeactivateViewModel.Status
      type: Property
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Models
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Models/UserViewModels.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: Status
        path: ../AQuIP.Admin/AQuIP.Admin/Models/UserViewModels.cs
        startLine: 87
      syntax:
        content:
          CSharp: >-
            [Required(ErrorMessage = "Please select a user status.")]

            [Display(Name = "User Status")]

            public string Status { get; set; }
          VB: >-
            <Required(ErrorMessage:="Please select a user status.")>

            <Display(Name:="User Status")>

            Public Property Status As String
        parameters: []
        return:
          type: System.String
      overload: AQuIP.Admin.Models.ActivateDeactivateViewModel.Status*
      attributes:
      - type: System.ComponentModel.DataAnnotations.RequiredAttribute
        ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
        arguments: []
        namedArguments:
        - name: ErrorMessage
          type: System.String
          value: Please select a user status.
      - type: System.ComponentModel.DataAnnotations.DisplayAttribute
        ctor: System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor
        arguments: []
        namedArguments:
        - name: Name
          type: System.String
          value: User Status
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
- id: AQuIP.Admin.Services
  commentId: N:AQuIP.Admin.Services
  language: CSharp
  name:
    CSharp: AQuIP.Admin.Services
    VB: AQuIP.Admin.Services
  nameWithType:
    CSharp: AQuIP.Admin.Services
    VB: AQuIP.Admin.Services
  qualifiedName:
    CSharp: AQuIP.Admin.Services
    VB: AQuIP.Admin.Services
  type: Namespace
  assemblies:
  - AQuIP.Admin
  modifiers: {}
  items:
  - id: AQuIP.Admin.Services.AccountService
    commentId: T:AQuIP.Admin.Services.AccountService
    language: CSharp
    name:
      CSharp: AccountService
      VB: AccountService
    nameWithType:
      CSharp: AccountService
      VB: AccountService
    qualifiedName:
      CSharp: AQuIP.Admin.Services.AccountService
      VB: AQuIP.Admin.Services.AccountService
    type: Class
    assemblies:
    - AQuIP.Admin
    namespace: AQuIP.Admin.Services
    source:
      remote:
        path: AQuIP.Admin/AQuIP.Admin/Services/AccountService.cs
        branch: master
        repo: https://github.com/kuttima/MyUserManagement.git
      id: AccountService
      path: ../AQuIP.Admin/AQuIP.Admin/Services/AccountService.cs
      startLine: 7
    syntax:
      content:
        CSharp: public class AccountService
        VB: Public Class AccountService
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AQuIP.Admin.Services.AccountService.GetUserForLogin(AQuIP.Admin.Models.LoginViewModel)
      commentId: M:AQuIP.Admin.Services.AccountService.GetUserForLogin(AQuIP.Admin.Models.LoginViewModel)
      language: CSharp
      name:
        CSharp: GetUserForLogin(LoginViewModel)
        VB: GetUserForLogin(LoginViewModel)
      nameWithType:
        CSharp: AccountService.GetUserForLogin(LoginViewModel)
        VB: AccountService.GetUserForLogin(LoginViewModel)
      qualifiedName:
        CSharp: AQuIP.Admin.Services.AccountService.GetUserForLogin(AQuIP.Admin.Models.LoginViewModel)
        VB: AQuIP.Admin.Services.AccountService.GetUserForLogin(AQuIP.Admin.Models.LoginViewModel)
      type: Method
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Services
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Services/AccountService.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: GetUserForLogin
        path: ../AQuIP.Admin/AQuIP.Admin/Services/AccountService.cs
        startLine: 10
      syntax:
        content:
          CSharp: public UserAccount GetUserForLogin(LoginViewModel user)
          VB: Public Function GetUserForLogin(user As LoginViewModel) As UserAccount
        parameters:
        - id: user
          type: AQuIP.Admin.Models.LoginViewModel
        return:
          type: AQuIP.Admin.Models.UserAccount
      overload: AQuIP.Admin.Services.AccountService.GetUserForLogin*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: AQuIP.Admin.Services.UserService
    commentId: T:AQuIP.Admin.Services.UserService
    language: CSharp
    name:
      CSharp: UserService
      VB: UserService
    nameWithType:
      CSharp: UserService
      VB: UserService
    qualifiedName:
      CSharp: AQuIP.Admin.Services.UserService
      VB: AQuIP.Admin.Services.UserService
    type: Class
    assemblies:
    - AQuIP.Admin
    namespace: AQuIP.Admin.Services
    source:
      remote:
        path: AQuIP.Admin/AQuIP.Admin/Services/UserService.cs
        branch: master
        repo: https://github.com/kuttima/MyUserManagement.git
      id: UserService
      path: ../AQuIP.Admin/AQuIP.Admin/Services/UserService.cs
      startLine: 9
    syntax:
      content:
        CSharp: public class UserService
        VB: Public Class UserService
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AQuIP.Admin.Services.UserService.FindAll
      commentId: M:AQuIP.Admin.Services.UserService.FindAll
      language: CSharp
      name:
        CSharp: FindAll()
        VB: FindAll()
      nameWithType:
        CSharp: UserService.FindAll()
        VB: UserService.FindAll()
      qualifiedName:
        CSharp: AQuIP.Admin.Services.UserService.FindAll()
        VB: AQuIP.Admin.Services.UserService.FindAll()
      type: Method
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Services
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Services/UserService.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: FindAll
        path: ../AQuIP.Admin/AQuIP.Admin/Services/UserService.cs
        startLine: 12
      syntax:
        content:
          CSharp: public List<UserAccount> FindAll()
          VB: Public Function FindAll As List(Of UserAccount)
        return:
          type: System.Collections.Generic.List{AQuIP.Admin.Models.UserAccount}
      overload: AQuIP.Admin.Services.UserService.FindAll*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AQuIP.Admin.Services.UserService.FindByID(System.Int32)
      commentId: M:AQuIP.Admin.Services.UserService.FindByID(System.Int32)
      language: CSharp
      name:
        CSharp: FindByID(Int32)
        VB: FindByID(Int32)
      nameWithType:
        CSharp: UserService.FindByID(Int32)
        VB: UserService.FindByID(Int32)
      qualifiedName:
        CSharp: AQuIP.Admin.Services.UserService.FindByID(System.Int32)
        VB: AQuIP.Admin.Services.UserService.FindByID(System.Int32)
      type: Method
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Services
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Services/UserService.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: FindByID
        path: ../AQuIP.Admin/AQuIP.Admin/Services/UserService.cs
        startLine: 33
      syntax:
        content:
          CSharp: public UserAccount FindByID(int id)
          VB: Public Function FindByID(id As Integer) As UserAccount
        parameters:
        - id: id
          type: System.Int32
        return:
          type: AQuIP.Admin.Models.UserAccount
      overload: AQuIP.Admin.Services.UserService.FindByID*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AQuIP.Admin.Services.UserService.Add(AQuIP.Admin.Models.CreateUserDTO)
      commentId: M:AQuIP.Admin.Services.UserService.Add(AQuIP.Admin.Models.CreateUserDTO)
      language: CSharp
      name:
        CSharp: Add(CreateUserDTO)
        VB: Add(CreateUserDTO)
      nameWithType:
        CSharp: UserService.Add(CreateUserDTO)
        VB: UserService.Add(CreateUserDTO)
      qualifiedName:
        CSharp: AQuIP.Admin.Services.UserService.Add(AQuIP.Admin.Models.CreateUserDTO)
        VB: AQuIP.Admin.Services.UserService.Add(AQuIP.Admin.Models.CreateUserDTO)
      type: Method
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Services
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Services/UserService.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: Add
        path: ../AQuIP.Admin/AQuIP.Admin/Services/UserService.cs
        startLine: 56
      syntax:
        content:
          CSharp: public void Add(CreateUserDTO model)
          VB: Public Sub Add(model As CreateUserDTO)
        parameters:
        - id: model
          type: AQuIP.Admin.Models.CreateUserDTO
      overload: AQuIP.Admin.Services.UserService.Add*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AQuIP.Admin.Services.UserService.UpdateUser(System.Int32,AQuIP.Admin.Models.UserAccount)
      commentId: M:AQuIP.Admin.Services.UserService.UpdateUser(System.Int32,AQuIP.Admin.Models.UserAccount)
      language: CSharp
      name:
        CSharp: UpdateUser(Int32, UserAccount)
        VB: UpdateUser(Int32, UserAccount)
      nameWithType:
        CSharp: UserService.UpdateUser(Int32, UserAccount)
        VB: UserService.UpdateUser(Int32, UserAccount)
      qualifiedName:
        CSharp: AQuIP.Admin.Services.UserService.UpdateUser(System.Int32, AQuIP.Admin.Models.UserAccount)
        VB: AQuIP.Admin.Services.UserService.UpdateUser(System.Int32, AQuIP.Admin.Models.UserAccount)
      type: Method
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Services
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Services/UserService.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: UpdateUser
        path: ../AQuIP.Admin/AQuIP.Admin/Services/UserService.cs
        startLine: 91
      syntax:
        content:
          CSharp: public void UpdateUser(int id, UserAccount model)
          VB: Public Sub UpdateUser(id As Integer, model As UserAccount)
        parameters:
        - id: id
          type: System.Int32
        - id: model
          type: AQuIP.Admin.Models.UserAccount
      overload: AQuIP.Admin.Services.UserService.UpdateUser*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AQuIP.Admin.Services.UserService.ResetPassword(AQuIP.Admin.Models.ResetPasswordViewModel)
      commentId: M:AQuIP.Admin.Services.UserService.ResetPassword(AQuIP.Admin.Models.ResetPasswordViewModel)
      language: CSharp
      name:
        CSharp: ResetPassword(ResetPasswordViewModel)
        VB: ResetPassword(ResetPasswordViewModel)
      nameWithType:
        CSharp: UserService.ResetPassword(ResetPasswordViewModel)
        VB: UserService.ResetPassword(ResetPasswordViewModel)
      qualifiedName:
        CSharp: AQuIP.Admin.Services.UserService.ResetPassword(AQuIP.Admin.Models.ResetPasswordViewModel)
        VB: AQuIP.Admin.Services.UserService.ResetPassword(AQuIP.Admin.Models.ResetPasswordViewModel)
      type: Method
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Services
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Services/UserService.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: ResetPassword
        path: ../AQuIP.Admin/AQuIP.Admin/Services/UserService.cs
        startLine: 113
      syntax:
        content:
          CSharp: public int ResetPassword(ResetPasswordViewModel model)
          VB: Public Function ResetPassword(model As ResetPasswordViewModel) As Integer
        parameters:
        - id: model
          type: AQuIP.Admin.Models.ResetPasswordViewModel
        return:
          type: System.Int32
      overload: AQuIP.Admin.Services.UserService.ResetPassword*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AQuIP.Admin.Services.UserService.ActivateUser(System.String)
      commentId: M:AQuIP.Admin.Services.UserService.ActivateUser(System.String)
      language: CSharp
      name:
        CSharp: ActivateUser(String)
        VB: ActivateUser(String)
      nameWithType:
        CSharp: UserService.ActivateUser(String)
        VB: UserService.ActivateUser(String)
      qualifiedName:
        CSharp: AQuIP.Admin.Services.UserService.ActivateUser(System.String)
        VB: AQuIP.Admin.Services.UserService.ActivateUser(System.String)
      type: Method
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Services
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Services/UserService.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: ActivateUser
        path: ../AQuIP.Admin/AQuIP.Admin/Services/UserService.cs
        startLine: 137
      syntax:
        content:
          CSharp: public int ActivateUser(string userName)
          VB: Public Function ActivateUser(userName As String) As Integer
        parameters:
        - id: userName
          type: System.String
        return:
          type: System.Int32
      overload: AQuIP.Admin.Services.UserService.ActivateUser*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AQuIP.Admin.Services.UserService.DeactivateUser(System.String)
      commentId: M:AQuIP.Admin.Services.UserService.DeactivateUser(System.String)
      language: CSharp
      name:
        CSharp: DeactivateUser(String)
        VB: DeactivateUser(String)
      nameWithType:
        CSharp: UserService.DeactivateUser(String)
        VB: UserService.DeactivateUser(String)
      qualifiedName:
        CSharp: AQuIP.Admin.Services.UserService.DeactivateUser(System.String)
        VB: AQuIP.Admin.Services.UserService.DeactivateUser(System.String)
      type: Method
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Services
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Services/UserService.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: DeactivateUser
        path: ../AQuIP.Admin/AQuIP.Admin/Services/UserService.cs
        startLine: 161
      syntax:
        content:
          CSharp: public int DeactivateUser(string userName)
          VB: Public Function DeactivateUser(userName As String) As Integer
        parameters:
        - id: userName
          type: System.String
        return:
          type: System.Int32
      overload: AQuIP.Admin.Services.UserService.DeactivateUser*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AQuIP.Admin.Services.UserService.DeleteUser(System.String)
      commentId: M:AQuIP.Admin.Services.UserService.DeleteUser(System.String)
      language: CSharp
      name:
        CSharp: DeleteUser(String)
        VB: DeleteUser(String)
      nameWithType:
        CSharp: UserService.DeleteUser(String)
        VB: UserService.DeleteUser(String)
      qualifiedName:
        CSharp: AQuIP.Admin.Services.UserService.DeleteUser(System.String)
        VB: AQuIP.Admin.Services.UserService.DeleteUser(System.String)
      type: Method
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Services
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Services/UserService.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: DeleteUser
        path: ../AQuIP.Admin/AQuIP.Admin/Services/UserService.cs
        startLine: 185
      syntax:
        content:
          CSharp: public void DeleteUser(string userName)
          VB: Public Sub DeleteUser(userName As String)
        parameters:
        - id: userName
          type: System.String
      overload: AQuIP.Admin.Services.UserService.DeleteUser*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AQuIP.Admin.Services.UserService.GetRoles
      commentId: M:AQuIP.Admin.Services.UserService.GetRoles
      language: CSharp
      name:
        CSharp: GetRoles()
        VB: GetRoles()
      nameWithType:
        CSharp: UserService.GetRoles()
        VB: UserService.GetRoles()
      qualifiedName:
        CSharp: AQuIP.Admin.Services.UserService.GetRoles()
        VB: AQuIP.Admin.Services.UserService.GetRoles()
      type: Method
      assemblies:
      - AQuIP.Admin
      namespace: AQuIP.Admin.Services
      source:
        remote:
          path: AQuIP.Admin/AQuIP.Admin/Services/UserService.cs
          branch: master
          repo: https://github.com/kuttima/MyUserManagement.git
        id: GetRoles
        path: ../AQuIP.Admin/AQuIP.Admin/Services/UserService.cs
        startLine: 207
      syntax:
        content:
          CSharp: public IEnumerable<string> GetRoles()
          VB: Public Function GetRoles As IEnumerable(Of String)
        return:
          type: System.Collections.Generic.IEnumerable{System.String}
      overload: AQuIP.Admin.Services.UserService.GetRoles*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
references:
  System:
    name:
      CSharp:
      - name: System
        nameWithType: System
        qualifiedName: System
        isExternal: true
      VB:
      - name: System
        nameWithType: System
        qualifiedName: System
    isDefinition: true
    commentId: N:System
  System.Object:
    name:
      CSharp:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      VB:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Object
  System.Object.ToString:
    name:
      CSharp:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ToString
  System.Object.Equals(System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object)
  System.Object.Equals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object,System.Object)
  System.Object.ReferenceEquals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  System.Object.GetHashCode:
    name:
      CSharp:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetHashCode
  System.Object.GetType:
    name:
      CSharp:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetType
  System.Object.MemberwiseClone:
    name:
      CSharp:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.MemberwiseClone
  System.Web.Optimization:
    name:
      CSharp:
      - name: System.Web.Optimization
        nameWithType: System.Web.Optimization
        qualifiedName: System.Web.Optimization
        isExternal: true
      VB:
      - name: System.Web.Optimization
        nameWithType: System.Web.Optimization
        qualifiedName: System.Web.Optimization
    isDefinition: true
    commentId: N:System.Web.Optimization
  System.Web.Optimization.BundleCollection:
    name:
      CSharp:
      - id: System.Web.Optimization.BundleCollection
        name: BundleCollection
        nameWithType: BundleCollection
        qualifiedName: System.Web.Optimization.BundleCollection
        isExternal: true
      VB:
      - id: System.Web.Optimization.BundleCollection
        name: BundleCollection
        nameWithType: BundleCollection
        qualifiedName: System.Web.Optimization.BundleCollection
        isExternal: true
    isDefinition: true
    parent: System.Web.Optimization
    commentId: T:System.Web.Optimization.BundleCollection
  AQuIP.Admin.BundleConfig.RegisterBundles*:
    name:
      CSharp:
      - id: AQuIP.Admin.BundleConfig.RegisterBundles*
        name: RegisterBundles
        nameWithType: BundleConfig.RegisterBundles
        qualifiedName: AQuIP.Admin.BundleConfig.RegisterBundles
      VB:
      - id: AQuIP.Admin.BundleConfig.RegisterBundles*
        name: RegisterBundles
        nameWithType: BundleConfig.RegisterBundles
        qualifiedName: AQuIP.Admin.BundleConfig.RegisterBundles
    isDefinition: true
    commentId: Overload:AQuIP.Admin.BundleConfig.RegisterBundles
  AQuIP.Admin.BundleConfig:
    name:
      CSharp:
      - id: AQuIP.Admin.BundleConfig
        name: BundleConfig
        nameWithType: BundleConfig
        qualifiedName: AQuIP.Admin.BundleConfig
      VB:
      - id: AQuIP.Admin.BundleConfig
        name: BundleConfig
        nameWithType: BundleConfig
        qualifiedName: AQuIP.Admin.BundleConfig
    isDefinition: true
    commentId: T:AQuIP.Admin.BundleConfig
  System.Web.Mvc:
    name:
      CSharp:
      - name: System.Web.Mvc
        nameWithType: System.Web.Mvc
        qualifiedName: System.Web.Mvc
        isExternal: true
      VB:
      - name: System.Web.Mvc
        nameWithType: System.Web.Mvc
        qualifiedName: System.Web.Mvc
    isDefinition: true
    commentId: N:System.Web.Mvc
  System.Web.Mvc.GlobalFilterCollection:
    name:
      CSharp:
      - id: System.Web.Mvc.GlobalFilterCollection
        name: GlobalFilterCollection
        nameWithType: GlobalFilterCollection
        qualifiedName: System.Web.Mvc.GlobalFilterCollection
        isExternal: true
      VB:
      - id: System.Web.Mvc.GlobalFilterCollection
        name: GlobalFilterCollection
        nameWithType: GlobalFilterCollection
        qualifiedName: System.Web.Mvc.GlobalFilterCollection
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc
    commentId: T:System.Web.Mvc.GlobalFilterCollection
  AQuIP.Admin.FilterConfig.RegisterGlobalFilters*:
    name:
      CSharp:
      - id: AQuIP.Admin.FilterConfig.RegisterGlobalFilters*
        name: RegisterGlobalFilters
        nameWithType: FilterConfig.RegisterGlobalFilters
        qualifiedName: AQuIP.Admin.FilterConfig.RegisterGlobalFilters
      VB:
      - id: AQuIP.Admin.FilterConfig.RegisterGlobalFilters*
        name: RegisterGlobalFilters
        nameWithType: FilterConfig.RegisterGlobalFilters
        qualifiedName: AQuIP.Admin.FilterConfig.RegisterGlobalFilters
    isDefinition: true
    commentId: Overload:AQuIP.Admin.FilterConfig.RegisterGlobalFilters
  AQuIP.Admin.FilterConfig:
    name:
      CSharp:
      - id: AQuIP.Admin.FilterConfig
        name: FilterConfig
        nameWithType: FilterConfig
        qualifiedName: AQuIP.Admin.FilterConfig
      VB:
      - id: AQuIP.Admin.FilterConfig
        name: FilterConfig
        nameWithType: FilterConfig
        qualifiedName: AQuIP.Admin.FilterConfig
    isDefinition: true
    commentId: T:AQuIP.Admin.FilterConfig
  System.Web.Routing:
    name:
      CSharp:
      - name: System.Web.Routing
        nameWithType: System.Web.Routing
        qualifiedName: System.Web.Routing
        isExternal: true
      VB:
      - name: System.Web.Routing
        nameWithType: System.Web.Routing
        qualifiedName: System.Web.Routing
    isDefinition: true
    commentId: N:System.Web.Routing
  System.Web.Routing.RouteCollection:
    name:
      CSharp:
      - id: System.Web.Routing.RouteCollection
        name: RouteCollection
        nameWithType: RouteCollection
        qualifiedName: System.Web.Routing.RouteCollection
        isExternal: true
      VB:
      - id: System.Web.Routing.RouteCollection
        name: RouteCollection
        nameWithType: RouteCollection
        qualifiedName: System.Web.Routing.RouteCollection
        isExternal: true
    isDefinition: true
    parent: System.Web.Routing
    commentId: T:System.Web.Routing.RouteCollection
  AQuIP.Admin.RouteConfig.RegisterRoutes*:
    name:
      CSharp:
      - id: AQuIP.Admin.RouteConfig.RegisterRoutes*
        name: RegisterRoutes
        nameWithType: RouteConfig.RegisterRoutes
        qualifiedName: AQuIP.Admin.RouteConfig.RegisterRoutes
      VB:
      - id: AQuIP.Admin.RouteConfig.RegisterRoutes*
        name: RegisterRoutes
        nameWithType: RouteConfig.RegisterRoutes
        qualifiedName: AQuIP.Admin.RouteConfig.RegisterRoutes
    isDefinition: true
    commentId: Overload:AQuIP.Admin.RouteConfig.RegisterRoutes
  AQuIP.Admin.RouteConfig:
    name:
      CSharp:
      - id: AQuIP.Admin.RouteConfig
        name: RouteConfig
        nameWithType: RouteConfig
        qualifiedName: AQuIP.Admin.RouteConfig
      VB:
      - id: AQuIP.Admin.RouteConfig
        name: RouteConfig
        nameWithType: RouteConfig
        qualifiedName: AQuIP.Admin.RouteConfig
    isDefinition: true
    commentId: T:AQuIP.Admin.RouteConfig
  System.Web:
    name:
      CSharp:
      - name: System.Web
        nameWithType: System.Web
        qualifiedName: System.Web
        isExternal: true
      VB:
      - name: System.Web
        nameWithType: System.Web
        qualifiedName: System.Web
    isDefinition: true
    commentId: N:System.Web
  System.Web.HttpApplication:
    name:
      CSharp:
      - id: System.Web.HttpApplication
        name: HttpApplication
        nameWithType: HttpApplication
        qualifiedName: System.Web.HttpApplication
        isExternal: true
      VB:
      - id: System.Web.HttpApplication
        name: HttpApplication
        nameWithType: HttpApplication
        qualifiedName: System.Web.HttpApplication
        isExternal: true
    isDefinition: true
    parent: System.Web
    commentId: T:System.Web.HttpApplication
  System.Web.HttpApplication.CompleteRequest:
    name:
      CSharp:
      - id: System.Web.HttpApplication.CompleteRequest
        name: CompleteRequest
        nameWithType: HttpApplication.CompleteRequest
        qualifiedName: System.Web.HttpApplication.CompleteRequest
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.CompleteRequest
        name: CompleteRequest
        nameWithType: HttpApplication.CompleteRequest
        qualifiedName: System.Web.HttpApplication.CompleteRequest
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.CompleteRequest
  System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler):
    name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnBeginRequestAsync
        nameWithType: HttpApplication.AddOnBeginRequestAsync
        qualifiedName: System.Web.HttpApplication.AddOnBeginRequestAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnBeginRequestAsync
        nameWithType: HttpApplication.AddOnBeginRequestAsync
        qualifiedName: System.Web.HttpApplication.AddOnBeginRequestAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object):
    name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnBeginRequestAsync
        nameWithType: HttpApplication.AddOnBeginRequestAsync
        qualifiedName: System.Web.HttpApplication.AddOnBeginRequestAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnBeginRequestAsync
        nameWithType: HttpApplication.AddOnBeginRequestAsync
        qualifiedName: System.Web.HttpApplication.AddOnBeginRequestAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler):
    name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnAuthenticateRequestAsync
        nameWithType: HttpApplication.AddOnAuthenticateRequestAsync
        qualifiedName: System.Web.HttpApplication.AddOnAuthenticateRequestAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnAuthenticateRequestAsync
        nameWithType: HttpApplication.AddOnAuthenticateRequestAsync
        qualifiedName: System.Web.HttpApplication.AddOnAuthenticateRequestAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object):
    name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnAuthenticateRequestAsync
        nameWithType: HttpApplication.AddOnAuthenticateRequestAsync
        qualifiedName: System.Web.HttpApplication.AddOnAuthenticateRequestAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnAuthenticateRequestAsync
        nameWithType: HttpApplication.AddOnAuthenticateRequestAsync
        qualifiedName: System.Web.HttpApplication.AddOnAuthenticateRequestAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler):
    name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnPostAuthenticateRequestAsync
        nameWithType: HttpApplication.AddOnPostAuthenticateRequestAsync
        qualifiedName: System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnPostAuthenticateRequestAsync
        nameWithType: HttpApplication.AddOnPostAuthenticateRequestAsync
        qualifiedName: System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  ? System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  : name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnPostAuthenticateRequestAsync
        nameWithType: HttpApplication.AddOnPostAuthenticateRequestAsync
        qualifiedName: System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnPostAuthenticateRequestAsync
        nameWithType: HttpApplication.AddOnPostAuthenticateRequestAsync
        qualifiedName: System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler):
    name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnAuthorizeRequestAsync
        nameWithType: HttpApplication.AddOnAuthorizeRequestAsync
        qualifiedName: System.Web.HttpApplication.AddOnAuthorizeRequestAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnAuthorizeRequestAsync
        nameWithType: HttpApplication.AddOnAuthorizeRequestAsync
        qualifiedName: System.Web.HttpApplication.AddOnAuthorizeRequestAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object):
    name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnAuthorizeRequestAsync
        nameWithType: HttpApplication.AddOnAuthorizeRequestAsync
        qualifiedName: System.Web.HttpApplication.AddOnAuthorizeRequestAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnAuthorizeRequestAsync
        nameWithType: HttpApplication.AddOnAuthorizeRequestAsync
        qualifiedName: System.Web.HttpApplication.AddOnAuthorizeRequestAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler):
    name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnPostAuthorizeRequestAsync
        nameWithType: HttpApplication.AddOnPostAuthorizeRequestAsync
        qualifiedName: System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnPostAuthorizeRequestAsync
        nameWithType: HttpApplication.AddOnPostAuthorizeRequestAsync
        qualifiedName: System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object):
    name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnPostAuthorizeRequestAsync
        nameWithType: HttpApplication.AddOnPostAuthorizeRequestAsync
        qualifiedName: System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnPostAuthorizeRequestAsync
        nameWithType: HttpApplication.AddOnPostAuthorizeRequestAsync
        qualifiedName: System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler):
    name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnResolveRequestCacheAsync
        nameWithType: HttpApplication.AddOnResolveRequestCacheAsync
        qualifiedName: System.Web.HttpApplication.AddOnResolveRequestCacheAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnResolveRequestCacheAsync
        nameWithType: HttpApplication.AddOnResolveRequestCacheAsync
        qualifiedName: System.Web.HttpApplication.AddOnResolveRequestCacheAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object):
    name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnResolveRequestCacheAsync
        nameWithType: HttpApplication.AddOnResolveRequestCacheAsync
        qualifiedName: System.Web.HttpApplication.AddOnResolveRequestCacheAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnResolveRequestCacheAsync
        nameWithType: HttpApplication.AddOnResolveRequestCacheAsync
        qualifiedName: System.Web.HttpApplication.AddOnResolveRequestCacheAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler):
    name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnPostResolveRequestCacheAsync
        nameWithType: HttpApplication.AddOnPostResolveRequestCacheAsync
        qualifiedName: System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnPostResolveRequestCacheAsync
        nameWithType: HttpApplication.AddOnPostResolveRequestCacheAsync
        qualifiedName: System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  ? System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  : name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnPostResolveRequestCacheAsync
        nameWithType: HttpApplication.AddOnPostResolveRequestCacheAsync
        qualifiedName: System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnPostResolveRequestCacheAsync
        nameWithType: HttpApplication.AddOnPostResolveRequestCacheAsync
        qualifiedName: System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler):
    name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnMapRequestHandlerAsync
        nameWithType: HttpApplication.AddOnMapRequestHandlerAsync
        qualifiedName: System.Web.HttpApplication.AddOnMapRequestHandlerAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnMapRequestHandlerAsync
        nameWithType: HttpApplication.AddOnMapRequestHandlerAsync
        qualifiedName: System.Web.HttpApplication.AddOnMapRequestHandlerAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object):
    name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnMapRequestHandlerAsync
        nameWithType: HttpApplication.AddOnMapRequestHandlerAsync
        qualifiedName: System.Web.HttpApplication.AddOnMapRequestHandlerAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnMapRequestHandlerAsync
        nameWithType: HttpApplication.AddOnMapRequestHandlerAsync
        qualifiedName: System.Web.HttpApplication.AddOnMapRequestHandlerAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler):
    name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnPostMapRequestHandlerAsync
        nameWithType: HttpApplication.AddOnPostMapRequestHandlerAsync
        qualifiedName: System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnPostMapRequestHandlerAsync
        nameWithType: HttpApplication.AddOnPostMapRequestHandlerAsync
        qualifiedName: System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  ? System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  : name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnPostMapRequestHandlerAsync
        nameWithType: HttpApplication.AddOnPostMapRequestHandlerAsync
        qualifiedName: System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnPostMapRequestHandlerAsync
        nameWithType: HttpApplication.AddOnPostMapRequestHandlerAsync
        qualifiedName: System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler):
    name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnAcquireRequestStateAsync
        nameWithType: HttpApplication.AddOnAcquireRequestStateAsync
        qualifiedName: System.Web.HttpApplication.AddOnAcquireRequestStateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnAcquireRequestStateAsync
        nameWithType: HttpApplication.AddOnAcquireRequestStateAsync
        qualifiedName: System.Web.HttpApplication.AddOnAcquireRequestStateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object):
    name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnAcquireRequestStateAsync
        nameWithType: HttpApplication.AddOnAcquireRequestStateAsync
        qualifiedName: System.Web.HttpApplication.AddOnAcquireRequestStateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnAcquireRequestStateAsync
        nameWithType: HttpApplication.AddOnAcquireRequestStateAsync
        qualifiedName: System.Web.HttpApplication.AddOnAcquireRequestStateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler):
    name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnPostAcquireRequestStateAsync
        nameWithType: HttpApplication.AddOnPostAcquireRequestStateAsync
        qualifiedName: System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnPostAcquireRequestStateAsync
        nameWithType: HttpApplication.AddOnPostAcquireRequestStateAsync
        qualifiedName: System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  ? System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  : name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnPostAcquireRequestStateAsync
        nameWithType: HttpApplication.AddOnPostAcquireRequestStateAsync
        qualifiedName: System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnPostAcquireRequestStateAsync
        nameWithType: HttpApplication.AddOnPostAcquireRequestStateAsync
        qualifiedName: System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler):
    name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnPreRequestHandlerExecuteAsync
        nameWithType: HttpApplication.AddOnPreRequestHandlerExecuteAsync
        qualifiedName: System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnPreRequestHandlerExecuteAsync
        nameWithType: HttpApplication.AddOnPreRequestHandlerExecuteAsync
        qualifiedName: System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  ? System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  : name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnPreRequestHandlerExecuteAsync
        nameWithType: HttpApplication.AddOnPreRequestHandlerExecuteAsync
        qualifiedName: System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnPreRequestHandlerExecuteAsync
        nameWithType: HttpApplication.AddOnPreRequestHandlerExecuteAsync
        qualifiedName: System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler):
    name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnPostRequestHandlerExecuteAsync
        nameWithType: HttpApplication.AddOnPostRequestHandlerExecuteAsync
        qualifiedName: System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnPostRequestHandlerExecuteAsync
        nameWithType: HttpApplication.AddOnPostRequestHandlerExecuteAsync
        qualifiedName: System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  ? System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  : name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnPostRequestHandlerExecuteAsync
        nameWithType: HttpApplication.AddOnPostRequestHandlerExecuteAsync
        qualifiedName: System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnPostRequestHandlerExecuteAsync
        nameWithType: HttpApplication.AddOnPostRequestHandlerExecuteAsync
        qualifiedName: System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler):
    name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnReleaseRequestStateAsync
        nameWithType: HttpApplication.AddOnReleaseRequestStateAsync
        qualifiedName: System.Web.HttpApplication.AddOnReleaseRequestStateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnReleaseRequestStateAsync
        nameWithType: HttpApplication.AddOnReleaseRequestStateAsync
        qualifiedName: System.Web.HttpApplication.AddOnReleaseRequestStateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object):
    name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnReleaseRequestStateAsync
        nameWithType: HttpApplication.AddOnReleaseRequestStateAsync
        qualifiedName: System.Web.HttpApplication.AddOnReleaseRequestStateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnReleaseRequestStateAsync
        nameWithType: HttpApplication.AddOnReleaseRequestStateAsync
        qualifiedName: System.Web.HttpApplication.AddOnReleaseRequestStateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler):
    name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnPostReleaseRequestStateAsync
        nameWithType: HttpApplication.AddOnPostReleaseRequestStateAsync
        qualifiedName: System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnPostReleaseRequestStateAsync
        nameWithType: HttpApplication.AddOnPostReleaseRequestStateAsync
        qualifiedName: System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  ? System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  : name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnPostReleaseRequestStateAsync
        nameWithType: HttpApplication.AddOnPostReleaseRequestStateAsync
        qualifiedName: System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnPostReleaseRequestStateAsync
        nameWithType: HttpApplication.AddOnPostReleaseRequestStateAsync
        qualifiedName: System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler):
    name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnUpdateRequestCacheAsync
        nameWithType: HttpApplication.AddOnUpdateRequestCacheAsync
        qualifiedName: System.Web.HttpApplication.AddOnUpdateRequestCacheAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnUpdateRequestCacheAsync
        nameWithType: HttpApplication.AddOnUpdateRequestCacheAsync
        qualifiedName: System.Web.HttpApplication.AddOnUpdateRequestCacheAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object):
    name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnUpdateRequestCacheAsync
        nameWithType: HttpApplication.AddOnUpdateRequestCacheAsync
        qualifiedName: System.Web.HttpApplication.AddOnUpdateRequestCacheAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnUpdateRequestCacheAsync
        nameWithType: HttpApplication.AddOnUpdateRequestCacheAsync
        qualifiedName: System.Web.HttpApplication.AddOnUpdateRequestCacheAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler):
    name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnPostUpdateRequestCacheAsync
        nameWithType: HttpApplication.AddOnPostUpdateRequestCacheAsync
        qualifiedName: System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnPostUpdateRequestCacheAsync
        nameWithType: HttpApplication.AddOnPostUpdateRequestCacheAsync
        qualifiedName: System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  ? System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  : name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnPostUpdateRequestCacheAsync
        nameWithType: HttpApplication.AddOnPostUpdateRequestCacheAsync
        qualifiedName: System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnPostUpdateRequestCacheAsync
        nameWithType: HttpApplication.AddOnPostUpdateRequestCacheAsync
        qualifiedName: System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler):
    name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnLogRequestAsync
        nameWithType: HttpApplication.AddOnLogRequestAsync
        qualifiedName: System.Web.HttpApplication.AddOnLogRequestAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnLogRequestAsync
        nameWithType: HttpApplication.AddOnLogRequestAsync
        qualifiedName: System.Web.HttpApplication.AddOnLogRequestAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object):
    name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnLogRequestAsync
        nameWithType: HttpApplication.AddOnLogRequestAsync
        qualifiedName: System.Web.HttpApplication.AddOnLogRequestAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnLogRequestAsync
        nameWithType: HttpApplication.AddOnLogRequestAsync
        qualifiedName: System.Web.HttpApplication.AddOnLogRequestAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler):
    name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnPostLogRequestAsync
        nameWithType: HttpApplication.AddOnPostLogRequestAsync
        qualifiedName: System.Web.HttpApplication.AddOnPostLogRequestAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnPostLogRequestAsync
        nameWithType: HttpApplication.AddOnPostLogRequestAsync
        qualifiedName: System.Web.HttpApplication.AddOnPostLogRequestAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object):
    name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnPostLogRequestAsync
        nameWithType: HttpApplication.AddOnPostLogRequestAsync
        qualifiedName: System.Web.HttpApplication.AddOnPostLogRequestAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnPostLogRequestAsync
        nameWithType: HttpApplication.AddOnPostLogRequestAsync
        qualifiedName: System.Web.HttpApplication.AddOnPostLogRequestAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler):
    name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnEndRequestAsync
        nameWithType: HttpApplication.AddOnEndRequestAsync
        qualifiedName: System.Web.HttpApplication.AddOnEndRequestAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnEndRequestAsync
        nameWithType: HttpApplication.AddOnEndRequestAsync
        qualifiedName: System.Web.HttpApplication.AddOnEndRequestAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object):
    name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnEndRequestAsync
        nameWithType: HttpApplication.AddOnEndRequestAsync
        qualifiedName: System.Web.HttpApplication.AddOnEndRequestAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnEndRequestAsync
        nameWithType: HttpApplication.AddOnEndRequestAsync
        qualifiedName: System.Web.HttpApplication.AddOnEndRequestAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  System.Web.HttpApplication.Init:
    name:
      CSharp:
      - id: System.Web.HttpApplication.Init
        name: Init
        nameWithType: HttpApplication.Init
        qualifiedName: System.Web.HttpApplication.Init
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.Init
        name: Init
        nameWithType: HttpApplication.Init
        qualifiedName: System.Web.HttpApplication.Init
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.Init
  System.Web.HttpApplication.Dispose:
    name:
      CSharp:
      - id: System.Web.HttpApplication.Dispose
        name: Dispose
        nameWithType: HttpApplication.Dispose
        qualifiedName: System.Web.HttpApplication.Dispose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.Dispose
        name: Dispose
        nameWithType: HttpApplication.Dispose
        qualifiedName: System.Web.HttpApplication.Dispose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.Dispose
  System.Web.HttpApplication.GetVaryByCustomString(System.Web.HttpContext,System.String):
    name:
      CSharp:
      - id: System.Web.HttpApplication.GetVaryByCustomString(System.Web.HttpContext,System.String)
        name: GetVaryByCustomString
        nameWithType: HttpApplication.GetVaryByCustomString
        qualifiedName: System.Web.HttpApplication.GetVaryByCustomString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.HttpContext
        name: HttpContext
        nameWithType: HttpContext
        qualifiedName: System.Web.HttpContext
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.GetVaryByCustomString(System.Web.HttpContext,System.String)
        name: GetVaryByCustomString
        nameWithType: HttpApplication.GetVaryByCustomString
        qualifiedName: System.Web.HttpApplication.GetVaryByCustomString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.HttpContext
        name: HttpContext
        nameWithType: HttpContext
        qualifiedName: System.Web.HttpContext
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.GetVaryByCustomString(System.Web.HttpContext,System.String)
  System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext):
    name:
      CSharp:
      - id: System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)
        name: GetOutputCacheProviderName
        nameWithType: HttpApplication.GetOutputCacheProviderName
        qualifiedName: System.Web.HttpApplication.GetOutputCacheProviderName
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.HttpContext
        name: HttpContext
        nameWithType: HttpContext
        qualifiedName: System.Web.HttpContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)
        name: GetOutputCacheProviderName
        nameWithType: HttpApplication.GetOutputCacheProviderName
        qualifiedName: System.Web.HttpApplication.GetOutputCacheProviderName
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.HttpContext
        name: HttpContext
        nameWithType: HttpContext
        qualifiedName: System.Web.HttpContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)
  ? System.Web.HttpApplication.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  : name:
      CSharp:
      - id: System.Web.HttpApplication.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
        name: IHttpAsyncHandler.BeginProcessRequest
        nameWithType: HttpApplication.IHttpAsyncHandler.BeginProcessRequest
        qualifiedName: System.Web.HttpApplication.System.Web.IHttpAsyncHandler.BeginProcessRequest
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.HttpContext
        name: HttpContext
        nameWithType: HttpContext
        qualifiedName: System.Web.HttpContext
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.AsyncCallback
        name: AsyncCallback
        nameWithType: AsyncCallback
        qualifiedName: System.AsyncCallback
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
        name: System.Web.IHttpAsyncHandler.BeginProcessRequest
        nameWithType: HttpApplication.System.Web.IHttpAsyncHandler.BeginProcessRequest
        qualifiedName: System.Web.HttpApplication.System.Web.IHttpAsyncHandler.BeginProcessRequest
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.HttpContext
        name: HttpContext
        nameWithType: HttpContext
        qualifiedName: System.Web.HttpContext
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.AsyncCallback
        name: AsyncCallback
        nameWithType: AsyncCallback
        qualifiedName: System.AsyncCallback
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  System.Web.HttpApplication.System#Web#IHttpAsyncHandler#EndProcessRequest(System.IAsyncResult):
    name:
      CSharp:
      - id: System.Web.HttpApplication.System#Web#IHttpAsyncHandler#EndProcessRequest(System.IAsyncResult)
        name: IHttpAsyncHandler.EndProcessRequest
        nameWithType: HttpApplication.IHttpAsyncHandler.EndProcessRequest
        qualifiedName: System.Web.HttpApplication.System.Web.IHttpAsyncHandler.EndProcessRequest
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.IAsyncResult
        name: IAsyncResult
        nameWithType: IAsyncResult
        qualifiedName: System.IAsyncResult
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.System#Web#IHttpAsyncHandler#EndProcessRequest(System.IAsyncResult)
        name: System.Web.IHttpAsyncHandler.EndProcessRequest
        nameWithType: HttpApplication.System.Web.IHttpAsyncHandler.EndProcessRequest
        qualifiedName: System.Web.HttpApplication.System.Web.IHttpAsyncHandler.EndProcessRequest
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.IAsyncResult
        name: IAsyncResult
        nameWithType: IAsyncResult
        qualifiedName: System.IAsyncResult
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.System#Web#IHttpAsyncHandler#EndProcessRequest(System.IAsyncResult)
  System.Web.HttpApplication.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext):
    name:
      CSharp:
      - id: System.Web.HttpApplication.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)
        name: IHttpHandler.ProcessRequest
        nameWithType: HttpApplication.IHttpHandler.ProcessRequest
        qualifiedName: System.Web.HttpApplication.System.Web.IHttpHandler.ProcessRequest
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.HttpContext
        name: HttpContext
        nameWithType: HttpContext
        qualifiedName: System.Web.HttpContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)
        name: System.Web.IHttpHandler.ProcessRequest
        nameWithType: HttpApplication.System.Web.IHttpHandler.ProcessRequest
        qualifiedName: System.Web.HttpApplication.System.Web.IHttpHandler.ProcessRequest
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.HttpContext
        name: HttpContext
        nameWithType: HttpContext
        qualifiedName: System.Web.HttpContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)
  System.Web.HttpApplication.RegisterModule(System.Type):
    name:
      CSharp:
      - id: System.Web.HttpApplication.RegisterModule(System.Type)
        name: RegisterModule
        nameWithType: HttpApplication.RegisterModule
        qualifiedName: System.Web.HttpApplication.RegisterModule
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.RegisterModule(System.Type)
        name: RegisterModule
        nameWithType: HttpApplication.RegisterModule
        qualifiedName: System.Web.HttpApplication.RegisterModule
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.RegisterModule(System.Type)
  System.Web.HttpApplication.Context:
    name:
      CSharp:
      - id: System.Web.HttpApplication.Context
        name: Context
        nameWithType: HttpApplication.Context
        qualifiedName: System.Web.HttpApplication.Context
        isExternal: true
      VB:
      - id: System.Web.HttpApplication.Context
        name: Context
        nameWithType: HttpApplication.Context
        qualifiedName: System.Web.HttpApplication.Context
        isExternal: true
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: P:System.Web.HttpApplication.Context
  System.Web.HttpApplication.Events:
    name:
      CSharp:
      - id: System.Web.HttpApplication.Events
        name: Events
        nameWithType: HttpApplication.Events
        qualifiedName: System.Web.HttpApplication.Events
        isExternal: true
      VB:
      - id: System.Web.HttpApplication.Events
        name: Events
        nameWithType: HttpApplication.Events
        qualifiedName: System.Web.HttpApplication.Events
        isExternal: true
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: P:System.Web.HttpApplication.Events
  System.Web.HttpApplication.Request:
    name:
      CSharp:
      - id: System.Web.HttpApplication.Request
        name: Request
        nameWithType: HttpApplication.Request
        qualifiedName: System.Web.HttpApplication.Request
        isExternal: true
      VB:
      - id: System.Web.HttpApplication.Request
        name: Request
        nameWithType: HttpApplication.Request
        qualifiedName: System.Web.HttpApplication.Request
        isExternal: true
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: P:System.Web.HttpApplication.Request
  System.Web.HttpApplication.Response:
    name:
      CSharp:
      - id: System.Web.HttpApplication.Response
        name: Response
        nameWithType: HttpApplication.Response
        qualifiedName: System.Web.HttpApplication.Response
        isExternal: true
      VB:
      - id: System.Web.HttpApplication.Response
        name: Response
        nameWithType: HttpApplication.Response
        qualifiedName: System.Web.HttpApplication.Response
        isExternal: true
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: P:System.Web.HttpApplication.Response
  System.Web.HttpApplication.Session:
    name:
      CSharp:
      - id: System.Web.HttpApplication.Session
        name: Session
        nameWithType: HttpApplication.Session
        qualifiedName: System.Web.HttpApplication.Session
        isExternal: true
      VB:
      - id: System.Web.HttpApplication.Session
        name: Session
        nameWithType: HttpApplication.Session
        qualifiedName: System.Web.HttpApplication.Session
        isExternal: true
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: P:System.Web.HttpApplication.Session
  System.Web.HttpApplication.Application:
    name:
      CSharp:
      - id: System.Web.HttpApplication.Application
        name: Application
        nameWithType: HttpApplication.Application
        qualifiedName: System.Web.HttpApplication.Application
        isExternal: true
      VB:
      - id: System.Web.HttpApplication.Application
        name: Application
        nameWithType: HttpApplication.Application
        qualifiedName: System.Web.HttpApplication.Application
        isExternal: true
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: P:System.Web.HttpApplication.Application
  System.Web.HttpApplication.Server:
    name:
      CSharp:
      - id: System.Web.HttpApplication.Server
        name: Server
        nameWithType: HttpApplication.Server
        qualifiedName: System.Web.HttpApplication.Server
        isExternal: true
      VB:
      - id: System.Web.HttpApplication.Server
        name: Server
        nameWithType: HttpApplication.Server
        qualifiedName: System.Web.HttpApplication.Server
        isExternal: true
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: P:System.Web.HttpApplication.Server
  System.Web.HttpApplication.User:
    name:
      CSharp:
      - id: System.Web.HttpApplication.User
        name: User
        nameWithType: HttpApplication.User
        qualifiedName: System.Web.HttpApplication.User
        isExternal: true
      VB:
      - id: System.Web.HttpApplication.User
        name: User
        nameWithType: HttpApplication.User
        qualifiedName: System.Web.HttpApplication.User
        isExternal: true
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: P:System.Web.HttpApplication.User
  System.Web.HttpApplication.Modules:
    name:
      CSharp:
      - id: System.Web.HttpApplication.Modules
        name: Modules
        nameWithType: HttpApplication.Modules
        qualifiedName: System.Web.HttpApplication.Modules
        isExternal: true
      VB:
      - id: System.Web.HttpApplication.Modules
        name: Modules
        nameWithType: HttpApplication.Modules
        qualifiedName: System.Web.HttpApplication.Modules
        isExternal: true
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: P:System.Web.HttpApplication.Modules
  System.Web.HttpApplication.Site:
    name:
      CSharp:
      - id: System.Web.HttpApplication.Site
        name: Site
        nameWithType: HttpApplication.Site
        qualifiedName: System.Web.HttpApplication.Site
        isExternal: true
      VB:
      - id: System.Web.HttpApplication.Site
        name: Site
        nameWithType: HttpApplication.Site
        qualifiedName: System.Web.HttpApplication.Site
        isExternal: true
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: P:System.Web.HttpApplication.Site
  System.Web.HttpApplication.System#Web#IHttpHandler#IsReusable:
    name:
      CSharp:
      - id: System.Web.HttpApplication.System#Web#IHttpHandler#IsReusable
        name: IHttpHandler.IsReusable
        nameWithType: HttpApplication.IHttpHandler.IsReusable
        qualifiedName: System.Web.HttpApplication.System.Web.IHttpHandler.IsReusable
        isExternal: true
      VB:
      - id: System.Web.HttpApplication.System#Web#IHttpHandler#IsReusable
        name: System.Web.IHttpHandler.IsReusable
        nameWithType: HttpApplication.System.Web.IHttpHandler.IsReusable
        qualifiedName: System.Web.HttpApplication.System.Web.IHttpHandler.IsReusable
        isExternal: true
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: P:System.Web.HttpApplication.System#Web#IHttpHandler#IsReusable
  System.Web.HttpApplication.Disposed:
    name:
      CSharp:
      - id: System.Web.HttpApplication.Disposed
        name: Disposed
        nameWithType: HttpApplication.Disposed
        qualifiedName: System.Web.HttpApplication.Disposed
        isExternal: true
      VB:
      - id: System.Web.HttpApplication.Disposed
        name: Disposed
        nameWithType: HttpApplication.Disposed
        qualifiedName: System.Web.HttpApplication.Disposed
        isExternal: true
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: E:System.Web.HttpApplication.Disposed
  System.Web.HttpApplication.BeginRequest:
    name:
      CSharp:
      - id: System.Web.HttpApplication.BeginRequest
        name: BeginRequest
        nameWithType: HttpApplication.BeginRequest
        qualifiedName: System.Web.HttpApplication.BeginRequest
        isExternal: true
      VB:
      - id: System.Web.HttpApplication.BeginRequest
        name: BeginRequest
        nameWithType: HttpApplication.BeginRequest
        qualifiedName: System.Web.HttpApplication.BeginRequest
        isExternal: true
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: E:System.Web.HttpApplication.BeginRequest
  System.Web.HttpApplication.AuthenticateRequest:
    name:
      CSharp:
      - id: System.Web.HttpApplication.AuthenticateRequest
        name: AuthenticateRequest
        nameWithType: HttpApplication.AuthenticateRequest
        qualifiedName: System.Web.HttpApplication.AuthenticateRequest
        isExternal: true
      VB:
      - id: System.Web.HttpApplication.AuthenticateRequest
        name: AuthenticateRequest
        nameWithType: HttpApplication.AuthenticateRequest
        qualifiedName: System.Web.HttpApplication.AuthenticateRequest
        isExternal: true
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: E:System.Web.HttpApplication.AuthenticateRequest
  System.Web.HttpApplication.PostAuthenticateRequest:
    name:
      CSharp:
      - id: System.Web.HttpApplication.PostAuthenticateRequest
        name: PostAuthenticateRequest
        nameWithType: HttpApplication.PostAuthenticateRequest
        qualifiedName: System.Web.HttpApplication.PostAuthenticateRequest
        isExternal: true
      VB:
      - id: System.Web.HttpApplication.PostAuthenticateRequest
        name: PostAuthenticateRequest
        nameWithType: HttpApplication.PostAuthenticateRequest
        qualifiedName: System.Web.HttpApplication.PostAuthenticateRequest
        isExternal: true
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: E:System.Web.HttpApplication.PostAuthenticateRequest
  System.Web.HttpApplication.AuthorizeRequest:
    name:
      CSharp:
      - id: System.Web.HttpApplication.AuthorizeRequest
        name: AuthorizeRequest
        nameWithType: HttpApplication.AuthorizeRequest
        qualifiedName: System.Web.HttpApplication.AuthorizeRequest
        isExternal: true
      VB:
      - id: System.Web.HttpApplication.AuthorizeRequest
        name: AuthorizeRequest
        nameWithType: HttpApplication.AuthorizeRequest
        qualifiedName: System.Web.HttpApplication.AuthorizeRequest
        isExternal: true
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: E:System.Web.HttpApplication.AuthorizeRequest
  System.Web.HttpApplication.PostAuthorizeRequest:
    name:
      CSharp:
      - id: System.Web.HttpApplication.PostAuthorizeRequest
        name: PostAuthorizeRequest
        nameWithType: HttpApplication.PostAuthorizeRequest
        qualifiedName: System.Web.HttpApplication.PostAuthorizeRequest
        isExternal: true
      VB:
      - id: System.Web.HttpApplication.PostAuthorizeRequest
        name: PostAuthorizeRequest
        nameWithType: HttpApplication.PostAuthorizeRequest
        qualifiedName: System.Web.HttpApplication.PostAuthorizeRequest
        isExternal: true
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: E:System.Web.HttpApplication.PostAuthorizeRequest
  System.Web.HttpApplication.ResolveRequestCache:
    name:
      CSharp:
      - id: System.Web.HttpApplication.ResolveRequestCache
        name: ResolveRequestCache
        nameWithType: HttpApplication.ResolveRequestCache
        qualifiedName: System.Web.HttpApplication.ResolveRequestCache
        isExternal: true
      VB:
      - id: System.Web.HttpApplication.ResolveRequestCache
        name: ResolveRequestCache
        nameWithType: HttpApplication.ResolveRequestCache
        qualifiedName: System.Web.HttpApplication.ResolveRequestCache
        isExternal: true
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: E:System.Web.HttpApplication.ResolveRequestCache
  System.Web.HttpApplication.PostResolveRequestCache:
    name:
      CSharp:
      - id: System.Web.HttpApplication.PostResolveRequestCache
        name: PostResolveRequestCache
        nameWithType: HttpApplication.PostResolveRequestCache
        qualifiedName: System.Web.HttpApplication.PostResolveRequestCache
        isExternal: true
      VB:
      - id: System.Web.HttpApplication.PostResolveRequestCache
        name: PostResolveRequestCache
        nameWithType: HttpApplication.PostResolveRequestCache
        qualifiedName: System.Web.HttpApplication.PostResolveRequestCache
        isExternal: true
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: E:System.Web.HttpApplication.PostResolveRequestCache
  System.Web.HttpApplication.MapRequestHandler:
    name:
      CSharp:
      - id: System.Web.HttpApplication.MapRequestHandler
        name: MapRequestHandler
        nameWithType: HttpApplication.MapRequestHandler
        qualifiedName: System.Web.HttpApplication.MapRequestHandler
        isExternal: true
      VB:
      - id: System.Web.HttpApplication.MapRequestHandler
        name: MapRequestHandler
        nameWithType: HttpApplication.MapRequestHandler
        qualifiedName: System.Web.HttpApplication.MapRequestHandler
        isExternal: true
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: E:System.Web.HttpApplication.MapRequestHandler
  System.Web.HttpApplication.PostMapRequestHandler:
    name:
      CSharp:
      - id: System.Web.HttpApplication.PostMapRequestHandler
        name: PostMapRequestHandler
        nameWithType: HttpApplication.PostMapRequestHandler
        qualifiedName: System.Web.HttpApplication.PostMapRequestHandler
        isExternal: true
      VB:
      - id: System.Web.HttpApplication.PostMapRequestHandler
        name: PostMapRequestHandler
        nameWithType: HttpApplication.PostMapRequestHandler
        qualifiedName: System.Web.HttpApplication.PostMapRequestHandler
        isExternal: true
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: E:System.Web.HttpApplication.PostMapRequestHandler
  System.Web.HttpApplication.AcquireRequestState:
    name:
      CSharp:
      - id: System.Web.HttpApplication.AcquireRequestState
        name: AcquireRequestState
        nameWithType: HttpApplication.AcquireRequestState
        qualifiedName: System.Web.HttpApplication.AcquireRequestState
        isExternal: true
      VB:
      - id: System.Web.HttpApplication.AcquireRequestState
        name: AcquireRequestState
        nameWithType: HttpApplication.AcquireRequestState
        qualifiedName: System.Web.HttpApplication.AcquireRequestState
        isExternal: true
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: E:System.Web.HttpApplication.AcquireRequestState
  System.Web.HttpApplication.PostAcquireRequestState:
    name:
      CSharp:
      - id: System.Web.HttpApplication.PostAcquireRequestState
        name: PostAcquireRequestState
        nameWithType: HttpApplication.PostAcquireRequestState
        qualifiedName: System.Web.HttpApplication.PostAcquireRequestState
        isExternal: true
      VB:
      - id: System.Web.HttpApplication.PostAcquireRequestState
        name: PostAcquireRequestState
        nameWithType: HttpApplication.PostAcquireRequestState
        qualifiedName: System.Web.HttpApplication.PostAcquireRequestState
        isExternal: true
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: E:System.Web.HttpApplication.PostAcquireRequestState
  System.Web.HttpApplication.PreRequestHandlerExecute:
    name:
      CSharp:
      - id: System.Web.HttpApplication.PreRequestHandlerExecute
        name: PreRequestHandlerExecute
        nameWithType: HttpApplication.PreRequestHandlerExecute
        qualifiedName: System.Web.HttpApplication.PreRequestHandlerExecute
        isExternal: true
      VB:
      - id: System.Web.HttpApplication.PreRequestHandlerExecute
        name: PreRequestHandlerExecute
        nameWithType: HttpApplication.PreRequestHandlerExecute
        qualifiedName: System.Web.HttpApplication.PreRequestHandlerExecute
        isExternal: true
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: E:System.Web.HttpApplication.PreRequestHandlerExecute
  System.Web.HttpApplication.PostRequestHandlerExecute:
    name:
      CSharp:
      - id: System.Web.HttpApplication.PostRequestHandlerExecute
        name: PostRequestHandlerExecute
        nameWithType: HttpApplication.PostRequestHandlerExecute
        qualifiedName: System.Web.HttpApplication.PostRequestHandlerExecute
        isExternal: true
      VB:
      - id: System.Web.HttpApplication.PostRequestHandlerExecute
        name: PostRequestHandlerExecute
        nameWithType: HttpApplication.PostRequestHandlerExecute
        qualifiedName: System.Web.HttpApplication.PostRequestHandlerExecute
        isExternal: true
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: E:System.Web.HttpApplication.PostRequestHandlerExecute
  System.Web.HttpApplication.ReleaseRequestState:
    name:
      CSharp:
      - id: System.Web.HttpApplication.ReleaseRequestState
        name: ReleaseRequestState
        nameWithType: HttpApplication.ReleaseRequestState
        qualifiedName: System.Web.HttpApplication.ReleaseRequestState
        isExternal: true
      VB:
      - id: System.Web.HttpApplication.ReleaseRequestState
        name: ReleaseRequestState
        nameWithType: HttpApplication.ReleaseRequestState
        qualifiedName: System.Web.HttpApplication.ReleaseRequestState
        isExternal: true
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: E:System.Web.HttpApplication.ReleaseRequestState
  System.Web.HttpApplication.PostReleaseRequestState:
    name:
      CSharp:
      - id: System.Web.HttpApplication.PostReleaseRequestState
        name: PostReleaseRequestState
        nameWithType: HttpApplication.PostReleaseRequestState
        qualifiedName: System.Web.HttpApplication.PostReleaseRequestState
        isExternal: true
      VB:
      - id: System.Web.HttpApplication.PostReleaseRequestState
        name: PostReleaseRequestState
        nameWithType: HttpApplication.PostReleaseRequestState
        qualifiedName: System.Web.HttpApplication.PostReleaseRequestState
        isExternal: true
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: E:System.Web.HttpApplication.PostReleaseRequestState
  System.Web.HttpApplication.UpdateRequestCache:
    name:
      CSharp:
      - id: System.Web.HttpApplication.UpdateRequestCache
        name: UpdateRequestCache
        nameWithType: HttpApplication.UpdateRequestCache
        qualifiedName: System.Web.HttpApplication.UpdateRequestCache
        isExternal: true
      VB:
      - id: System.Web.HttpApplication.UpdateRequestCache
        name: UpdateRequestCache
        nameWithType: HttpApplication.UpdateRequestCache
        qualifiedName: System.Web.HttpApplication.UpdateRequestCache
        isExternal: true
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: E:System.Web.HttpApplication.UpdateRequestCache
  System.Web.HttpApplication.PostUpdateRequestCache:
    name:
      CSharp:
      - id: System.Web.HttpApplication.PostUpdateRequestCache
        name: PostUpdateRequestCache
        nameWithType: HttpApplication.PostUpdateRequestCache
        qualifiedName: System.Web.HttpApplication.PostUpdateRequestCache
        isExternal: true
      VB:
      - id: System.Web.HttpApplication.PostUpdateRequestCache
        name: PostUpdateRequestCache
        nameWithType: HttpApplication.PostUpdateRequestCache
        qualifiedName: System.Web.HttpApplication.PostUpdateRequestCache
        isExternal: true
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: E:System.Web.HttpApplication.PostUpdateRequestCache
  System.Web.HttpApplication.LogRequest:
    name:
      CSharp:
      - id: System.Web.HttpApplication.LogRequest
        name: LogRequest
        nameWithType: HttpApplication.LogRequest
        qualifiedName: System.Web.HttpApplication.LogRequest
        isExternal: true
      VB:
      - id: System.Web.HttpApplication.LogRequest
        name: LogRequest
        nameWithType: HttpApplication.LogRequest
        qualifiedName: System.Web.HttpApplication.LogRequest
        isExternal: true
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: E:System.Web.HttpApplication.LogRequest
  System.Web.HttpApplication.PostLogRequest:
    name:
      CSharp:
      - id: System.Web.HttpApplication.PostLogRequest
        name: PostLogRequest
        nameWithType: HttpApplication.PostLogRequest
        qualifiedName: System.Web.HttpApplication.PostLogRequest
        isExternal: true
      VB:
      - id: System.Web.HttpApplication.PostLogRequest
        name: PostLogRequest
        nameWithType: HttpApplication.PostLogRequest
        qualifiedName: System.Web.HttpApplication.PostLogRequest
        isExternal: true
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: E:System.Web.HttpApplication.PostLogRequest
  System.Web.HttpApplication.EndRequest:
    name:
      CSharp:
      - id: System.Web.HttpApplication.EndRequest
        name: EndRequest
        nameWithType: HttpApplication.EndRequest
        qualifiedName: System.Web.HttpApplication.EndRequest
        isExternal: true
      VB:
      - id: System.Web.HttpApplication.EndRequest
        name: EndRequest
        nameWithType: HttpApplication.EndRequest
        qualifiedName: System.Web.HttpApplication.EndRequest
        isExternal: true
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: E:System.Web.HttpApplication.EndRequest
  System.Web.HttpApplication.Error:
    name:
      CSharp:
      - id: System.Web.HttpApplication.Error
        name: Error
        nameWithType: HttpApplication.Error
        qualifiedName: System.Web.HttpApplication.Error
        isExternal: true
      VB:
      - id: System.Web.HttpApplication.Error
        name: Error
        nameWithType: HttpApplication.Error
        qualifiedName: System.Web.HttpApplication.Error
        isExternal: true
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: E:System.Web.HttpApplication.Error
  System.Web.HttpApplication.RequestCompleted:
    name:
      CSharp:
      - id: System.Web.HttpApplication.RequestCompleted
        name: RequestCompleted
        nameWithType: HttpApplication.RequestCompleted
        qualifiedName: System.Web.HttpApplication.RequestCompleted
        isExternal: true
      VB:
      - id: System.Web.HttpApplication.RequestCompleted
        name: RequestCompleted
        nameWithType: HttpApplication.RequestCompleted
        qualifiedName: System.Web.HttpApplication.RequestCompleted
        isExternal: true
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: E:System.Web.HttpApplication.RequestCompleted
  System.Web.HttpApplication.PreSendRequestHeaders:
    name:
      CSharp:
      - id: System.Web.HttpApplication.PreSendRequestHeaders
        name: PreSendRequestHeaders
        nameWithType: HttpApplication.PreSendRequestHeaders
        qualifiedName: System.Web.HttpApplication.PreSendRequestHeaders
        isExternal: true
      VB:
      - id: System.Web.HttpApplication.PreSendRequestHeaders
        name: PreSendRequestHeaders
        nameWithType: HttpApplication.PreSendRequestHeaders
        qualifiedName: System.Web.HttpApplication.PreSendRequestHeaders
        isExternal: true
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: E:System.Web.HttpApplication.PreSendRequestHeaders
  System.Web.HttpApplication.PreSendRequestContent:
    name:
      CSharp:
      - id: System.Web.HttpApplication.PreSendRequestContent
        name: PreSendRequestContent
        nameWithType: HttpApplication.PreSendRequestContent
        qualifiedName: System.Web.HttpApplication.PreSendRequestContent
        isExternal: true
      VB:
      - id: System.Web.HttpApplication.PreSendRequestContent
        name: PreSendRequestContent
        nameWithType: HttpApplication.PreSendRequestContent
        qualifiedName: System.Web.HttpApplication.PreSendRequestContent
        isExternal: true
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: E:System.Web.HttpApplication.PreSendRequestContent
  System.ComponentModel:
    name:
      CSharp:
      - name: System.ComponentModel
        nameWithType: System.ComponentModel
        qualifiedName: System.ComponentModel
        isExternal: true
      VB:
      - name: System.ComponentModel
        nameWithType: System.ComponentModel
        qualifiedName: System.ComponentModel
    isDefinition: true
    commentId: N:System.ComponentModel
  System.ComponentModel.IComponent:
    name:
      CSharp:
      - id: System.ComponentModel.IComponent
        name: IComponent
        nameWithType: IComponent
        qualifiedName: System.ComponentModel.IComponent
        isExternal: true
      VB:
      - id: System.ComponentModel.IComponent
        name: IComponent
        nameWithType: IComponent
        qualifiedName: System.ComponentModel.IComponent
        isExternal: true
    isDefinition: true
    parent: System.ComponentModel
    commentId: T:System.ComponentModel.IComponent
  System.IDisposable:
    name:
      CSharp:
      - id: System.IDisposable
        name: IDisposable
        nameWithType: IDisposable
        qualifiedName: System.IDisposable
        isExternal: true
      VB:
      - id: System.IDisposable
        name: IDisposable
        nameWithType: IDisposable
        qualifiedName: System.IDisposable
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.IDisposable
  System.Web.IHttpAsyncHandler:
    name:
      CSharp:
      - id: System.Web.IHttpAsyncHandler
        name: IHttpAsyncHandler
        nameWithType: IHttpAsyncHandler
        qualifiedName: System.Web.IHttpAsyncHandler
        isExternal: true
      VB:
      - id: System.Web.IHttpAsyncHandler
        name: IHttpAsyncHandler
        nameWithType: IHttpAsyncHandler
        qualifiedName: System.Web.IHttpAsyncHandler
        isExternal: true
    isDefinition: true
    parent: System.Web
    commentId: T:System.Web.IHttpAsyncHandler
  System.Web.IHttpHandler:
    name:
      CSharp:
      - id: System.Web.IHttpHandler
        name: IHttpHandler
        nameWithType: IHttpHandler
        qualifiedName: System.Web.IHttpHandler
        isExternal: true
      VB:
      - id: System.Web.IHttpHandler
        name: IHttpHandler
        nameWithType: IHttpHandler
        qualifiedName: System.Web.IHttpHandler
        isExternal: true
    isDefinition: true
    parent: System.Web
    commentId: T:System.Web.IHttpHandler
  AQuIP.Admin.MvcApplication.Application_Start*:
    name:
      CSharp:
      - id: AQuIP.Admin.MvcApplication.Application_Start*
        name: Application_Start
        nameWithType: MvcApplication.Application_Start
        qualifiedName: AQuIP.Admin.MvcApplication.Application_Start
      VB:
      - id: AQuIP.Admin.MvcApplication.Application_Start*
        name: Application_Start
        nameWithType: MvcApplication.Application_Start
        qualifiedName: AQuIP.Admin.MvcApplication.Application_Start
    isDefinition: true
    commentId: Overload:AQuIP.Admin.MvcApplication.Application_Start
  System.EventArgs:
    name:
      CSharp:
      - id: System.EventArgs
        name: EventArgs
        nameWithType: EventArgs
        qualifiedName: System.EventArgs
        isExternal: true
      VB:
      - id: System.EventArgs
        name: EventArgs
        nameWithType: EventArgs
        qualifiedName: System.EventArgs
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.EventArgs
  AQuIP.Admin.MvcApplication.Application_Error*:
    name:
      CSharp:
      - id: AQuIP.Admin.MvcApplication.Application_Error*
        name: Application_Error
        nameWithType: MvcApplication.Application_Error
        qualifiedName: AQuIP.Admin.MvcApplication.Application_Error
      VB:
      - id: AQuIP.Admin.MvcApplication.Application_Error*
        name: Application_Error
        nameWithType: MvcApplication.Application_Error
        qualifiedName: AQuIP.Admin.MvcApplication.Application_Error
    isDefinition: true
    commentId: Overload:AQuIP.Admin.MvcApplication.Application_Error
  AQuIP.Admin.MvcApplication:
    name:
      CSharp:
      - id: AQuIP.Admin.MvcApplication
        name: MvcApplication
        nameWithType: MvcApplication
        qualifiedName: AQuIP.Admin.MvcApplication
      VB:
      - id: AQuIP.Admin.MvcApplication
        name: MvcApplication
        nameWithType: MvcApplication
        qualifiedName: AQuIP.Admin.MvcApplication
    isDefinition: true
    commentId: T:AQuIP.Admin.MvcApplication
  AQuIP.Admin:
    name:
      CSharp:
      - name: AQuIP.Admin
        nameWithType: AQuIP.Admin
        qualifiedName: AQuIP.Admin
      VB:
      - name: AQuIP.Admin
        nameWithType: AQuIP.Admin
        qualifiedName: AQuIP.Admin
    isDefinition: true
    commentId: N:AQuIP.Admin
  System.Web.Mvc.Controller:
    name:
      CSharp:
      - id: System.Web.Mvc.Controller
        name: Controller
        nameWithType: Controller
        qualifiedName: System.Web.Mvc.Controller
        isExternal: true
      VB:
      - id: System.Web.Mvc.Controller
        name: Controller
        nameWithType: Controller
        qualifiedName: System.Web.Mvc.Controller
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc
    commentId: T:System.Web.Mvc.Controller
  System.Web.Mvc.Controller.Content(System.String):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.Content(System.String)
        name: Content
        nameWithType: Controller.Content
        qualifiedName: System.Web.Mvc.Controller.Content
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.Content(System.String)
        name: Content
        nameWithType: Controller.Content
        qualifiedName: System.Web.Mvc.Controller.Content
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.Content(System.String)
  System.Web.Mvc.Controller.Content(System.String,System.String):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.Content(System.String,System.String)
        name: Content
        nameWithType: Controller.Content
        qualifiedName: System.Web.Mvc.Controller.Content
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.Content(System.String,System.String)
        name: Content
        nameWithType: Controller.Content
        qualifiedName: System.Web.Mvc.Controller.Content
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.Content(System.String,System.String)
  System.Web.Mvc.Controller.Content(System.String,System.String,System.Text.Encoding):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.Content(System.String,System.String,System.Text.Encoding)
        name: Content
        nameWithType: Controller.Content
        qualifiedName: System.Web.Mvc.Controller.Content
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Text.Encoding
        name: Encoding
        nameWithType: Encoding
        qualifiedName: System.Text.Encoding
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.Content(System.String,System.String,System.Text.Encoding)
        name: Content
        nameWithType: Controller.Content
        qualifiedName: System.Web.Mvc.Controller.Content
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Text.Encoding
        name: Encoding
        nameWithType: Encoding
        qualifiedName: System.Text.Encoding
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.Content(System.String,System.String,System.Text.Encoding)
  System.Web.Mvc.Controller.CreateActionInvoker:
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.CreateActionInvoker
        name: CreateActionInvoker
        nameWithType: Controller.CreateActionInvoker
        qualifiedName: System.Web.Mvc.Controller.CreateActionInvoker
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.CreateActionInvoker
        name: CreateActionInvoker
        nameWithType: Controller.CreateActionInvoker
        qualifiedName: System.Web.Mvc.Controller.CreateActionInvoker
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.CreateActionInvoker
  System.Web.Mvc.Controller.CreateTempDataProvider:
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.CreateTempDataProvider
        name: CreateTempDataProvider
        nameWithType: Controller.CreateTempDataProvider
        qualifiedName: System.Web.Mvc.Controller.CreateTempDataProvider
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.CreateTempDataProvider
        name: CreateTempDataProvider
        nameWithType: Controller.CreateTempDataProvider
        qualifiedName: System.Web.Mvc.Controller.CreateTempDataProvider
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.CreateTempDataProvider
  System.Web.Mvc.Controller.Dispose:
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.Dispose
        name: Dispose
        nameWithType: Controller.Dispose
        qualifiedName: System.Web.Mvc.Controller.Dispose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.Dispose
        name: Dispose
        nameWithType: Controller.Dispose
        qualifiedName: System.Web.Mvc.Controller.Dispose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.Dispose
  System.Web.Mvc.Controller.Dispose(System.Boolean):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.Dispose(System.Boolean)
        name: Dispose
        nameWithType: Controller.Dispose
        qualifiedName: System.Web.Mvc.Controller.Dispose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.Dispose(System.Boolean)
        name: Dispose
        nameWithType: Controller.Dispose
        qualifiedName: System.Web.Mvc.Controller.Dispose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.Dispose(System.Boolean)
  System.Web.Mvc.Controller.ExecuteCore:
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.ExecuteCore
        name: ExecuteCore
        nameWithType: Controller.ExecuteCore
        qualifiedName: System.Web.Mvc.Controller.ExecuteCore
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.ExecuteCore
        name: ExecuteCore
        nameWithType: Controller.ExecuteCore
        qualifiedName: System.Web.Mvc.Controller.ExecuteCore
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.ExecuteCore
  System.Web.Mvc.Controller.File(System.Byte[],System.String):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.File(System.Byte[],System.String)
        name: File
        nameWithType: Controller.File
        qualifiedName: System.Web.Mvc.Controller.File
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.File(System.Byte[],System.String)
        name: File
        nameWithType: Controller.File
        qualifiedName: System.Web.Mvc.Controller.File
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.File(System.Byte[],System.String)
  System.Web.Mvc.Controller.File(System.Byte[],System.String,System.String):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.File(System.Byte[],System.String,System.String)
        name: File
        nameWithType: Controller.File
        qualifiedName: System.Web.Mvc.Controller.File
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.File(System.Byte[],System.String,System.String)
        name: File
        nameWithType: Controller.File
        qualifiedName: System.Web.Mvc.Controller.File
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.File(System.Byte[],System.String,System.String)
  System.Web.Mvc.Controller.File(System.IO.Stream,System.String):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.File(System.IO.Stream,System.String)
        name: File
        nameWithType: Controller.File
        qualifiedName: System.Web.Mvc.Controller.File
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.IO.Stream
        name: Stream
        nameWithType: Stream
        qualifiedName: System.IO.Stream
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.File(System.IO.Stream,System.String)
        name: File
        nameWithType: Controller.File
        qualifiedName: System.Web.Mvc.Controller.File
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.IO.Stream
        name: Stream
        nameWithType: Stream
        qualifiedName: System.IO.Stream
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.File(System.IO.Stream,System.String)
  System.Web.Mvc.Controller.File(System.IO.Stream,System.String,System.String):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.File(System.IO.Stream,System.String,System.String)
        name: File
        nameWithType: Controller.File
        qualifiedName: System.Web.Mvc.Controller.File
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.IO.Stream
        name: Stream
        nameWithType: Stream
        qualifiedName: System.IO.Stream
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.File(System.IO.Stream,System.String,System.String)
        name: File
        nameWithType: Controller.File
        qualifiedName: System.Web.Mvc.Controller.File
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.IO.Stream
        name: Stream
        nameWithType: Stream
        qualifiedName: System.IO.Stream
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.File(System.IO.Stream,System.String,System.String)
  System.Web.Mvc.Controller.File(System.String,System.String):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.File(System.String,System.String)
        name: File
        nameWithType: Controller.File
        qualifiedName: System.Web.Mvc.Controller.File
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.File(System.String,System.String)
        name: File
        nameWithType: Controller.File
        qualifiedName: System.Web.Mvc.Controller.File
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.File(System.String,System.String)
  System.Web.Mvc.Controller.File(System.String,System.String,System.String):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.File(System.String,System.String,System.String)
        name: File
        nameWithType: Controller.File
        qualifiedName: System.Web.Mvc.Controller.File
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.File(System.String,System.String,System.String)
        name: File
        nameWithType: Controller.File
        qualifiedName: System.Web.Mvc.Controller.File
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.File(System.String,System.String,System.String)
  System.Web.Mvc.Controller.HandleUnknownAction(System.String):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.HandleUnknownAction(System.String)
        name: HandleUnknownAction
        nameWithType: Controller.HandleUnknownAction
        qualifiedName: System.Web.Mvc.Controller.HandleUnknownAction
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.HandleUnknownAction(System.String)
        name: HandleUnknownAction
        nameWithType: Controller.HandleUnknownAction
        qualifiedName: System.Web.Mvc.Controller.HandleUnknownAction
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.HandleUnknownAction(System.String)
  System.Web.Mvc.Controller.HttpNotFound:
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.HttpNotFound
        name: HttpNotFound
        nameWithType: Controller.HttpNotFound
        qualifiedName: System.Web.Mvc.Controller.HttpNotFound
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.HttpNotFound
        name: HttpNotFound
        nameWithType: Controller.HttpNotFound
        qualifiedName: System.Web.Mvc.Controller.HttpNotFound
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.HttpNotFound
  System.Web.Mvc.Controller.HttpNotFound(System.String):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.HttpNotFound(System.String)
        name: HttpNotFound
        nameWithType: Controller.HttpNotFound
        qualifiedName: System.Web.Mvc.Controller.HttpNotFound
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.HttpNotFound(System.String)
        name: HttpNotFound
        nameWithType: Controller.HttpNotFound
        qualifiedName: System.Web.Mvc.Controller.HttpNotFound
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.HttpNotFound(System.String)
  System.Web.Mvc.Controller.JavaScript(System.String):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.JavaScript(System.String)
        name: JavaScript
        nameWithType: Controller.JavaScript
        qualifiedName: System.Web.Mvc.Controller.JavaScript
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.JavaScript(System.String)
        name: JavaScript
        nameWithType: Controller.JavaScript
        qualifiedName: System.Web.Mvc.Controller.JavaScript
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.JavaScript(System.String)
  System.Web.Mvc.Controller.Json(System.Object):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.Json(System.Object)
        name: Json
        nameWithType: Controller.Json
        qualifiedName: System.Web.Mvc.Controller.Json
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.Json(System.Object)
        name: Json
        nameWithType: Controller.Json
        qualifiedName: System.Web.Mvc.Controller.Json
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.Json(System.Object)
  System.Web.Mvc.Controller.Json(System.Object,System.String):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.Json(System.Object,System.String)
        name: Json
        nameWithType: Controller.Json
        qualifiedName: System.Web.Mvc.Controller.Json
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.Json(System.Object,System.String)
        name: Json
        nameWithType: Controller.Json
        qualifiedName: System.Web.Mvc.Controller.Json
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.Json(System.Object,System.String)
  System.Web.Mvc.Controller.Json(System.Object,System.String,System.Text.Encoding):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.Json(System.Object,System.String,System.Text.Encoding)
        name: Json
        nameWithType: Controller.Json
        qualifiedName: System.Web.Mvc.Controller.Json
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Text.Encoding
        name: Encoding
        nameWithType: Encoding
        qualifiedName: System.Text.Encoding
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.Json(System.Object,System.String,System.Text.Encoding)
        name: Json
        nameWithType: Controller.Json
        qualifiedName: System.Web.Mvc.Controller.Json
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Text.Encoding
        name: Encoding
        nameWithType: Encoding
        qualifiedName: System.Text.Encoding
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.Json(System.Object,System.String,System.Text.Encoding)
  System.Web.Mvc.Controller.Json(System.Object,System.Web.Mvc.JsonRequestBehavior):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.Json(System.Object,System.Web.Mvc.JsonRequestBehavior)
        name: Json
        nameWithType: Controller.Json
        qualifiedName: System.Web.Mvc.Controller.Json
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.JsonRequestBehavior
        name: JsonRequestBehavior
        nameWithType: JsonRequestBehavior
        qualifiedName: System.Web.Mvc.JsonRequestBehavior
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.Json(System.Object,System.Web.Mvc.JsonRequestBehavior)
        name: Json
        nameWithType: Controller.Json
        qualifiedName: System.Web.Mvc.Controller.Json
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.JsonRequestBehavior
        name: JsonRequestBehavior
        nameWithType: JsonRequestBehavior
        qualifiedName: System.Web.Mvc.JsonRequestBehavior
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.Json(System.Object,System.Web.Mvc.JsonRequestBehavior)
  System.Web.Mvc.Controller.Json(System.Object,System.String,System.Web.Mvc.JsonRequestBehavior):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.Json(System.Object,System.String,System.Web.Mvc.JsonRequestBehavior)
        name: Json
        nameWithType: Controller.Json
        qualifiedName: System.Web.Mvc.Controller.Json
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.JsonRequestBehavior
        name: JsonRequestBehavior
        nameWithType: JsonRequestBehavior
        qualifiedName: System.Web.Mvc.JsonRequestBehavior
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.Json(System.Object,System.String,System.Web.Mvc.JsonRequestBehavior)
        name: Json
        nameWithType: Controller.Json
        qualifiedName: System.Web.Mvc.Controller.Json
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.JsonRequestBehavior
        name: JsonRequestBehavior
        nameWithType: JsonRequestBehavior
        qualifiedName: System.Web.Mvc.JsonRequestBehavior
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.Json(System.Object,System.String,System.Web.Mvc.JsonRequestBehavior)
  System.Web.Mvc.Controller.Json(System.Object,System.String,System.Text.Encoding,System.Web.Mvc.JsonRequestBehavior):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.Json(System.Object,System.String,System.Text.Encoding,System.Web.Mvc.JsonRequestBehavior)
        name: Json
        nameWithType: Controller.Json
        qualifiedName: System.Web.Mvc.Controller.Json
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Text.Encoding
        name: Encoding
        nameWithType: Encoding
        qualifiedName: System.Text.Encoding
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.JsonRequestBehavior
        name: JsonRequestBehavior
        nameWithType: JsonRequestBehavior
        qualifiedName: System.Web.Mvc.JsonRequestBehavior
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.Json(System.Object,System.String,System.Text.Encoding,System.Web.Mvc.JsonRequestBehavior)
        name: Json
        nameWithType: Controller.Json
        qualifiedName: System.Web.Mvc.Controller.Json
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Text.Encoding
        name: Encoding
        nameWithType: Encoding
        qualifiedName: System.Text.Encoding
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.JsonRequestBehavior
        name: JsonRequestBehavior
        nameWithType: JsonRequestBehavior
        qualifiedName: System.Web.Mvc.JsonRequestBehavior
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.Json(System.Object,System.String,System.Text.Encoding,System.Web.Mvc.JsonRequestBehavior)
  System.Web.Mvc.Controller.Initialize(System.Web.Routing.RequestContext):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.Initialize(System.Web.Routing.RequestContext)
        name: Initialize
        nameWithType: Controller.Initialize
        qualifiedName: System.Web.Mvc.Controller.Initialize
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Routing.RequestContext
        name: RequestContext
        nameWithType: RequestContext
        qualifiedName: System.Web.Routing.RequestContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.Initialize(System.Web.Routing.RequestContext)
        name: Initialize
        nameWithType: Controller.Initialize
        qualifiedName: System.Web.Mvc.Controller.Initialize
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Routing.RequestContext
        name: RequestContext
        nameWithType: RequestContext
        qualifiedName: System.Web.Routing.RequestContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.Initialize(System.Web.Routing.RequestContext)
  System.Web.Mvc.Controller.OnActionExecuting(System.Web.Mvc.ActionExecutingContext):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)
        name: OnActionExecuting
        nameWithType: Controller.OnActionExecuting
        qualifiedName: System.Web.Mvc.Controller.OnActionExecuting
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Mvc.ActionExecutingContext
        name: ActionExecutingContext
        nameWithType: ActionExecutingContext
        qualifiedName: System.Web.Mvc.ActionExecutingContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)
        name: OnActionExecuting
        nameWithType: Controller.OnActionExecuting
        qualifiedName: System.Web.Mvc.Controller.OnActionExecuting
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Mvc.ActionExecutingContext
        name: ActionExecutingContext
        nameWithType: ActionExecutingContext
        qualifiedName: System.Web.Mvc.ActionExecutingContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)
  System.Web.Mvc.Controller.OnActionExecuted(System.Web.Mvc.ActionExecutedContext):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)
        name: OnActionExecuted
        nameWithType: Controller.OnActionExecuted
        qualifiedName: System.Web.Mvc.Controller.OnActionExecuted
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Mvc.ActionExecutedContext
        name: ActionExecutedContext
        nameWithType: ActionExecutedContext
        qualifiedName: System.Web.Mvc.ActionExecutedContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)
        name: OnActionExecuted
        nameWithType: Controller.OnActionExecuted
        qualifiedName: System.Web.Mvc.Controller.OnActionExecuted
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Mvc.ActionExecutedContext
        name: ActionExecutedContext
        nameWithType: ActionExecutedContext
        qualifiedName: System.Web.Mvc.ActionExecutedContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)
  System.Web.Mvc.Controller.OnAuthentication(System.Web.Mvc.Filters.AuthenticationContext):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.OnAuthentication(System.Web.Mvc.Filters.AuthenticationContext)
        name: OnAuthentication
        nameWithType: Controller.OnAuthentication
        qualifiedName: System.Web.Mvc.Controller.OnAuthentication
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Mvc.Filters.AuthenticationContext
        name: AuthenticationContext
        nameWithType: AuthenticationContext
        qualifiedName: System.Web.Mvc.Filters.AuthenticationContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.OnAuthentication(System.Web.Mvc.Filters.AuthenticationContext)
        name: OnAuthentication
        nameWithType: Controller.OnAuthentication
        qualifiedName: System.Web.Mvc.Controller.OnAuthentication
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Mvc.Filters.AuthenticationContext
        name: AuthenticationContext
        nameWithType: AuthenticationContext
        qualifiedName: System.Web.Mvc.Filters.AuthenticationContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.OnAuthentication(System.Web.Mvc.Filters.AuthenticationContext)
  System.Web.Mvc.Controller.OnAuthenticationChallenge(System.Web.Mvc.Filters.AuthenticationChallengeContext):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.OnAuthenticationChallenge(System.Web.Mvc.Filters.AuthenticationChallengeContext)
        name: OnAuthenticationChallenge
        nameWithType: Controller.OnAuthenticationChallenge
        qualifiedName: System.Web.Mvc.Controller.OnAuthenticationChallenge
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Mvc.Filters.AuthenticationChallengeContext
        name: AuthenticationChallengeContext
        nameWithType: AuthenticationChallengeContext
        qualifiedName: System.Web.Mvc.Filters.AuthenticationChallengeContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.OnAuthenticationChallenge(System.Web.Mvc.Filters.AuthenticationChallengeContext)
        name: OnAuthenticationChallenge
        nameWithType: Controller.OnAuthenticationChallenge
        qualifiedName: System.Web.Mvc.Controller.OnAuthenticationChallenge
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Mvc.Filters.AuthenticationChallengeContext
        name: AuthenticationChallengeContext
        nameWithType: AuthenticationChallengeContext
        qualifiedName: System.Web.Mvc.Filters.AuthenticationChallengeContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.OnAuthenticationChallenge(System.Web.Mvc.Filters.AuthenticationChallengeContext)
  System.Web.Mvc.Controller.OnAuthorization(System.Web.Mvc.AuthorizationContext):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.OnAuthorization(System.Web.Mvc.AuthorizationContext)
        name: OnAuthorization
        nameWithType: Controller.OnAuthorization
        qualifiedName: System.Web.Mvc.Controller.OnAuthorization
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Mvc.AuthorizationContext
        name: AuthorizationContext
        nameWithType: AuthorizationContext
        qualifiedName: System.Web.Mvc.AuthorizationContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.OnAuthorization(System.Web.Mvc.AuthorizationContext)
        name: OnAuthorization
        nameWithType: Controller.OnAuthorization
        qualifiedName: System.Web.Mvc.Controller.OnAuthorization
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Mvc.AuthorizationContext
        name: AuthorizationContext
        nameWithType: AuthorizationContext
        qualifiedName: System.Web.Mvc.AuthorizationContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.OnAuthorization(System.Web.Mvc.AuthorizationContext)
  System.Web.Mvc.Controller.OnException(System.Web.Mvc.ExceptionContext):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.OnException(System.Web.Mvc.ExceptionContext)
        name: OnException
        nameWithType: Controller.OnException
        qualifiedName: System.Web.Mvc.Controller.OnException
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Mvc.ExceptionContext
        name: ExceptionContext
        nameWithType: ExceptionContext
        qualifiedName: System.Web.Mvc.ExceptionContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.OnException(System.Web.Mvc.ExceptionContext)
        name: OnException
        nameWithType: Controller.OnException
        qualifiedName: System.Web.Mvc.Controller.OnException
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Mvc.ExceptionContext
        name: ExceptionContext
        nameWithType: ExceptionContext
        qualifiedName: System.Web.Mvc.ExceptionContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.OnException(System.Web.Mvc.ExceptionContext)
  System.Web.Mvc.Controller.OnResultExecuted(System.Web.Mvc.ResultExecutedContext):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)
        name: OnResultExecuted
        nameWithType: Controller.OnResultExecuted
        qualifiedName: System.Web.Mvc.Controller.OnResultExecuted
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Mvc.ResultExecutedContext
        name: ResultExecutedContext
        nameWithType: ResultExecutedContext
        qualifiedName: System.Web.Mvc.ResultExecutedContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)
        name: OnResultExecuted
        nameWithType: Controller.OnResultExecuted
        qualifiedName: System.Web.Mvc.Controller.OnResultExecuted
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Mvc.ResultExecutedContext
        name: ResultExecutedContext
        nameWithType: ResultExecutedContext
        qualifiedName: System.Web.Mvc.ResultExecutedContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)
  System.Web.Mvc.Controller.OnResultExecuting(System.Web.Mvc.ResultExecutingContext):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)
        name: OnResultExecuting
        nameWithType: Controller.OnResultExecuting
        qualifiedName: System.Web.Mvc.Controller.OnResultExecuting
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Mvc.ResultExecutingContext
        name: ResultExecutingContext
        nameWithType: ResultExecutingContext
        qualifiedName: System.Web.Mvc.ResultExecutingContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)
        name: OnResultExecuting
        nameWithType: Controller.OnResultExecuting
        qualifiedName: System.Web.Mvc.Controller.OnResultExecuting
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Mvc.ResultExecutingContext
        name: ResultExecutingContext
        nameWithType: ResultExecutingContext
        qualifiedName: System.Web.Mvc.ResultExecutingContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)
  System.Web.Mvc.Controller.PartialView:
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.PartialView
        name: PartialView
        nameWithType: Controller.PartialView
        qualifiedName: System.Web.Mvc.Controller.PartialView
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.PartialView
        name: PartialView
        nameWithType: Controller.PartialView
        qualifiedName: System.Web.Mvc.Controller.PartialView
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.PartialView
  System.Web.Mvc.Controller.PartialView(System.Object):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.PartialView(System.Object)
        name: PartialView
        nameWithType: Controller.PartialView
        qualifiedName: System.Web.Mvc.Controller.PartialView
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.PartialView(System.Object)
        name: PartialView
        nameWithType: Controller.PartialView
        qualifiedName: System.Web.Mvc.Controller.PartialView
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.PartialView(System.Object)
  System.Web.Mvc.Controller.PartialView(System.String):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.PartialView(System.String)
        name: PartialView
        nameWithType: Controller.PartialView
        qualifiedName: System.Web.Mvc.Controller.PartialView
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.PartialView(System.String)
        name: PartialView
        nameWithType: Controller.PartialView
        qualifiedName: System.Web.Mvc.Controller.PartialView
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.PartialView(System.String)
  System.Web.Mvc.Controller.PartialView(System.String,System.Object):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.PartialView(System.String,System.Object)
        name: PartialView
        nameWithType: Controller.PartialView
        qualifiedName: System.Web.Mvc.Controller.PartialView
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.PartialView(System.String,System.Object)
        name: PartialView
        nameWithType: Controller.PartialView
        qualifiedName: System.Web.Mvc.Controller.PartialView
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.PartialView(System.String,System.Object)
  System.Web.Mvc.Controller.Redirect(System.String):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.Redirect(System.String)
        name: Redirect
        nameWithType: Controller.Redirect
        qualifiedName: System.Web.Mvc.Controller.Redirect
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.Redirect(System.String)
        name: Redirect
        nameWithType: Controller.Redirect
        qualifiedName: System.Web.Mvc.Controller.Redirect
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.Redirect(System.String)
  System.Web.Mvc.Controller.RedirectPermanent(System.String):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.RedirectPermanent(System.String)
        name: RedirectPermanent
        nameWithType: Controller.RedirectPermanent
        qualifiedName: System.Web.Mvc.Controller.RedirectPermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.RedirectPermanent(System.String)
        name: RedirectPermanent
        nameWithType: Controller.RedirectPermanent
        qualifiedName: System.Web.Mvc.Controller.RedirectPermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.RedirectPermanent(System.String)
  System.Web.Mvc.Controller.RedirectToAction(System.String):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.RedirectToAction(System.String)
        name: RedirectToAction
        nameWithType: Controller.RedirectToAction
        qualifiedName: System.Web.Mvc.Controller.RedirectToAction
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.RedirectToAction(System.String)
        name: RedirectToAction
        nameWithType: Controller.RedirectToAction
        qualifiedName: System.Web.Mvc.Controller.RedirectToAction
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.RedirectToAction(System.String)
  System.Web.Mvc.Controller.RedirectToAction(System.String,System.Object):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.RedirectToAction(System.String,System.Object)
        name: RedirectToAction
        nameWithType: Controller.RedirectToAction
        qualifiedName: System.Web.Mvc.Controller.RedirectToAction
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.RedirectToAction(System.String,System.Object)
        name: RedirectToAction
        nameWithType: Controller.RedirectToAction
        qualifiedName: System.Web.Mvc.Controller.RedirectToAction
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.RedirectToAction(System.String,System.Object)
  System.Web.Mvc.Controller.RedirectToAction(System.String,System.Web.Routing.RouteValueDictionary):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.RedirectToAction(System.String,System.Web.Routing.RouteValueDictionary)
        name: RedirectToAction
        nameWithType: Controller.RedirectToAction
        qualifiedName: System.Web.Mvc.Controller.RedirectToAction
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Routing.RouteValueDictionary
        name: RouteValueDictionary
        nameWithType: RouteValueDictionary
        qualifiedName: System.Web.Routing.RouteValueDictionary
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.RedirectToAction(System.String,System.Web.Routing.RouteValueDictionary)
        name: RedirectToAction
        nameWithType: Controller.RedirectToAction
        qualifiedName: System.Web.Mvc.Controller.RedirectToAction
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Routing.RouteValueDictionary
        name: RouteValueDictionary
        nameWithType: RouteValueDictionary
        qualifiedName: System.Web.Routing.RouteValueDictionary
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.RedirectToAction(System.String,System.Web.Routing.RouteValueDictionary)
  System.Web.Mvc.Controller.RedirectToAction(System.String,System.String):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.RedirectToAction(System.String,System.String)
        name: RedirectToAction
        nameWithType: Controller.RedirectToAction
        qualifiedName: System.Web.Mvc.Controller.RedirectToAction
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.RedirectToAction(System.String,System.String)
        name: RedirectToAction
        nameWithType: Controller.RedirectToAction
        qualifiedName: System.Web.Mvc.Controller.RedirectToAction
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.RedirectToAction(System.String,System.String)
  System.Web.Mvc.Controller.RedirectToAction(System.String,System.String,System.Object):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.RedirectToAction(System.String,System.String,System.Object)
        name: RedirectToAction
        nameWithType: Controller.RedirectToAction
        qualifiedName: System.Web.Mvc.Controller.RedirectToAction
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.RedirectToAction(System.String,System.String,System.Object)
        name: RedirectToAction
        nameWithType: Controller.RedirectToAction
        qualifiedName: System.Web.Mvc.Controller.RedirectToAction
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.RedirectToAction(System.String,System.String,System.Object)
  System.Web.Mvc.Controller.RedirectToAction(System.String,System.String,System.Web.Routing.RouteValueDictionary):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.RedirectToAction(System.String,System.String,System.Web.Routing.RouteValueDictionary)
        name: RedirectToAction
        nameWithType: Controller.RedirectToAction
        qualifiedName: System.Web.Mvc.Controller.RedirectToAction
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Routing.RouteValueDictionary
        name: RouteValueDictionary
        nameWithType: RouteValueDictionary
        qualifiedName: System.Web.Routing.RouteValueDictionary
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.RedirectToAction(System.String,System.String,System.Web.Routing.RouteValueDictionary)
        name: RedirectToAction
        nameWithType: Controller.RedirectToAction
        qualifiedName: System.Web.Mvc.Controller.RedirectToAction
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Routing.RouteValueDictionary
        name: RouteValueDictionary
        nameWithType: RouteValueDictionary
        qualifiedName: System.Web.Routing.RouteValueDictionary
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.RedirectToAction(System.String,System.String,System.Web.Routing.RouteValueDictionary)
  System.Web.Mvc.Controller.RedirectToActionPermanent(System.String):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.RedirectToActionPermanent(System.String)
        name: RedirectToActionPermanent
        nameWithType: Controller.RedirectToActionPermanent
        qualifiedName: System.Web.Mvc.Controller.RedirectToActionPermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.RedirectToActionPermanent(System.String)
        name: RedirectToActionPermanent
        nameWithType: Controller.RedirectToActionPermanent
        qualifiedName: System.Web.Mvc.Controller.RedirectToActionPermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.RedirectToActionPermanent(System.String)
  System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.Object):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.Object)
        name: RedirectToActionPermanent
        nameWithType: Controller.RedirectToActionPermanent
        qualifiedName: System.Web.Mvc.Controller.RedirectToActionPermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.Object)
        name: RedirectToActionPermanent
        nameWithType: Controller.RedirectToActionPermanent
        qualifiedName: System.Web.Mvc.Controller.RedirectToActionPermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.Object)
  System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.Web.Routing.RouteValueDictionary):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.Web.Routing.RouteValueDictionary)
        name: RedirectToActionPermanent
        nameWithType: Controller.RedirectToActionPermanent
        qualifiedName: System.Web.Mvc.Controller.RedirectToActionPermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Routing.RouteValueDictionary
        name: RouteValueDictionary
        nameWithType: RouteValueDictionary
        qualifiedName: System.Web.Routing.RouteValueDictionary
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.Web.Routing.RouteValueDictionary)
        name: RedirectToActionPermanent
        nameWithType: Controller.RedirectToActionPermanent
        qualifiedName: System.Web.Mvc.Controller.RedirectToActionPermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Routing.RouteValueDictionary
        name: RouteValueDictionary
        nameWithType: RouteValueDictionary
        qualifiedName: System.Web.Routing.RouteValueDictionary
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.Web.Routing.RouteValueDictionary)
  System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String)
        name: RedirectToActionPermanent
        nameWithType: Controller.RedirectToActionPermanent
        qualifiedName: System.Web.Mvc.Controller.RedirectToActionPermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String)
        name: RedirectToActionPermanent
        nameWithType: Controller.RedirectToActionPermanent
        qualifiedName: System.Web.Mvc.Controller.RedirectToActionPermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String)
  System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String,System.Object):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String,System.Object)
        name: RedirectToActionPermanent
        nameWithType: Controller.RedirectToActionPermanent
        qualifiedName: System.Web.Mvc.Controller.RedirectToActionPermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String,System.Object)
        name: RedirectToActionPermanent
        nameWithType: Controller.RedirectToActionPermanent
        qualifiedName: System.Web.Mvc.Controller.RedirectToActionPermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String,System.Object)
  System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String,System.Web.Routing.RouteValueDictionary):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String,System.Web.Routing.RouteValueDictionary)
        name: RedirectToActionPermanent
        nameWithType: Controller.RedirectToActionPermanent
        qualifiedName: System.Web.Mvc.Controller.RedirectToActionPermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Routing.RouteValueDictionary
        name: RouteValueDictionary
        nameWithType: RouteValueDictionary
        qualifiedName: System.Web.Routing.RouteValueDictionary
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String,System.Web.Routing.RouteValueDictionary)
        name: RedirectToActionPermanent
        nameWithType: Controller.RedirectToActionPermanent
        qualifiedName: System.Web.Mvc.Controller.RedirectToActionPermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Routing.RouteValueDictionary
        name: RouteValueDictionary
        nameWithType: RouteValueDictionary
        qualifiedName: System.Web.Routing.RouteValueDictionary
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String,System.Web.Routing.RouteValueDictionary)
  System.Web.Mvc.Controller.RedirectToRoute(System.Object):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.RedirectToRoute(System.Object)
        name: RedirectToRoute
        nameWithType: Controller.RedirectToRoute
        qualifiedName: System.Web.Mvc.Controller.RedirectToRoute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.RedirectToRoute(System.Object)
        name: RedirectToRoute
        nameWithType: Controller.RedirectToRoute
        qualifiedName: System.Web.Mvc.Controller.RedirectToRoute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.RedirectToRoute(System.Object)
  System.Web.Mvc.Controller.RedirectToRoute(System.Web.Routing.RouteValueDictionary):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.RedirectToRoute(System.Web.Routing.RouteValueDictionary)
        name: RedirectToRoute
        nameWithType: Controller.RedirectToRoute
        qualifiedName: System.Web.Mvc.Controller.RedirectToRoute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Routing.RouteValueDictionary
        name: RouteValueDictionary
        nameWithType: RouteValueDictionary
        qualifiedName: System.Web.Routing.RouteValueDictionary
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.RedirectToRoute(System.Web.Routing.RouteValueDictionary)
        name: RedirectToRoute
        nameWithType: Controller.RedirectToRoute
        qualifiedName: System.Web.Mvc.Controller.RedirectToRoute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Routing.RouteValueDictionary
        name: RouteValueDictionary
        nameWithType: RouteValueDictionary
        qualifiedName: System.Web.Routing.RouteValueDictionary
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.RedirectToRoute(System.Web.Routing.RouteValueDictionary)
  System.Web.Mvc.Controller.RedirectToRoute(System.String):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.RedirectToRoute(System.String)
        name: RedirectToRoute
        nameWithType: Controller.RedirectToRoute
        qualifiedName: System.Web.Mvc.Controller.RedirectToRoute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.RedirectToRoute(System.String)
        name: RedirectToRoute
        nameWithType: Controller.RedirectToRoute
        qualifiedName: System.Web.Mvc.Controller.RedirectToRoute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.RedirectToRoute(System.String)
  System.Web.Mvc.Controller.RedirectToRoute(System.String,System.Object):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.RedirectToRoute(System.String,System.Object)
        name: RedirectToRoute
        nameWithType: Controller.RedirectToRoute
        qualifiedName: System.Web.Mvc.Controller.RedirectToRoute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.RedirectToRoute(System.String,System.Object)
        name: RedirectToRoute
        nameWithType: Controller.RedirectToRoute
        qualifiedName: System.Web.Mvc.Controller.RedirectToRoute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.RedirectToRoute(System.String,System.Object)
  System.Web.Mvc.Controller.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)
        name: RedirectToRoute
        nameWithType: Controller.RedirectToRoute
        qualifiedName: System.Web.Mvc.Controller.RedirectToRoute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Routing.RouteValueDictionary
        name: RouteValueDictionary
        nameWithType: RouteValueDictionary
        qualifiedName: System.Web.Routing.RouteValueDictionary
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)
        name: RedirectToRoute
        nameWithType: Controller.RedirectToRoute
        qualifiedName: System.Web.Mvc.Controller.RedirectToRoute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Routing.RouteValueDictionary
        name: RouteValueDictionary
        nameWithType: RouteValueDictionary
        qualifiedName: System.Web.Routing.RouteValueDictionary
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)
  System.Web.Mvc.Controller.RedirectToRoutePermanent(System.Object):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.RedirectToRoutePermanent(System.Object)
        name: RedirectToRoutePermanent
        nameWithType: Controller.RedirectToRoutePermanent
        qualifiedName: System.Web.Mvc.Controller.RedirectToRoutePermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.RedirectToRoutePermanent(System.Object)
        name: RedirectToRoutePermanent
        nameWithType: Controller.RedirectToRoutePermanent
        qualifiedName: System.Web.Mvc.Controller.RedirectToRoutePermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.RedirectToRoutePermanent(System.Object)
  System.Web.Mvc.Controller.RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary)
        name: RedirectToRoutePermanent
        nameWithType: Controller.RedirectToRoutePermanent
        qualifiedName: System.Web.Mvc.Controller.RedirectToRoutePermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Routing.RouteValueDictionary
        name: RouteValueDictionary
        nameWithType: RouteValueDictionary
        qualifiedName: System.Web.Routing.RouteValueDictionary
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary)
        name: RedirectToRoutePermanent
        nameWithType: Controller.RedirectToRoutePermanent
        qualifiedName: System.Web.Mvc.Controller.RedirectToRoutePermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Routing.RouteValueDictionary
        name: RouteValueDictionary
        nameWithType: RouteValueDictionary
        qualifiedName: System.Web.Routing.RouteValueDictionary
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary)
  System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String)
        name: RedirectToRoutePermanent
        nameWithType: Controller.RedirectToRoutePermanent
        qualifiedName: System.Web.Mvc.Controller.RedirectToRoutePermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String)
        name: RedirectToRoutePermanent
        nameWithType: Controller.RedirectToRoutePermanent
        qualifiedName: System.Web.Mvc.Controller.RedirectToRoutePermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String)
  System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String,System.Object):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String,System.Object)
        name: RedirectToRoutePermanent
        nameWithType: Controller.RedirectToRoutePermanent
        qualifiedName: System.Web.Mvc.Controller.RedirectToRoutePermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String,System.Object)
        name: RedirectToRoutePermanent
        nameWithType: Controller.RedirectToRoutePermanent
        qualifiedName: System.Web.Mvc.Controller.RedirectToRoutePermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String,System.Object)
  System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)
        name: RedirectToRoutePermanent
        nameWithType: Controller.RedirectToRoutePermanent
        qualifiedName: System.Web.Mvc.Controller.RedirectToRoutePermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Routing.RouteValueDictionary
        name: RouteValueDictionary
        nameWithType: RouteValueDictionary
        qualifiedName: System.Web.Routing.RouteValueDictionary
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)
        name: RedirectToRoutePermanent
        nameWithType: Controller.RedirectToRoutePermanent
        qualifiedName: System.Web.Mvc.Controller.RedirectToRoutePermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Routing.RouteValueDictionary
        name: RouteValueDictionary
        nameWithType: RouteValueDictionary
        qualifiedName: System.Web.Routing.RouteValueDictionary
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)
  System.Web.Mvc.Controller.TryUpdateModel``1(``0):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0)
        name: TryUpdateModel<TModel>
        nameWithType: Controller.TryUpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0)
        name: TryUpdateModel(Of TModel)
        nameWithType: Controller.TryUpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Web.Mvc.Controller.TryUpdateModel``1(``0)
  System.Web.Mvc.Controller.TryUpdateModel``1({TModel}):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0)
        name: TryUpdateModel<TModel>
        nameWithType: Controller.TryUpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0)
        name: TryUpdateModel(Of TModel)
        nameWithType: Controller.TryUpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Web.Mvc.Controller.TryUpdateModel``1(``0)
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.TryUpdateModel``1(``0)
  System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String)
        name: TryUpdateModel<TModel>
        nameWithType: Controller.TryUpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String)
        name: TryUpdateModel(Of TModel)
        nameWithType: Controller.TryUpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String)
  System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.String):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String)
        name: TryUpdateModel<TModel>
        nameWithType: Controller.TryUpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String)
        name: TryUpdateModel(Of TModel)
        nameWithType: Controller.TryUpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String)
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String)
  System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String[]):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String[])
        name: TryUpdateModel<TModel>
        nameWithType: Controller.TryUpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String[])
        name: TryUpdateModel(Of TModel)
        nameWithType: Controller.TryUpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String[])
  System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.String[]):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String[])
        name: TryUpdateModel<TModel>
        nameWithType: Controller.TryUpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String[])
        name: TryUpdateModel(Of TModel)
        nameWithType: Controller.TryUpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String[])
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String[])
  System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[]):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[])
        name: TryUpdateModel<TModel>
        nameWithType: Controller.TryUpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[])
        name: TryUpdateModel(Of TModel)
        nameWithType: Controller.TryUpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[])
  System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.String,System.String[]):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[])
        name: TryUpdateModel<TModel>
        nameWithType: Controller.TryUpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[])
        name: TryUpdateModel(Of TModel)
        nameWithType: Controller.TryUpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[])
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[])
  System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.String[]):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.String[])
        name: TryUpdateModel<TModel>
        nameWithType: Controller.TryUpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.String[])
        name: TryUpdateModel(Of TModel)
        nameWithType: Controller.TryUpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.String[])
  System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.String,System.String[],System.String[]):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.String[])
        name: TryUpdateModel<TModel>
        nameWithType: Controller.TryUpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.String[])
        name: TryUpdateModel(Of TModel)
        nameWithType: Controller.TryUpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.String[])
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.String[])
  System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.Web.Mvc.IValueProvider):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.Web.Mvc.IValueProvider)
        name: TryUpdateModel<TModel>
        nameWithType: Controller.TryUpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.Web.Mvc.IValueProvider)
        name: TryUpdateModel(Of TModel)
        nameWithType: Controller.TryUpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.Web.Mvc.IValueProvider)
  System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.Web.Mvc.IValueProvider):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.Web.Mvc.IValueProvider)
        name: TryUpdateModel<TModel>
        nameWithType: Controller.TryUpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.Web.Mvc.IValueProvider)
        name: TryUpdateModel(Of TModel)
        nameWithType: Controller.TryUpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.Web.Mvc.IValueProvider)
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.Web.Mvc.IValueProvider)
  System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.Web.Mvc.IValueProvider):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.Web.Mvc.IValueProvider)
        name: TryUpdateModel<TModel>
        nameWithType: Controller.TryUpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.Web.Mvc.IValueProvider)
        name: TryUpdateModel(Of TModel)
        nameWithType: Controller.TryUpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.Web.Mvc.IValueProvider)
  System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.String,System.Web.Mvc.IValueProvider):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.Web.Mvc.IValueProvider)
        name: TryUpdateModel<TModel>
        nameWithType: Controller.TryUpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.Web.Mvc.IValueProvider)
        name: TryUpdateModel(Of TModel)
        nameWithType: Controller.TryUpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.Web.Mvc.IValueProvider)
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.Web.Mvc.IValueProvider)
  System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String[],System.Web.Mvc.IValueProvider):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String[],System.Web.Mvc.IValueProvider)
        name: TryUpdateModel<TModel>
        nameWithType: Controller.TryUpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String[],System.Web.Mvc.IValueProvider)
        name: TryUpdateModel(Of TModel)
        nameWithType: Controller.TryUpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String[],System.Web.Mvc.IValueProvider)
  System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.String[],System.Web.Mvc.IValueProvider):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String[],System.Web.Mvc.IValueProvider)
        name: TryUpdateModel<TModel>
        nameWithType: Controller.TryUpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String[],System.Web.Mvc.IValueProvider)
        name: TryUpdateModel(Of TModel)
        nameWithType: Controller.TryUpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String[],System.Web.Mvc.IValueProvider)
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String[],System.Web.Mvc.IValueProvider)
  System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.Web.Mvc.IValueProvider):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.Web.Mvc.IValueProvider)
        name: TryUpdateModel<TModel>
        nameWithType: Controller.TryUpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.Web.Mvc.IValueProvider)
        name: TryUpdateModel(Of TModel)
        nameWithType: Controller.TryUpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.Web.Mvc.IValueProvider)
  System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.String,System.String[],System.Web.Mvc.IValueProvider):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.Web.Mvc.IValueProvider)
        name: TryUpdateModel<TModel>
        nameWithType: Controller.TryUpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.Web.Mvc.IValueProvider)
        name: TryUpdateModel(Of TModel)
        nameWithType: Controller.TryUpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.Web.Mvc.IValueProvider)
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.Web.Mvc.IValueProvider)
  System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.String[],System.Web.Mvc.IValueProvider):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.String[],System.Web.Mvc.IValueProvider)
        name: TryUpdateModel<TModel>
        nameWithType: Controller.TryUpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.String[],System.Web.Mvc.IValueProvider)
        name: TryUpdateModel(Of TModel)
        nameWithType: Controller.TryUpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.String[],System.Web.Mvc.IValueProvider)
  ? System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.String,System.String[],System.String[],System.Web.Mvc.IValueProvider)
  : name:
      CSharp:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.String[],System.Web.Mvc.IValueProvider)
        name: TryUpdateModel<TModel>
        nameWithType: Controller.TryUpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.String[],System.Web.Mvc.IValueProvider)
        name: TryUpdateModel(Of TModel)
        nameWithType: Controller.TryUpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.String[],System.Web.Mvc.IValueProvider)
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.String[],System.Web.Mvc.IValueProvider)
  System.Web.Mvc.Controller.TryValidateModel(System.Object):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.TryValidateModel(System.Object)
        name: TryValidateModel
        nameWithType: Controller.TryValidateModel
        qualifiedName: System.Web.Mvc.Controller.TryValidateModel
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.TryValidateModel(System.Object)
        name: TryValidateModel
        nameWithType: Controller.TryValidateModel
        qualifiedName: System.Web.Mvc.Controller.TryValidateModel
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.TryValidateModel(System.Object)
  System.Web.Mvc.Controller.TryValidateModel(System.Object,System.String):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.TryValidateModel(System.Object,System.String)
        name: TryValidateModel
        nameWithType: Controller.TryValidateModel
        qualifiedName: System.Web.Mvc.Controller.TryValidateModel
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.TryValidateModel(System.Object,System.String)
        name: TryValidateModel
        nameWithType: Controller.TryValidateModel
        qualifiedName: System.Web.Mvc.Controller.TryValidateModel
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.TryValidateModel(System.Object,System.String)
  System.Web.Mvc.Controller.UpdateModel``1(``0):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0)
        name: UpdateModel<TModel>
        nameWithType: Controller.UpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.UpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0)
        name: UpdateModel(Of TModel)
        nameWithType: Controller.UpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.UpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Web.Mvc.Controller.UpdateModel``1(``0)
  System.Web.Mvc.Controller.UpdateModel``1({TModel}):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0)
        name: UpdateModel<TModel>
        nameWithType: Controller.UpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.UpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0)
        name: UpdateModel(Of TModel)
        nameWithType: Controller.UpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.UpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Web.Mvc.Controller.UpdateModel``1(``0)
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.UpdateModel``1(``0)
  System.Web.Mvc.Controller.UpdateModel``1(``0,System.String):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String)
        name: UpdateModel<TModel>
        nameWithType: Controller.UpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.UpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String)
        name: UpdateModel(Of TModel)
        nameWithType: Controller.UpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.UpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String)
  System.Web.Mvc.Controller.UpdateModel``1({TModel},System.String):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String)
        name: UpdateModel<TModel>
        nameWithType: Controller.UpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.UpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String)
        name: UpdateModel(Of TModel)
        nameWithType: Controller.UpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.UpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String)
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String)
  System.Web.Mvc.Controller.UpdateModel``1(``0,System.String[]):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String[])
        name: UpdateModel<TModel>
        nameWithType: Controller.UpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.UpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String[])
        name: UpdateModel(Of TModel)
        nameWithType: Controller.UpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.UpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String[])
  System.Web.Mvc.Controller.UpdateModel``1({TModel},System.String[]):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String[])
        name: UpdateModel<TModel>
        nameWithType: Controller.UpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.UpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String[])
        name: UpdateModel(Of TModel)
        nameWithType: Controller.UpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.UpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String[])
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String[])
  System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[]):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[])
        name: UpdateModel<TModel>
        nameWithType: Controller.UpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.UpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[])
        name: UpdateModel(Of TModel)
        nameWithType: Controller.UpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.UpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[])
  System.Web.Mvc.Controller.UpdateModel``1({TModel},System.String,System.String[]):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[])
        name: UpdateModel<TModel>
        nameWithType: Controller.UpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.UpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[])
        name: UpdateModel(Of TModel)
        nameWithType: Controller.UpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.UpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[])
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[])
  System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.String[]):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.String[])
        name: UpdateModel<TModel>
        nameWithType: Controller.UpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.UpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.String[])
        name: UpdateModel(Of TModel)
        nameWithType: Controller.UpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.UpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.String[])
  System.Web.Mvc.Controller.UpdateModel``1({TModel},System.String,System.String[],System.String[]):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.String[])
        name: UpdateModel<TModel>
        nameWithType: Controller.UpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.UpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.String[])
        name: UpdateModel(Of TModel)
        nameWithType: Controller.UpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.UpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.String[])
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.String[])
  System.Web.Mvc.Controller.UpdateModel``1(``0,System.Web.Mvc.IValueProvider):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0,System.Web.Mvc.IValueProvider)
        name: UpdateModel<TModel>
        nameWithType: Controller.UpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.UpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0,System.Web.Mvc.IValueProvider)
        name: UpdateModel(Of TModel)
        nameWithType: Controller.UpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.UpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.Web.Mvc.IValueProvider)
  System.Web.Mvc.Controller.UpdateModel``1({TModel},System.Web.Mvc.IValueProvider):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0,System.Web.Mvc.IValueProvider)
        name: UpdateModel<TModel>
        nameWithType: Controller.UpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.UpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0,System.Web.Mvc.IValueProvider)
        name: UpdateModel(Of TModel)
        nameWithType: Controller.UpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.UpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Web.Mvc.Controller.UpdateModel``1(``0,System.Web.Mvc.IValueProvider)
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.Web.Mvc.IValueProvider)
  System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.Web.Mvc.IValueProvider):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.Web.Mvc.IValueProvider)
        name: UpdateModel<TModel>
        nameWithType: Controller.UpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.UpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.Web.Mvc.IValueProvider)
        name: UpdateModel(Of TModel)
        nameWithType: Controller.UpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.UpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.Web.Mvc.IValueProvider)
  System.Web.Mvc.Controller.UpdateModel``1({TModel},System.String,System.Web.Mvc.IValueProvider):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.Web.Mvc.IValueProvider)
        name: UpdateModel<TModel>
        nameWithType: Controller.UpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.UpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.Web.Mvc.IValueProvider)
        name: UpdateModel(Of TModel)
        nameWithType: Controller.UpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.UpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.Web.Mvc.IValueProvider)
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.Web.Mvc.IValueProvider)
  System.Web.Mvc.Controller.UpdateModel``1(``0,System.String[],System.Web.Mvc.IValueProvider):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String[],System.Web.Mvc.IValueProvider)
        name: UpdateModel<TModel>
        nameWithType: Controller.UpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.UpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String[],System.Web.Mvc.IValueProvider)
        name: UpdateModel(Of TModel)
        nameWithType: Controller.UpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.UpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String[],System.Web.Mvc.IValueProvider)
  System.Web.Mvc.Controller.UpdateModel``1({TModel},System.String[],System.Web.Mvc.IValueProvider):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String[],System.Web.Mvc.IValueProvider)
        name: UpdateModel<TModel>
        nameWithType: Controller.UpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.UpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String[],System.Web.Mvc.IValueProvider)
        name: UpdateModel(Of TModel)
        nameWithType: Controller.UpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.UpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String[],System.Web.Mvc.IValueProvider)
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String[],System.Web.Mvc.IValueProvider)
  System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.Web.Mvc.IValueProvider):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.Web.Mvc.IValueProvider)
        name: UpdateModel<TModel>
        nameWithType: Controller.UpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.UpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.Web.Mvc.IValueProvider)
        name: UpdateModel(Of TModel)
        nameWithType: Controller.UpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.UpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.Web.Mvc.IValueProvider)
  System.Web.Mvc.Controller.UpdateModel``1({TModel},System.String,System.String[],System.Web.Mvc.IValueProvider):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.Web.Mvc.IValueProvider)
        name: UpdateModel<TModel>
        nameWithType: Controller.UpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.UpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.Web.Mvc.IValueProvider)
        name: UpdateModel(Of TModel)
        nameWithType: Controller.UpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.UpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.Web.Mvc.IValueProvider)
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.Web.Mvc.IValueProvider)
  System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.String[],System.Web.Mvc.IValueProvider):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.String[],System.Web.Mvc.IValueProvider)
        name: UpdateModel<TModel>
        nameWithType: Controller.UpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.UpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.String[],System.Web.Mvc.IValueProvider)
        name: UpdateModel(Of TModel)
        nameWithType: Controller.UpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.UpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.String[],System.Web.Mvc.IValueProvider)
  System.Web.Mvc.Controller.UpdateModel``1({TModel},System.String,System.String[],System.String[],System.Web.Mvc.IValueProvider):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.String[],System.Web.Mvc.IValueProvider)
        name: UpdateModel<TModel>
        nameWithType: Controller.UpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.UpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.String[],System.Web.Mvc.IValueProvider)
        name: UpdateModel(Of TModel)
        nameWithType: Controller.UpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.UpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.String[],System.Web.Mvc.IValueProvider)
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.String[],System.Web.Mvc.IValueProvider)
  System.Web.Mvc.Controller.ValidateModel(System.Object):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.ValidateModel(System.Object)
        name: ValidateModel
        nameWithType: Controller.ValidateModel
        qualifiedName: System.Web.Mvc.Controller.ValidateModel
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.ValidateModel(System.Object)
        name: ValidateModel
        nameWithType: Controller.ValidateModel
        qualifiedName: System.Web.Mvc.Controller.ValidateModel
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.ValidateModel(System.Object)
  System.Web.Mvc.Controller.ValidateModel(System.Object,System.String):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.ValidateModel(System.Object,System.String)
        name: ValidateModel
        nameWithType: Controller.ValidateModel
        qualifiedName: System.Web.Mvc.Controller.ValidateModel
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.ValidateModel(System.Object,System.String)
        name: ValidateModel
        nameWithType: Controller.ValidateModel
        qualifiedName: System.Web.Mvc.Controller.ValidateModel
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.ValidateModel(System.Object,System.String)
  System.Web.Mvc.Controller.View:
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.View
        name: View
        nameWithType: Controller.View
        qualifiedName: System.Web.Mvc.Controller.View
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.View
        name: View
        nameWithType: Controller.View
        qualifiedName: System.Web.Mvc.Controller.View
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.View
  System.Web.Mvc.Controller.View(System.Object):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.View(System.Object)
        name: View
        nameWithType: Controller.View
        qualifiedName: System.Web.Mvc.Controller.View
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.View(System.Object)
        name: View
        nameWithType: Controller.View
        qualifiedName: System.Web.Mvc.Controller.View
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.View(System.Object)
  System.Web.Mvc.Controller.View(System.String):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.View(System.String)
        name: View
        nameWithType: Controller.View
        qualifiedName: System.Web.Mvc.Controller.View
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.View(System.String)
        name: View
        nameWithType: Controller.View
        qualifiedName: System.Web.Mvc.Controller.View
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.View(System.String)
  System.Web.Mvc.Controller.View(System.String,System.String):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.View(System.String,System.String)
        name: View
        nameWithType: Controller.View
        qualifiedName: System.Web.Mvc.Controller.View
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.View(System.String,System.String)
        name: View
        nameWithType: Controller.View
        qualifiedName: System.Web.Mvc.Controller.View
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.View(System.String,System.String)
  System.Web.Mvc.Controller.View(System.String,System.Object):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.View(System.String,System.Object)
        name: View
        nameWithType: Controller.View
        qualifiedName: System.Web.Mvc.Controller.View
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.View(System.String,System.Object)
        name: View
        nameWithType: Controller.View
        qualifiedName: System.Web.Mvc.Controller.View
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.View(System.String,System.Object)
  System.Web.Mvc.Controller.View(System.String,System.String,System.Object):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.View(System.String,System.String,System.Object)
        name: View
        nameWithType: Controller.View
        qualifiedName: System.Web.Mvc.Controller.View
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.View(System.String,System.String,System.Object)
        name: View
        nameWithType: Controller.View
        qualifiedName: System.Web.Mvc.Controller.View
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.View(System.String,System.String,System.Object)
  System.Web.Mvc.Controller.View(System.Web.Mvc.IView):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.View(System.Web.Mvc.IView)
        name: View
        nameWithType: Controller.View
        qualifiedName: System.Web.Mvc.Controller.View
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Mvc.IView
        name: IView
        nameWithType: IView
        qualifiedName: System.Web.Mvc.IView
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.View(System.Web.Mvc.IView)
        name: View
        nameWithType: Controller.View
        qualifiedName: System.Web.Mvc.Controller.View
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Mvc.IView
        name: IView
        nameWithType: IView
        qualifiedName: System.Web.Mvc.IView
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.View(System.Web.Mvc.IView)
  System.Web.Mvc.Controller.View(System.Web.Mvc.IView,System.Object):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.View(System.Web.Mvc.IView,System.Object)
        name: View
        nameWithType: Controller.View
        qualifiedName: System.Web.Mvc.Controller.View
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Mvc.IView
        name: IView
        nameWithType: IView
        qualifiedName: System.Web.Mvc.IView
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.View(System.Web.Mvc.IView,System.Object)
        name: View
        nameWithType: Controller.View
        qualifiedName: System.Web.Mvc.Controller.View
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Mvc.IView
        name: IView
        nameWithType: IView
        qualifiedName: System.Web.Mvc.IView
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.View(System.Web.Mvc.IView,System.Object)
  ? System.Web.Mvc.Controller.System#Web#Mvc#Async#IAsyncController#BeginExecute(System.Web.Routing.RequestContext,System.AsyncCallback,System.Object)
  : name:
      CSharp:
      - id: System.Web.Mvc.Controller.System#Web#Mvc#Async#IAsyncController#BeginExecute(System.Web.Routing.RequestContext,System.AsyncCallback,System.Object)
        name: IAsyncController.BeginExecute
        nameWithType: Controller.IAsyncController.BeginExecute
        qualifiedName: System.Web.Mvc.Controller.System.Web.Mvc.Async.IAsyncController.BeginExecute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Routing.RequestContext
        name: RequestContext
        nameWithType: RequestContext
        qualifiedName: System.Web.Routing.RequestContext
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.AsyncCallback
        name: AsyncCallback
        nameWithType: AsyncCallback
        qualifiedName: System.AsyncCallback
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.System#Web#Mvc#Async#IAsyncController#BeginExecute(System.Web.Routing.RequestContext,System.AsyncCallback,System.Object)
        name: System.Web.Mvc.Async.IAsyncController.BeginExecute
        nameWithType: Controller.System.Web.Mvc.Async.IAsyncController.BeginExecute
        qualifiedName: System.Web.Mvc.Controller.System.Web.Mvc.Async.IAsyncController.BeginExecute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Routing.RequestContext
        name: RequestContext
        nameWithType: RequestContext
        qualifiedName: System.Web.Routing.RequestContext
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.AsyncCallback
        name: AsyncCallback
        nameWithType: AsyncCallback
        qualifiedName: System.AsyncCallback
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.System#Web#Mvc#Async#IAsyncController#BeginExecute(System.Web.Routing.RequestContext,System.AsyncCallback,System.Object)
  System.Web.Mvc.Controller.System#Web#Mvc#Async#IAsyncController#EndExecute(System.IAsyncResult):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.System#Web#Mvc#Async#IAsyncController#EndExecute(System.IAsyncResult)
        name: IAsyncController.EndExecute
        nameWithType: Controller.IAsyncController.EndExecute
        qualifiedName: System.Web.Mvc.Controller.System.Web.Mvc.Async.IAsyncController.EndExecute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.IAsyncResult
        name: IAsyncResult
        nameWithType: IAsyncResult
        qualifiedName: System.IAsyncResult
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.System#Web#Mvc#Async#IAsyncController#EndExecute(System.IAsyncResult)
        name: System.Web.Mvc.Async.IAsyncController.EndExecute
        nameWithType: Controller.System.Web.Mvc.Async.IAsyncController.EndExecute
        qualifiedName: System.Web.Mvc.Controller.System.Web.Mvc.Async.IAsyncController.EndExecute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.IAsyncResult
        name: IAsyncResult
        nameWithType: IAsyncResult
        qualifiedName: System.IAsyncResult
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.System#Web#Mvc#Async#IAsyncController#EndExecute(System.IAsyncResult)
  System.Web.Mvc.Controller.BeginExecute(System.Web.Routing.RequestContext,System.AsyncCallback,System.Object):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.BeginExecute(System.Web.Routing.RequestContext,System.AsyncCallback,System.Object)
        name: BeginExecute
        nameWithType: Controller.BeginExecute
        qualifiedName: System.Web.Mvc.Controller.BeginExecute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Routing.RequestContext
        name: RequestContext
        nameWithType: RequestContext
        qualifiedName: System.Web.Routing.RequestContext
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.AsyncCallback
        name: AsyncCallback
        nameWithType: AsyncCallback
        qualifiedName: System.AsyncCallback
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.BeginExecute(System.Web.Routing.RequestContext,System.AsyncCallback,System.Object)
        name: BeginExecute
        nameWithType: Controller.BeginExecute
        qualifiedName: System.Web.Mvc.Controller.BeginExecute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Routing.RequestContext
        name: RequestContext
        nameWithType: RequestContext
        qualifiedName: System.Web.Routing.RequestContext
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.AsyncCallback
        name: AsyncCallback
        nameWithType: AsyncCallback
        qualifiedName: System.AsyncCallback
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.BeginExecute(System.Web.Routing.RequestContext,System.AsyncCallback,System.Object)
  System.Web.Mvc.Controller.BeginExecuteCore(System.AsyncCallback,System.Object):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.BeginExecuteCore(System.AsyncCallback,System.Object)
        name: BeginExecuteCore
        nameWithType: Controller.BeginExecuteCore
        qualifiedName: System.Web.Mvc.Controller.BeginExecuteCore
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.AsyncCallback
        name: AsyncCallback
        nameWithType: AsyncCallback
        qualifiedName: System.AsyncCallback
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.BeginExecuteCore(System.AsyncCallback,System.Object)
        name: BeginExecuteCore
        nameWithType: Controller.BeginExecuteCore
        qualifiedName: System.Web.Mvc.Controller.BeginExecuteCore
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.AsyncCallback
        name: AsyncCallback
        nameWithType: AsyncCallback
        qualifiedName: System.AsyncCallback
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.BeginExecuteCore(System.AsyncCallback,System.Object)
  System.Web.Mvc.Controller.EndExecute(System.IAsyncResult):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.EndExecute(System.IAsyncResult)
        name: EndExecute
        nameWithType: Controller.EndExecute
        qualifiedName: System.Web.Mvc.Controller.EndExecute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.IAsyncResult
        name: IAsyncResult
        nameWithType: IAsyncResult
        qualifiedName: System.IAsyncResult
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.EndExecute(System.IAsyncResult)
        name: EndExecute
        nameWithType: Controller.EndExecute
        qualifiedName: System.Web.Mvc.Controller.EndExecute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.IAsyncResult
        name: IAsyncResult
        nameWithType: IAsyncResult
        qualifiedName: System.IAsyncResult
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.EndExecute(System.IAsyncResult)
  System.Web.Mvc.Controller.EndExecuteCore(System.IAsyncResult):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.EndExecuteCore(System.IAsyncResult)
        name: EndExecuteCore
        nameWithType: Controller.EndExecuteCore
        qualifiedName: System.Web.Mvc.Controller.EndExecuteCore
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.IAsyncResult
        name: IAsyncResult
        nameWithType: IAsyncResult
        qualifiedName: System.IAsyncResult
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.EndExecuteCore(System.IAsyncResult)
        name: EndExecuteCore
        nameWithType: Controller.EndExecuteCore
        qualifiedName: System.Web.Mvc.Controller.EndExecuteCore
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.IAsyncResult
        name: IAsyncResult
        nameWithType: IAsyncResult
        qualifiedName: System.IAsyncResult
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.EndExecuteCore(System.IAsyncResult)
  System.Web.Mvc.Controller.System#Web#Mvc#IActionFilter#OnActionExecuting(System.Web.Mvc.ActionExecutingContext):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.System#Web#Mvc#IActionFilter#OnActionExecuting(System.Web.Mvc.ActionExecutingContext)
        name: IActionFilter.OnActionExecuting
        nameWithType: Controller.IActionFilter.OnActionExecuting
        qualifiedName: System.Web.Mvc.Controller.System.Web.Mvc.IActionFilter.OnActionExecuting
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Mvc.ActionExecutingContext
        name: ActionExecutingContext
        nameWithType: ActionExecutingContext
        qualifiedName: System.Web.Mvc.ActionExecutingContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.System#Web#Mvc#IActionFilter#OnActionExecuting(System.Web.Mvc.ActionExecutingContext)
        name: System.Web.Mvc.IActionFilter.OnActionExecuting
        nameWithType: Controller.System.Web.Mvc.IActionFilter.OnActionExecuting
        qualifiedName: System.Web.Mvc.Controller.System.Web.Mvc.IActionFilter.OnActionExecuting
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Mvc.ActionExecutingContext
        name: ActionExecutingContext
        nameWithType: ActionExecutingContext
        qualifiedName: System.Web.Mvc.ActionExecutingContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.System#Web#Mvc#IActionFilter#OnActionExecuting(System.Web.Mvc.ActionExecutingContext)
  System.Web.Mvc.Controller.System#Web#Mvc#IActionFilter#OnActionExecuted(System.Web.Mvc.ActionExecutedContext):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.System#Web#Mvc#IActionFilter#OnActionExecuted(System.Web.Mvc.ActionExecutedContext)
        name: IActionFilter.OnActionExecuted
        nameWithType: Controller.IActionFilter.OnActionExecuted
        qualifiedName: System.Web.Mvc.Controller.System.Web.Mvc.IActionFilter.OnActionExecuted
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Mvc.ActionExecutedContext
        name: ActionExecutedContext
        nameWithType: ActionExecutedContext
        qualifiedName: System.Web.Mvc.ActionExecutedContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.System#Web#Mvc#IActionFilter#OnActionExecuted(System.Web.Mvc.ActionExecutedContext)
        name: System.Web.Mvc.IActionFilter.OnActionExecuted
        nameWithType: Controller.System.Web.Mvc.IActionFilter.OnActionExecuted
        qualifiedName: System.Web.Mvc.Controller.System.Web.Mvc.IActionFilter.OnActionExecuted
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Mvc.ActionExecutedContext
        name: ActionExecutedContext
        nameWithType: ActionExecutedContext
        qualifiedName: System.Web.Mvc.ActionExecutedContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.System#Web#Mvc#IActionFilter#OnActionExecuted(System.Web.Mvc.ActionExecutedContext)
  ? System.Web.Mvc.Controller.System#Web#Mvc#Filters#IAuthenticationFilter#OnAuthentication(System.Web.Mvc.Filters.AuthenticationContext)
  : name:
      CSharp:
      - id: System.Web.Mvc.Controller.System#Web#Mvc#Filters#IAuthenticationFilter#OnAuthentication(System.Web.Mvc.Filters.AuthenticationContext)
        name: IAuthenticationFilter.OnAuthentication
        nameWithType: Controller.IAuthenticationFilter.OnAuthentication
        qualifiedName: System.Web.Mvc.Controller.System.Web.Mvc.Filters.IAuthenticationFilter.OnAuthentication
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Mvc.Filters.AuthenticationContext
        name: AuthenticationContext
        nameWithType: AuthenticationContext
        qualifiedName: System.Web.Mvc.Filters.AuthenticationContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.System#Web#Mvc#Filters#IAuthenticationFilter#OnAuthentication(System.Web.Mvc.Filters.AuthenticationContext)
        name: System.Web.Mvc.Filters.IAuthenticationFilter.OnAuthentication
        nameWithType: Controller.System.Web.Mvc.Filters.IAuthenticationFilter.OnAuthentication
        qualifiedName: System.Web.Mvc.Controller.System.Web.Mvc.Filters.IAuthenticationFilter.OnAuthentication
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Mvc.Filters.AuthenticationContext
        name: AuthenticationContext
        nameWithType: AuthenticationContext
        qualifiedName: System.Web.Mvc.Filters.AuthenticationContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.System#Web#Mvc#Filters#IAuthenticationFilter#OnAuthentication(System.Web.Mvc.Filters.AuthenticationContext)
  ? System.Web.Mvc.Controller.System#Web#Mvc#Filters#IAuthenticationFilter#OnAuthenticationChallenge(System.Web.Mvc.Filters.AuthenticationChallengeContext)
  : name:
      CSharp:
      - id: System.Web.Mvc.Controller.System#Web#Mvc#Filters#IAuthenticationFilter#OnAuthenticationChallenge(System.Web.Mvc.Filters.AuthenticationChallengeContext)
        name: IAuthenticationFilter.OnAuthenticationChallenge
        nameWithType: Controller.IAuthenticationFilter.OnAuthenticationChallenge
        qualifiedName: System.Web.Mvc.Controller.System.Web.Mvc.Filters.IAuthenticationFilter.OnAuthenticationChallenge
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Mvc.Filters.AuthenticationChallengeContext
        name: AuthenticationChallengeContext
        nameWithType: AuthenticationChallengeContext
        qualifiedName: System.Web.Mvc.Filters.AuthenticationChallengeContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.System#Web#Mvc#Filters#IAuthenticationFilter#OnAuthenticationChallenge(System.Web.Mvc.Filters.AuthenticationChallengeContext)
        name: System.Web.Mvc.Filters.IAuthenticationFilter.OnAuthenticationChallenge
        nameWithType: Controller.System.Web.Mvc.Filters.IAuthenticationFilter.OnAuthenticationChallenge
        qualifiedName: System.Web.Mvc.Controller.System.Web.Mvc.Filters.IAuthenticationFilter.OnAuthenticationChallenge
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Mvc.Filters.AuthenticationChallengeContext
        name: AuthenticationChallengeContext
        nameWithType: AuthenticationChallengeContext
        qualifiedName: System.Web.Mvc.Filters.AuthenticationChallengeContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.System#Web#Mvc#Filters#IAuthenticationFilter#OnAuthenticationChallenge(System.Web.Mvc.Filters.AuthenticationChallengeContext)
  System.Web.Mvc.Controller.System#Web#Mvc#IAuthorizationFilter#OnAuthorization(System.Web.Mvc.AuthorizationContext):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.System#Web#Mvc#IAuthorizationFilter#OnAuthorization(System.Web.Mvc.AuthorizationContext)
        name: IAuthorizationFilter.OnAuthorization
        nameWithType: Controller.IAuthorizationFilter.OnAuthorization
        qualifiedName: System.Web.Mvc.Controller.System.Web.Mvc.IAuthorizationFilter.OnAuthorization
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Mvc.AuthorizationContext
        name: AuthorizationContext
        nameWithType: AuthorizationContext
        qualifiedName: System.Web.Mvc.AuthorizationContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.System#Web#Mvc#IAuthorizationFilter#OnAuthorization(System.Web.Mvc.AuthorizationContext)
        name: System.Web.Mvc.IAuthorizationFilter.OnAuthorization
        nameWithType: Controller.System.Web.Mvc.IAuthorizationFilter.OnAuthorization
        qualifiedName: System.Web.Mvc.Controller.System.Web.Mvc.IAuthorizationFilter.OnAuthorization
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Mvc.AuthorizationContext
        name: AuthorizationContext
        nameWithType: AuthorizationContext
        qualifiedName: System.Web.Mvc.AuthorizationContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.System#Web#Mvc#IAuthorizationFilter#OnAuthorization(System.Web.Mvc.AuthorizationContext)
  System.Web.Mvc.Controller.System#Web#Mvc#IExceptionFilter#OnException(System.Web.Mvc.ExceptionContext):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.System#Web#Mvc#IExceptionFilter#OnException(System.Web.Mvc.ExceptionContext)
        name: IExceptionFilter.OnException
        nameWithType: Controller.IExceptionFilter.OnException
        qualifiedName: System.Web.Mvc.Controller.System.Web.Mvc.IExceptionFilter.OnException
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Mvc.ExceptionContext
        name: ExceptionContext
        nameWithType: ExceptionContext
        qualifiedName: System.Web.Mvc.ExceptionContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.System#Web#Mvc#IExceptionFilter#OnException(System.Web.Mvc.ExceptionContext)
        name: System.Web.Mvc.IExceptionFilter.OnException
        nameWithType: Controller.System.Web.Mvc.IExceptionFilter.OnException
        qualifiedName: System.Web.Mvc.Controller.System.Web.Mvc.IExceptionFilter.OnException
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Mvc.ExceptionContext
        name: ExceptionContext
        nameWithType: ExceptionContext
        qualifiedName: System.Web.Mvc.ExceptionContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.System#Web#Mvc#IExceptionFilter#OnException(System.Web.Mvc.ExceptionContext)
  System.Web.Mvc.Controller.System#Web#Mvc#IResultFilter#OnResultExecuting(System.Web.Mvc.ResultExecutingContext):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.System#Web#Mvc#IResultFilter#OnResultExecuting(System.Web.Mvc.ResultExecutingContext)
        name: IResultFilter.OnResultExecuting
        nameWithType: Controller.IResultFilter.OnResultExecuting
        qualifiedName: System.Web.Mvc.Controller.System.Web.Mvc.IResultFilter.OnResultExecuting
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Mvc.ResultExecutingContext
        name: ResultExecutingContext
        nameWithType: ResultExecutingContext
        qualifiedName: System.Web.Mvc.ResultExecutingContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.System#Web#Mvc#IResultFilter#OnResultExecuting(System.Web.Mvc.ResultExecutingContext)
        name: System.Web.Mvc.IResultFilter.OnResultExecuting
        nameWithType: Controller.System.Web.Mvc.IResultFilter.OnResultExecuting
        qualifiedName: System.Web.Mvc.Controller.System.Web.Mvc.IResultFilter.OnResultExecuting
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Mvc.ResultExecutingContext
        name: ResultExecutingContext
        nameWithType: ResultExecutingContext
        qualifiedName: System.Web.Mvc.ResultExecutingContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.System#Web#Mvc#IResultFilter#OnResultExecuting(System.Web.Mvc.ResultExecutingContext)
  System.Web.Mvc.Controller.System#Web#Mvc#IResultFilter#OnResultExecuted(System.Web.Mvc.ResultExecutedContext):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.System#Web#Mvc#IResultFilter#OnResultExecuted(System.Web.Mvc.ResultExecutedContext)
        name: IResultFilter.OnResultExecuted
        nameWithType: Controller.IResultFilter.OnResultExecuted
        qualifiedName: System.Web.Mvc.Controller.System.Web.Mvc.IResultFilter.OnResultExecuted
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Mvc.ResultExecutedContext
        name: ResultExecutedContext
        nameWithType: ResultExecutedContext
        qualifiedName: System.Web.Mvc.ResultExecutedContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.System#Web#Mvc#IResultFilter#OnResultExecuted(System.Web.Mvc.ResultExecutedContext)
        name: System.Web.Mvc.IResultFilter.OnResultExecuted
        nameWithType: Controller.System.Web.Mvc.IResultFilter.OnResultExecuted
        qualifiedName: System.Web.Mvc.Controller.System.Web.Mvc.IResultFilter.OnResultExecuted
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Mvc.ResultExecutedContext
        name: ResultExecutedContext
        nameWithType: ResultExecutedContext
        qualifiedName: System.Web.Mvc.ResultExecutedContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.System#Web#Mvc#IResultFilter#OnResultExecuted(System.Web.Mvc.ResultExecutedContext)
  System.Web.Mvc.Controller.Resolver:
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.Resolver
        name: Resolver
        nameWithType: Controller.Resolver
        qualifiedName: System.Web.Mvc.Controller.Resolver
        isExternal: true
      VB:
      - id: System.Web.Mvc.Controller.Resolver
        name: Resolver
        nameWithType: Controller.Resolver
        qualifiedName: System.Web.Mvc.Controller.Resolver
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: P:System.Web.Mvc.Controller.Resolver
  System.Web.Mvc.Controller.AsyncManager:
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.AsyncManager
        name: AsyncManager
        nameWithType: Controller.AsyncManager
        qualifiedName: System.Web.Mvc.Controller.AsyncManager
        isExternal: true
      VB:
      - id: System.Web.Mvc.Controller.AsyncManager
        name: AsyncManager
        nameWithType: Controller.AsyncManager
        qualifiedName: System.Web.Mvc.Controller.AsyncManager
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: P:System.Web.Mvc.Controller.AsyncManager
  System.Web.Mvc.Controller.DisableAsyncSupport:
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.DisableAsyncSupport
        name: DisableAsyncSupport
        nameWithType: Controller.DisableAsyncSupport
        qualifiedName: System.Web.Mvc.Controller.DisableAsyncSupport
        isExternal: true
      VB:
      - id: System.Web.Mvc.Controller.DisableAsyncSupport
        name: DisableAsyncSupport
        nameWithType: Controller.DisableAsyncSupport
        qualifiedName: System.Web.Mvc.Controller.DisableAsyncSupport
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: P:System.Web.Mvc.Controller.DisableAsyncSupport
  System.Web.Mvc.Controller.ActionInvoker:
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.ActionInvoker
        name: ActionInvoker
        nameWithType: Controller.ActionInvoker
        qualifiedName: System.Web.Mvc.Controller.ActionInvoker
        isExternal: true
      VB:
      - id: System.Web.Mvc.Controller.ActionInvoker
        name: ActionInvoker
        nameWithType: Controller.ActionInvoker
        qualifiedName: System.Web.Mvc.Controller.ActionInvoker
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: P:System.Web.Mvc.Controller.ActionInvoker
  System.Web.Mvc.Controller.Binders:
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.Binders
        name: Binders
        nameWithType: Controller.Binders
        qualifiedName: System.Web.Mvc.Controller.Binders
        isExternal: true
      VB:
      - id: System.Web.Mvc.Controller.Binders
        name: Binders
        nameWithType: Controller.Binders
        qualifiedName: System.Web.Mvc.Controller.Binders
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: P:System.Web.Mvc.Controller.Binders
  System.Web.Mvc.Controller.HttpContext:
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.HttpContext
        name: HttpContext
        nameWithType: Controller.HttpContext
        qualifiedName: System.Web.Mvc.Controller.HttpContext
        isExternal: true
      VB:
      - id: System.Web.Mvc.Controller.HttpContext
        name: HttpContext
        nameWithType: Controller.HttpContext
        qualifiedName: System.Web.Mvc.Controller.HttpContext
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: P:System.Web.Mvc.Controller.HttpContext
  System.Web.Mvc.Controller.ModelState:
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.ModelState
        name: ModelState
        nameWithType: Controller.ModelState
        qualifiedName: System.Web.Mvc.Controller.ModelState
        isExternal: true
      VB:
      - id: System.Web.Mvc.Controller.ModelState
        name: ModelState
        nameWithType: Controller.ModelState
        qualifiedName: System.Web.Mvc.Controller.ModelState
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: P:System.Web.Mvc.Controller.ModelState
  System.Web.Mvc.Controller.Profile:
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.Profile
        name: Profile
        nameWithType: Controller.Profile
        qualifiedName: System.Web.Mvc.Controller.Profile
        isExternal: true
      VB:
      - id: System.Web.Mvc.Controller.Profile
        name: Profile
        nameWithType: Controller.Profile
        qualifiedName: System.Web.Mvc.Controller.Profile
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: P:System.Web.Mvc.Controller.Profile
  System.Web.Mvc.Controller.Request:
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.Request
        name: Request
        nameWithType: Controller.Request
        qualifiedName: System.Web.Mvc.Controller.Request
        isExternal: true
      VB:
      - id: System.Web.Mvc.Controller.Request
        name: Request
        nameWithType: Controller.Request
        qualifiedName: System.Web.Mvc.Controller.Request
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: P:System.Web.Mvc.Controller.Request
  System.Web.Mvc.Controller.Response:
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.Response
        name: Response
        nameWithType: Controller.Response
        qualifiedName: System.Web.Mvc.Controller.Response
        isExternal: true
      VB:
      - id: System.Web.Mvc.Controller.Response
        name: Response
        nameWithType: Controller.Response
        qualifiedName: System.Web.Mvc.Controller.Response
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: P:System.Web.Mvc.Controller.Response
  System.Web.Mvc.Controller.RouteData:
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.RouteData
        name: RouteData
        nameWithType: Controller.RouteData
        qualifiedName: System.Web.Mvc.Controller.RouteData
        isExternal: true
      VB:
      - id: System.Web.Mvc.Controller.RouteData
        name: RouteData
        nameWithType: Controller.RouteData
        qualifiedName: System.Web.Mvc.Controller.RouteData
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: P:System.Web.Mvc.Controller.RouteData
  System.Web.Mvc.Controller.Server:
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.Server
        name: Server
        nameWithType: Controller.Server
        qualifiedName: System.Web.Mvc.Controller.Server
        isExternal: true
      VB:
      - id: System.Web.Mvc.Controller.Server
        name: Server
        nameWithType: Controller.Server
        qualifiedName: System.Web.Mvc.Controller.Server
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: P:System.Web.Mvc.Controller.Server
  System.Web.Mvc.Controller.Session:
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.Session
        name: Session
        nameWithType: Controller.Session
        qualifiedName: System.Web.Mvc.Controller.Session
        isExternal: true
      VB:
      - id: System.Web.Mvc.Controller.Session
        name: Session
        nameWithType: Controller.Session
        qualifiedName: System.Web.Mvc.Controller.Session
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: P:System.Web.Mvc.Controller.Session
  System.Web.Mvc.Controller.TempDataProvider:
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.TempDataProvider
        name: TempDataProvider
        nameWithType: Controller.TempDataProvider
        qualifiedName: System.Web.Mvc.Controller.TempDataProvider
        isExternal: true
      VB:
      - id: System.Web.Mvc.Controller.TempDataProvider
        name: TempDataProvider
        nameWithType: Controller.TempDataProvider
        qualifiedName: System.Web.Mvc.Controller.TempDataProvider
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: P:System.Web.Mvc.Controller.TempDataProvider
  System.Web.Mvc.Controller.Url:
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.Url
        name: Url
        nameWithType: Controller.Url
        qualifiedName: System.Web.Mvc.Controller.Url
        isExternal: true
      VB:
      - id: System.Web.Mvc.Controller.Url
        name: Url
        nameWithType: Controller.Url
        qualifiedName: System.Web.Mvc.Controller.Url
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: P:System.Web.Mvc.Controller.Url
  System.Web.Mvc.Controller.User:
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.User
        name: User
        nameWithType: Controller.User
        qualifiedName: System.Web.Mvc.Controller.User
        isExternal: true
      VB:
      - id: System.Web.Mvc.Controller.User
        name: User
        nameWithType: Controller.User
        qualifiedName: System.Web.Mvc.Controller.User
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: P:System.Web.Mvc.Controller.User
  System.Web.Mvc.Controller.ViewEngineCollection:
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.ViewEngineCollection
        name: ViewEngineCollection
        nameWithType: Controller.ViewEngineCollection
        qualifiedName: System.Web.Mvc.Controller.ViewEngineCollection
        isExternal: true
      VB:
      - id: System.Web.Mvc.Controller.ViewEngineCollection
        name: ViewEngineCollection
        nameWithType: Controller.ViewEngineCollection
        qualifiedName: System.Web.Mvc.Controller.ViewEngineCollection
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: P:System.Web.Mvc.Controller.ViewEngineCollection
  System.Web.Mvc.ControllerBase:
    name:
      CSharp:
      - id: System.Web.Mvc.ControllerBase
        name: ControllerBase
        nameWithType: ControllerBase
        qualifiedName: System.Web.Mvc.ControllerBase
        isExternal: true
      VB:
      - id: System.Web.Mvc.ControllerBase
        name: ControllerBase
        nameWithType: ControllerBase
        qualifiedName: System.Web.Mvc.ControllerBase
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc
    commentId: T:System.Web.Mvc.ControllerBase
  System.Web.Mvc.ControllerBase.Execute(System.Web.Routing.RequestContext):
    name:
      CSharp:
      - id: System.Web.Mvc.ControllerBase.Execute(System.Web.Routing.RequestContext)
        name: Execute
        nameWithType: ControllerBase.Execute
        qualifiedName: System.Web.Mvc.ControllerBase.Execute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Routing.RequestContext
        name: RequestContext
        nameWithType: RequestContext
        qualifiedName: System.Web.Routing.RequestContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.ControllerBase.Execute(System.Web.Routing.RequestContext)
        name: Execute
        nameWithType: ControllerBase.Execute
        qualifiedName: System.Web.Mvc.ControllerBase.Execute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Routing.RequestContext
        name: RequestContext
        nameWithType: RequestContext
        qualifiedName: System.Web.Routing.RequestContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.ControllerBase
    commentId: M:System.Web.Mvc.ControllerBase.Execute(System.Web.Routing.RequestContext)
  System.Web.Mvc.ControllerBase.System#Web#Mvc#IController#Execute(System.Web.Routing.RequestContext):
    name:
      CSharp:
      - id: System.Web.Mvc.ControllerBase.System#Web#Mvc#IController#Execute(System.Web.Routing.RequestContext)
        name: IController.Execute
        nameWithType: ControllerBase.IController.Execute
        qualifiedName: System.Web.Mvc.ControllerBase.System.Web.Mvc.IController.Execute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Routing.RequestContext
        name: RequestContext
        nameWithType: RequestContext
        qualifiedName: System.Web.Routing.RequestContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.ControllerBase.System#Web#Mvc#IController#Execute(System.Web.Routing.RequestContext)
        name: System.Web.Mvc.IController.Execute
        nameWithType: ControllerBase.System.Web.Mvc.IController.Execute
        qualifiedName: System.Web.Mvc.ControllerBase.System.Web.Mvc.IController.Execute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Routing.RequestContext
        name: RequestContext
        nameWithType: RequestContext
        qualifiedName: System.Web.Routing.RequestContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.ControllerBase
    commentId: M:System.Web.Mvc.ControllerBase.System#Web#Mvc#IController#Execute(System.Web.Routing.RequestContext)
  System.Web.Mvc.ControllerBase.ControllerContext:
    name:
      CSharp:
      - id: System.Web.Mvc.ControllerBase.ControllerContext
        name: ControllerContext
        nameWithType: ControllerBase.ControllerContext
        qualifiedName: System.Web.Mvc.ControllerBase.ControllerContext
        isExternal: true
      VB:
      - id: System.Web.Mvc.ControllerBase.ControllerContext
        name: ControllerContext
        nameWithType: ControllerBase.ControllerContext
        qualifiedName: System.Web.Mvc.ControllerBase.ControllerContext
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc.ControllerBase
    commentId: P:System.Web.Mvc.ControllerBase.ControllerContext
  System.Web.Mvc.ControllerBase.TempData:
    name:
      CSharp:
      - id: System.Web.Mvc.ControllerBase.TempData
        name: TempData
        nameWithType: ControllerBase.TempData
        qualifiedName: System.Web.Mvc.ControllerBase.TempData
        isExternal: true
      VB:
      - id: System.Web.Mvc.ControllerBase.TempData
        name: TempData
        nameWithType: ControllerBase.TempData
        qualifiedName: System.Web.Mvc.ControllerBase.TempData
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc.ControllerBase
    commentId: P:System.Web.Mvc.ControllerBase.TempData
  System.Web.Mvc.ControllerBase.ValidateRequest:
    name:
      CSharp:
      - id: System.Web.Mvc.ControllerBase.ValidateRequest
        name: ValidateRequest
        nameWithType: ControllerBase.ValidateRequest
        qualifiedName: System.Web.Mvc.ControllerBase.ValidateRequest
        isExternal: true
      VB:
      - id: System.Web.Mvc.ControllerBase.ValidateRequest
        name: ValidateRequest
        nameWithType: ControllerBase.ValidateRequest
        qualifiedName: System.Web.Mvc.ControllerBase.ValidateRequest
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc.ControllerBase
    commentId: P:System.Web.Mvc.ControllerBase.ValidateRequest
  System.Web.Mvc.ControllerBase.ValueProvider:
    name:
      CSharp:
      - id: System.Web.Mvc.ControllerBase.ValueProvider
        name: ValueProvider
        nameWithType: ControllerBase.ValueProvider
        qualifiedName: System.Web.Mvc.ControllerBase.ValueProvider
        isExternal: true
      VB:
      - id: System.Web.Mvc.ControllerBase.ValueProvider
        name: ValueProvider
        nameWithType: ControllerBase.ValueProvider
        qualifiedName: System.Web.Mvc.ControllerBase.ValueProvider
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc.ControllerBase
    commentId: P:System.Web.Mvc.ControllerBase.ValueProvider
  System.Web.Mvc.ControllerBase.ViewBag:
    name:
      CSharp:
      - id: System.Web.Mvc.ControllerBase.ViewBag
        name: ViewBag
        nameWithType: ControllerBase.ViewBag
        qualifiedName: System.Web.Mvc.ControllerBase.ViewBag
        isExternal: true
      VB:
      - id: System.Web.Mvc.ControllerBase.ViewBag
        name: ViewBag
        nameWithType: ControllerBase.ViewBag
        qualifiedName: System.Web.Mvc.ControllerBase.ViewBag
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc.ControllerBase
    commentId: P:System.Web.Mvc.ControllerBase.ViewBag
  System.Web.Mvc.ControllerBase.ViewData:
    name:
      CSharp:
      - id: System.Web.Mvc.ControllerBase.ViewData
        name: ViewData
        nameWithType: ControllerBase.ViewData
        qualifiedName: System.Web.Mvc.ControllerBase.ViewData
        isExternal: true
      VB:
      - id: System.Web.Mvc.ControllerBase.ViewData
        name: ViewData
        nameWithType: ControllerBase.ViewData
        qualifiedName: System.Web.Mvc.ControllerBase.ViewData
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc.ControllerBase
    commentId: P:System.Web.Mvc.ControllerBase.ViewData
  System.Web.Mvc.IActionFilter:
    name:
      CSharp:
      - id: System.Web.Mvc.IActionFilter
        name: IActionFilter
        nameWithType: IActionFilter
        qualifiedName: System.Web.Mvc.IActionFilter
        isExternal: true
      VB:
      - id: System.Web.Mvc.IActionFilter
        name: IActionFilter
        nameWithType: IActionFilter
        qualifiedName: System.Web.Mvc.IActionFilter
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc
    commentId: T:System.Web.Mvc.IActionFilter
  System.Web.Mvc.Filters:
    name:
      CSharp:
      - name: System.Web.Mvc.Filters
        nameWithType: System.Web.Mvc.Filters
        qualifiedName: System.Web.Mvc.Filters
        isExternal: true
      VB:
      - name: System.Web.Mvc.Filters
        nameWithType: System.Web.Mvc.Filters
        qualifiedName: System.Web.Mvc.Filters
    isDefinition: true
    commentId: N:System.Web.Mvc.Filters
  System.Web.Mvc.Filters.IAuthenticationFilter:
    name:
      CSharp:
      - id: System.Web.Mvc.Filters.IAuthenticationFilter
        name: IAuthenticationFilter
        nameWithType: IAuthenticationFilter
        qualifiedName: System.Web.Mvc.Filters.IAuthenticationFilter
        isExternal: true
      VB:
      - id: System.Web.Mvc.Filters.IAuthenticationFilter
        name: IAuthenticationFilter
        nameWithType: IAuthenticationFilter
        qualifiedName: System.Web.Mvc.Filters.IAuthenticationFilter
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc.Filters
    commentId: T:System.Web.Mvc.Filters.IAuthenticationFilter
  System.Web.Mvc.IAuthorizationFilter:
    name:
      CSharp:
      - id: System.Web.Mvc.IAuthorizationFilter
        name: IAuthorizationFilter
        nameWithType: IAuthorizationFilter
        qualifiedName: System.Web.Mvc.IAuthorizationFilter
        isExternal: true
      VB:
      - id: System.Web.Mvc.IAuthorizationFilter
        name: IAuthorizationFilter
        nameWithType: IAuthorizationFilter
        qualifiedName: System.Web.Mvc.IAuthorizationFilter
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc
    commentId: T:System.Web.Mvc.IAuthorizationFilter
  System.Web.Mvc.IExceptionFilter:
    name:
      CSharp:
      - id: System.Web.Mvc.IExceptionFilter
        name: IExceptionFilter
        nameWithType: IExceptionFilter
        qualifiedName: System.Web.Mvc.IExceptionFilter
        isExternal: true
      VB:
      - id: System.Web.Mvc.IExceptionFilter
        name: IExceptionFilter
        nameWithType: IExceptionFilter
        qualifiedName: System.Web.Mvc.IExceptionFilter
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc
    commentId: T:System.Web.Mvc.IExceptionFilter
  System.Web.Mvc.IResultFilter:
    name:
      CSharp:
      - id: System.Web.Mvc.IResultFilter
        name: IResultFilter
        nameWithType: IResultFilter
        qualifiedName: System.Web.Mvc.IResultFilter
        isExternal: true
      VB:
      - id: System.Web.Mvc.IResultFilter
        name: IResultFilter
        nameWithType: IResultFilter
        qualifiedName: System.Web.Mvc.IResultFilter
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc
    commentId: T:System.Web.Mvc.IResultFilter
  System.Web.Mvc.Async:
    name:
      CSharp:
      - name: System.Web.Mvc.Async
        nameWithType: System.Web.Mvc.Async
        qualifiedName: System.Web.Mvc.Async
        isExternal: true
      VB:
      - name: System.Web.Mvc.Async
        nameWithType: System.Web.Mvc.Async
        qualifiedName: System.Web.Mvc.Async
    isDefinition: true
    commentId: N:System.Web.Mvc.Async
  System.Web.Mvc.Async.IAsyncController:
    name:
      CSharp:
      - id: System.Web.Mvc.Async.IAsyncController
        name: IAsyncController
        nameWithType: IAsyncController
        qualifiedName: System.Web.Mvc.Async.IAsyncController
        isExternal: true
      VB:
      - id: System.Web.Mvc.Async.IAsyncController
        name: IAsyncController
        nameWithType: IAsyncController
        qualifiedName: System.Web.Mvc.Async.IAsyncController
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc.Async
    commentId: T:System.Web.Mvc.Async.IAsyncController
  System.Web.Mvc.IController:
    name:
      CSharp:
      - id: System.Web.Mvc.IController
        name: IController
        nameWithType: IController
        qualifiedName: System.Web.Mvc.IController
        isExternal: true
      VB:
      - id: System.Web.Mvc.IController
        name: IController
        nameWithType: IController
        qualifiedName: System.Web.Mvc.IController
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc
    commentId: T:System.Web.Mvc.IController
  System.Web.Mvc.Async.IAsyncManagerContainer:
    name:
      CSharp:
      - id: System.Web.Mvc.Async.IAsyncManagerContainer
        name: IAsyncManagerContainer
        nameWithType: IAsyncManagerContainer
        qualifiedName: System.Web.Mvc.Async.IAsyncManagerContainer
        isExternal: true
      VB:
      - id: System.Web.Mvc.Async.IAsyncManagerContainer
        name: IAsyncManagerContainer
        nameWithType: IAsyncManagerContainer
        qualifiedName: System.Web.Mvc.Async.IAsyncManagerContainer
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc.Async
    commentId: T:System.Web.Mvc.Async.IAsyncManagerContainer
  System.Web.Mvc.ActionResult:
    name:
      CSharp:
      - id: System.Web.Mvc.ActionResult
        name: ActionResult
        nameWithType: ActionResult
        qualifiedName: System.Web.Mvc.ActionResult
        isExternal: true
      VB:
      - id: System.Web.Mvc.ActionResult
        name: ActionResult
        nameWithType: ActionResult
        qualifiedName: System.Web.Mvc.ActionResult
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc
    commentId: T:System.Web.Mvc.ActionResult
  AQuIP.Admin.Controllers.ErrorController.Index*:
    name:
      CSharp:
      - id: AQuIP.Admin.Controllers.ErrorController.Index*
        name: Index
        nameWithType: ErrorController.Index
        qualifiedName: AQuIP.Admin.Controllers.ErrorController.Index
      VB:
      - id: AQuIP.Admin.Controllers.ErrorController.Index*
        name: Index
        nameWithType: ErrorController.Index
        qualifiedName: AQuIP.Admin.Controllers.ErrorController.Index
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Controllers.ErrorController.Index
  AQuIP.Admin.Controllers.ErrorController.NotFound*:
    name:
      CSharp:
      - id: AQuIP.Admin.Controllers.ErrorController.NotFound*
        name: NotFound
        nameWithType: ErrorController.NotFound
        qualifiedName: AQuIP.Admin.Controllers.ErrorController.NotFound
      VB:
      - id: AQuIP.Admin.Controllers.ErrorController.NotFound*
        name: NotFound
        nameWithType: ErrorController.NotFound
        qualifiedName: AQuIP.Admin.Controllers.ErrorController.NotFound
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Controllers.ErrorController.NotFound
  AQuIP.Admin.Controllers.ErrorController:
    name:
      CSharp:
      - id: AQuIP.Admin.Controllers.ErrorController
        name: ErrorController
        nameWithType: ErrorController
        qualifiedName: AQuIP.Admin.Controllers.ErrorController
      VB:
      - id: AQuIP.Admin.Controllers.ErrorController
        name: ErrorController
        nameWithType: ErrorController
        qualifiedName: AQuIP.Admin.Controllers.ErrorController
    isDefinition: true
    commentId: T:AQuIP.Admin.Controllers.ErrorController
  AQuIP.Admin.Controllers.HomeController.Index*:
    name:
      CSharp:
      - id: AQuIP.Admin.Controllers.HomeController.Index*
        name: Index
        nameWithType: HomeController.Index
        qualifiedName: AQuIP.Admin.Controllers.HomeController.Index
      VB:
      - id: AQuIP.Admin.Controllers.HomeController.Index*
        name: Index
        nameWithType: HomeController.Index
        qualifiedName: AQuIP.Admin.Controllers.HomeController.Index
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Controllers.HomeController.Index
  System.Web.Mvc.AllowAnonymousAttribute:
    name:
      CSharp:
      - id: System.Web.Mvc.AllowAnonymousAttribute
        name: AllowAnonymousAttribute
        nameWithType: AllowAnonymousAttribute
        qualifiedName: System.Web.Mvc.AllowAnonymousAttribute
        isExternal: true
      VB:
      - id: System.Web.Mvc.AllowAnonymousAttribute
        name: AllowAnonymousAttribute
        nameWithType: AllowAnonymousAttribute
        qualifiedName: System.Web.Mvc.AllowAnonymousAttribute
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc
    commentId: T:System.Web.Mvc.AllowAnonymousAttribute
  System.Web.Mvc.AllowAnonymousAttribute.#ctor:
    name:
      CSharp:
      - id: System.Web.Mvc.AllowAnonymousAttribute.#ctor
        name: AllowAnonymousAttribute
        nameWithType: AllowAnonymousAttribute.AllowAnonymousAttribute
        qualifiedName: System.Web.Mvc.AllowAnonymousAttribute.AllowAnonymousAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.AllowAnonymousAttribute.#ctor
        name: AllowAnonymousAttribute
        nameWithType: AllowAnonymousAttribute.AllowAnonymousAttribute
        qualifiedName: System.Web.Mvc.AllowAnonymousAttribute.AllowAnonymousAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.AllowAnonymousAttribute
    commentId: M:System.Web.Mvc.AllowAnonymousAttribute.#ctor
  AQuIP.Admin.Models:
    name:
      CSharp:
      - name: AQuIP.Admin.Models
        nameWithType: AQuIP.Admin.Models
        qualifiedName: AQuIP.Admin.Models
      VB:
      - name: AQuIP.Admin.Models
        nameWithType: AQuIP.Admin.Models
        qualifiedName: AQuIP.Admin.Models
    isDefinition: true
    commentId: N:AQuIP.Admin.Models
  AQuIP.Admin.Models.LoginViewModel:
    name:
      CSharp:
      - id: AQuIP.Admin.Models.LoginViewModel
        name: LoginViewModel
        nameWithType: LoginViewModel
        qualifiedName: AQuIP.Admin.Models.LoginViewModel
      VB:
      - id: AQuIP.Admin.Models.LoginViewModel
        name: LoginViewModel
        nameWithType: LoginViewModel
        qualifiedName: AQuIP.Admin.Models.LoginViewModel
    isDefinition: true
    parent: AQuIP.Admin.Models
    commentId: T:AQuIP.Admin.Models.LoginViewModel
  System.Web.Mvc.HttpPostAttribute:
    name:
      CSharp:
      - id: System.Web.Mvc.HttpPostAttribute
        name: HttpPostAttribute
        nameWithType: HttpPostAttribute
        qualifiedName: System.Web.Mvc.HttpPostAttribute
        isExternal: true
      VB:
      - id: System.Web.Mvc.HttpPostAttribute
        name: HttpPostAttribute
        nameWithType: HttpPostAttribute
        qualifiedName: System.Web.Mvc.HttpPostAttribute
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc
    commentId: T:System.Web.Mvc.HttpPostAttribute
  System.Web.Mvc.HttpPostAttribute.#ctor:
    name:
      CSharp:
      - id: System.Web.Mvc.HttpPostAttribute.#ctor
        name: HttpPostAttribute
        nameWithType: HttpPostAttribute.HttpPostAttribute
        qualifiedName: System.Web.Mvc.HttpPostAttribute.HttpPostAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.HttpPostAttribute.#ctor
        name: HttpPostAttribute
        nameWithType: HttpPostAttribute.HttpPostAttribute
        qualifiedName: System.Web.Mvc.HttpPostAttribute.HttpPostAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.HttpPostAttribute
    commentId: M:System.Web.Mvc.HttpPostAttribute.#ctor
  AQuIP.Admin.Controllers.HomeController.Logout*:
    name:
      CSharp:
      - id: AQuIP.Admin.Controllers.HomeController.Logout*
        name: Logout
        nameWithType: HomeController.Logout
        qualifiedName: AQuIP.Admin.Controllers.HomeController.Logout
      VB:
      - id: AQuIP.Admin.Controllers.HomeController.Logout*
        name: Logout
        nameWithType: HomeController.Logout
        qualifiedName: AQuIP.Admin.Controllers.HomeController.Logout
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Controllers.HomeController.Logout
  System.Web.Mvc.AuthorizeAttribute:
    name:
      CSharp:
      - id: System.Web.Mvc.AuthorizeAttribute
        name: AuthorizeAttribute
        nameWithType: AuthorizeAttribute
        qualifiedName: System.Web.Mvc.AuthorizeAttribute
        isExternal: true
      VB:
      - id: System.Web.Mvc.AuthorizeAttribute
        name: AuthorizeAttribute
        nameWithType: AuthorizeAttribute
        qualifiedName: System.Web.Mvc.AuthorizeAttribute
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc
    commentId: T:System.Web.Mvc.AuthorizeAttribute
  System.Web.Mvc.AuthorizeAttribute.#ctor:
    name:
      CSharp:
      - id: System.Web.Mvc.AuthorizeAttribute.#ctor
        name: AuthorizeAttribute
        nameWithType: AuthorizeAttribute.AuthorizeAttribute
        qualifiedName: System.Web.Mvc.AuthorizeAttribute.AuthorizeAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.AuthorizeAttribute.#ctor
        name: AuthorizeAttribute
        nameWithType: AuthorizeAttribute.AuthorizeAttribute
        qualifiedName: System.Web.Mvc.AuthorizeAttribute.AuthorizeAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.AuthorizeAttribute
    commentId: M:System.Web.Mvc.AuthorizeAttribute.#ctor
  AQuIP.Admin.Controllers.HomeController:
    name:
      CSharp:
      - id: AQuIP.Admin.Controllers.HomeController
        name: HomeController
        nameWithType: HomeController
        qualifiedName: AQuIP.Admin.Controllers.HomeController
      VB:
      - id: AQuIP.Admin.Controllers.HomeController
        name: HomeController
        nameWithType: HomeController
        qualifiedName: AQuIP.Admin.Controllers.HomeController
    isDefinition: true
    commentId: T:AQuIP.Admin.Controllers.HomeController
  System.String:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.String
  System.Int32:
    name:
      CSharp:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      VB:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Int32
  AQuIP.Admin.Controllers.UserController.Index*:
    name:
      CSharp:
      - id: AQuIP.Admin.Controllers.UserController.Index*
        name: Index
        nameWithType: UserController.Index
        qualifiedName: AQuIP.Admin.Controllers.UserController.Index
      VB:
      - id: AQuIP.Admin.Controllers.UserController.Index*
        name: Index
        nameWithType: UserController.Index
        qualifiedName: AQuIP.Admin.Controllers.UserController.Index
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Controllers.UserController.Index
  AQuIP.Admin.Controllers.UserController.Details*:
    name:
      CSharp:
      - id: AQuIP.Admin.Controllers.UserController.Details*
        name: Details
        nameWithType: UserController.Details
        qualifiedName: AQuIP.Admin.Controllers.UserController.Details
      VB:
      - id: AQuIP.Admin.Controllers.UserController.Details*
        name: Details
        nameWithType: UserController.Details
        qualifiedName: AQuIP.Admin.Controllers.UserController.Details
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Controllers.UserController.Details
  AQuIP.Admin.Controllers.UserController.Create*:
    name:
      CSharp:
      - id: AQuIP.Admin.Controllers.UserController.Create*
        name: Create
        nameWithType: UserController.Create
        qualifiedName: AQuIP.Admin.Controllers.UserController.Create
      VB:
      - id: AQuIP.Admin.Controllers.UserController.Create*
        name: Create
        nameWithType: UserController.Create
        qualifiedName: AQuIP.Admin.Controllers.UserController.Create
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Controllers.UserController.Create
  AQuIP.Admin.Models.CreateUserViewModel:
    name:
      CSharp:
      - id: AQuIP.Admin.Models.CreateUserViewModel
        name: CreateUserViewModel
        nameWithType: CreateUserViewModel
        qualifiedName: AQuIP.Admin.Models.CreateUserViewModel
      VB:
      - id: AQuIP.Admin.Models.CreateUserViewModel
        name: CreateUserViewModel
        nameWithType: CreateUserViewModel
        qualifiedName: AQuIP.Admin.Models.CreateUserViewModel
    isDefinition: true
    parent: AQuIP.Admin.Models
    commentId: T:AQuIP.Admin.Models.CreateUserViewModel
  AQuIP.Admin.Controllers.UserController.Edit*:
    name:
      CSharp:
      - id: AQuIP.Admin.Controllers.UserController.Edit*
        name: Edit
        nameWithType: UserController.Edit
        qualifiedName: AQuIP.Admin.Controllers.UserController.Edit
      VB:
      - id: AQuIP.Admin.Controllers.UserController.Edit*
        name: Edit
        nameWithType: UserController.Edit
        qualifiedName: AQuIP.Admin.Controllers.UserController.Edit
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Controllers.UserController.Edit
  AQuIP.Admin.Models.UserAccount:
    name:
      CSharp:
      - id: AQuIP.Admin.Models.UserAccount
        name: UserAccount
        nameWithType: UserAccount
        qualifiedName: AQuIP.Admin.Models.UserAccount
      VB:
      - id: AQuIP.Admin.Models.UserAccount
        name: UserAccount
        nameWithType: UserAccount
        qualifiedName: AQuIP.Admin.Models.UserAccount
    isDefinition: true
    parent: AQuIP.Admin.Models
    commentId: T:AQuIP.Admin.Models.UserAccount
  AQuIP.Admin.Controllers.UserController.Delete*:
    name:
      CSharp:
      - id: AQuIP.Admin.Controllers.UserController.Delete*
        name: Delete
        nameWithType: UserController.Delete
        qualifiedName: AQuIP.Admin.Controllers.UserController.Delete
      VB:
      - id: AQuIP.Admin.Controllers.UserController.Delete*
        name: Delete
        nameWithType: UserController.Delete
        qualifiedName: AQuIP.Admin.Controllers.UserController.Delete
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Controllers.UserController.Delete
  System.Boolean:
    name:
      CSharp:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      VB:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Boolean
  AQuIP.Admin.Controllers.UserController.ResetPassword*:
    name:
      CSharp:
      - id: AQuIP.Admin.Controllers.UserController.ResetPassword*
        name: ResetPassword
        nameWithType: UserController.ResetPassword
        qualifiedName: AQuIP.Admin.Controllers.UserController.ResetPassword
      VB:
      - id: AQuIP.Admin.Controllers.UserController.ResetPassword*
        name: ResetPassword
        nameWithType: UserController.ResetPassword
        qualifiedName: AQuIP.Admin.Controllers.UserController.ResetPassword
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Controllers.UserController.ResetPassword
  AQuIP.Admin.Models.ResetPasswordViewModel:
    name:
      CSharp:
      - id: AQuIP.Admin.Models.ResetPasswordViewModel
        name: ResetPasswordViewModel
        nameWithType: ResetPasswordViewModel
        qualifiedName: AQuIP.Admin.Models.ResetPasswordViewModel
      VB:
      - id: AQuIP.Admin.Models.ResetPasswordViewModel
        name: ResetPasswordViewModel
        nameWithType: ResetPasswordViewModel
        qualifiedName: AQuIP.Admin.Models.ResetPasswordViewModel
    isDefinition: true
    parent: AQuIP.Admin.Models
    commentId: T:AQuIP.Admin.Models.ResetPasswordViewModel
  AQuIP.Admin.Controllers.UserController.ActivateDeactivate*:
    name:
      CSharp:
      - id: AQuIP.Admin.Controllers.UserController.ActivateDeactivate*
        name: ActivateDeactivate
        nameWithType: UserController.ActivateDeactivate
        qualifiedName: AQuIP.Admin.Controllers.UserController.ActivateDeactivate
      VB:
      - id: AQuIP.Admin.Controllers.UserController.ActivateDeactivate*
        name: ActivateDeactivate
        nameWithType: UserController.ActivateDeactivate
        qualifiedName: AQuIP.Admin.Controllers.UserController.ActivateDeactivate
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Controllers.UserController.ActivateDeactivate
  AQuIP.Admin.Models.ActivateDeactivateViewModel:
    name:
      CSharp:
      - id: AQuIP.Admin.Models.ActivateDeactivateViewModel
        name: ActivateDeactivateViewModel
        nameWithType: ActivateDeactivateViewModel
        qualifiedName: AQuIP.Admin.Models.ActivateDeactivateViewModel
      VB:
      - id: AQuIP.Admin.Models.ActivateDeactivateViewModel
        name: ActivateDeactivateViewModel
        nameWithType: ActivateDeactivateViewModel
        qualifiedName: AQuIP.Admin.Models.ActivateDeactivateViewModel
    isDefinition: true
    parent: AQuIP.Admin.Models
    commentId: T:AQuIP.Admin.Models.ActivateDeactivateViewModel
  AQuIP.Admin.Controllers.UserController:
    name:
      CSharp:
      - id: AQuIP.Admin.Controllers.UserController
        name: UserController
        nameWithType: UserController
        qualifiedName: AQuIP.Admin.Controllers.UserController
      VB:
      - id: AQuIP.Admin.Controllers.UserController
        name: UserController
        nameWithType: UserController
        qualifiedName: AQuIP.Admin.Controllers.UserController
    isDefinition: true
    commentId: T:AQuIP.Admin.Controllers.UserController
  AQuIP.Admin.Controllers:
    name:
      CSharp:
      - name: AQuIP.Admin.Controllers
        nameWithType: AQuIP.Admin.Controllers
        qualifiedName: AQuIP.Admin.Controllers
      VB:
      - name: AQuIP.Admin.Controllers
        nameWithType: AQuIP.Admin.Controllers
        qualifiedName: AQuIP.Admin.Controllers
    isDefinition: true
    commentId: N:AQuIP.Admin.Controllers
  AQuIP.Admin.Data.DapperUnitOfWork.#ctor*:
    name:
      CSharp:
      - id: AQuIP.Admin.Data.DapperUnitOfWork.#ctor*
        name: DapperUnitOfWork
        nameWithType: DapperUnitOfWork.DapperUnitOfWork
        qualifiedName: AQuIP.Admin.Data.DapperUnitOfWork.DapperUnitOfWork
      VB:
      - id: AQuIP.Admin.Data.DapperUnitOfWork.#ctor*
        name: DapperUnitOfWork
        nameWithType: DapperUnitOfWork.DapperUnitOfWork
        qualifiedName: AQuIP.Admin.Data.DapperUnitOfWork.DapperUnitOfWork
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Data.DapperUnitOfWork.#ctor
  AQuIP.Admin.Data.DapperUnitOfWork.Commit*:
    name:
      CSharp:
      - id: AQuIP.Admin.Data.DapperUnitOfWork.Commit*
        name: Commit
        nameWithType: DapperUnitOfWork.Commit
        qualifiedName: AQuIP.Admin.Data.DapperUnitOfWork.Commit
      VB:
      - id: AQuIP.Admin.Data.DapperUnitOfWork.Commit*
        name: Commit
        nameWithType: DapperUnitOfWork.Commit
        qualifiedName: AQuIP.Admin.Data.DapperUnitOfWork.Commit
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Data.DapperUnitOfWork.Commit
  AQuIP.Admin.Data.DapperUnitOfWork.Dispose*:
    name:
      CSharp:
      - id: AQuIP.Admin.Data.DapperUnitOfWork.Dispose*
        name: Dispose
        nameWithType: DapperUnitOfWork.Dispose
        qualifiedName: AQuIP.Admin.Data.DapperUnitOfWork.Dispose
      VB:
      - id: AQuIP.Admin.Data.DapperUnitOfWork.Dispose*
        name: Dispose
        nameWithType: DapperUnitOfWork.Dispose
        qualifiedName: AQuIP.Admin.Data.DapperUnitOfWork.Dispose
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Data.DapperUnitOfWork.Dispose
  System.IDisposable.Dispose:
    name:
      CSharp:
      - id: System.IDisposable.Dispose
        name: Dispose
        nameWithType: IDisposable.Dispose
        qualifiedName: System.IDisposable.Dispose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.IDisposable.Dispose
        name: Dispose
        nameWithType: IDisposable.Dispose
        qualifiedName: System.IDisposable.Dispose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.IDisposable
    commentId: M:System.IDisposable.Dispose
  AQuIP.Admin.Data.DapperUnitOfWork:
    name:
      CSharp:
      - id: AQuIP.Admin.Data.DapperUnitOfWork
        name: DapperUnitOfWork
        nameWithType: DapperUnitOfWork
        qualifiedName: AQuIP.Admin.Data.DapperUnitOfWork
      VB:
      - id: AQuIP.Admin.Data.DapperUnitOfWork
        name: DapperUnitOfWork
        nameWithType: DapperUnitOfWork
        qualifiedName: AQuIP.Admin.Data.DapperUnitOfWork
    isDefinition: true
    commentId: T:AQuIP.Admin.Data.DapperUnitOfWork
  AQuIP.Admin.Data:
    name:
      CSharp:
      - name: AQuIP.Admin.Data
        nameWithType: AQuIP.Admin.Data
        qualifiedName: AQuIP.Admin.Data
      VB:
      - name: AQuIP.Admin.Data
        nameWithType: AQuIP.Admin.Data
        qualifiedName: AQuIP.Admin.Data
    isDefinition: true
    commentId: N:AQuIP.Admin.Data
  AQuIP.Admin.Infrastructure:
    name:
      CSharp:
      - name: AQuIP.Admin.Infrastructure
        nameWithType: AQuIP.Admin.Infrastructure
        qualifiedName: AQuIP.Admin.Infrastructure
      VB:
      - name: AQuIP.Admin.Infrastructure
        nameWithType: AQuIP.Admin.Infrastructure
        qualifiedName: AQuIP.Admin.Infrastructure
    isDefinition: true
    commentId: N:AQuIP.Admin.Infrastructure
  AQuIP.Admin.Infrastructure.IUnitOfWork:
    name:
      CSharp:
      - id: AQuIP.Admin.Infrastructure.IUnitOfWork
        name: IUnitOfWork
        nameWithType: IUnitOfWork
        qualifiedName: AQuIP.Admin.Infrastructure.IUnitOfWork
      VB:
      - id: AQuIP.Admin.Infrastructure.IUnitOfWork
        name: IUnitOfWork
        nameWithType: IUnitOfWork
        qualifiedName: AQuIP.Admin.Infrastructure.IUnitOfWork
    isDefinition: true
    parent: AQuIP.Admin.Infrastructure
    commentId: T:AQuIP.Admin.Infrastructure.IUnitOfWork
  AQuIP.Admin.Data.Repositories.AccountRepository.#ctor*:
    name:
      CSharp:
      - id: AQuIP.Admin.Data.Repositories.AccountRepository.#ctor*
        name: AccountRepository
        nameWithType: AccountRepository.AccountRepository
        qualifiedName: AQuIP.Admin.Data.Repositories.AccountRepository.AccountRepository
      VB:
      - id: AQuIP.Admin.Data.Repositories.AccountRepository.#ctor*
        name: AccountRepository
        nameWithType: AccountRepository.AccountRepository
        qualifiedName: AQuIP.Admin.Data.Repositories.AccountRepository.AccountRepository
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Data.Repositories.AccountRepository.#ctor
  AQuIP.Admin.Data.Repositories.AccountRepository.GetUserForLogin*:
    name:
      CSharp:
      - id: AQuIP.Admin.Data.Repositories.AccountRepository.GetUserForLogin*
        name: GetUserForLogin
        nameWithType: AccountRepository.GetUserForLogin
        qualifiedName: AQuIP.Admin.Data.Repositories.AccountRepository.GetUserForLogin
      VB:
      - id: AQuIP.Admin.Data.Repositories.AccountRepository.GetUserForLogin*
        name: GetUserForLogin
        nameWithType: AccountRepository.GetUserForLogin
        qualifiedName: AQuIP.Admin.Data.Repositories.AccountRepository.GetUserForLogin
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Data.Repositories.AccountRepository.GetUserForLogin
  AQuIP.Admin.Data.Repositories.AccountRepository:
    name:
      CSharp:
      - id: AQuIP.Admin.Data.Repositories.AccountRepository
        name: AccountRepository
        nameWithType: AccountRepository
        qualifiedName: AQuIP.Admin.Data.Repositories.AccountRepository
      VB:
      - id: AQuIP.Admin.Data.Repositories.AccountRepository
        name: AccountRepository
        nameWithType: AccountRepository
        qualifiedName: AQuIP.Admin.Data.Repositories.AccountRepository
    isDefinition: true
    commentId: T:AQuIP.Admin.Data.Repositories.AccountRepository
  AQuIP.Admin.Data.Repositories.UserRepository.#ctor*:
    name:
      CSharp:
      - id: AQuIP.Admin.Data.Repositories.UserRepository.#ctor*
        name: UserRepository
        nameWithType: UserRepository.UserRepository
        qualifiedName: AQuIP.Admin.Data.Repositories.UserRepository.UserRepository
      VB:
      - id: AQuIP.Admin.Data.Repositories.UserRepository.#ctor*
        name: UserRepository
        nameWithType: UserRepository.UserRepository
        qualifiedName: AQuIP.Admin.Data.Repositories.UserRepository.UserRepository
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Data.Repositories.UserRepository.#ctor
  System.Collections.Generic.List`1:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.List`1
  System.Collections.Generic:
    name:
      CSharp:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
        isExternal: true
      VB:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
    isDefinition: true
    commentId: N:System.Collections.Generic
  System.Collections.Generic.List{AQuIP.Admin.Models.UserAccount}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: AQuIP.Admin.Models.UserAccount
        name: UserAccount
        nameWithType: UserAccount
        qualifiedName: AQuIP.Admin.Models.UserAccount
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: AQuIP.Admin.Models.UserAccount
        name: UserAccount
        nameWithType: UserAccount
        qualifiedName: AQuIP.Admin.Models.UserAccount
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{AQuIP.Admin.Models.UserAccount}
  AQuIP.Admin.Data.Repositories.UserRepository.FindAll*:
    name:
      CSharp:
      - id: AQuIP.Admin.Data.Repositories.UserRepository.FindAll*
        name: FindAll
        nameWithType: UserRepository.FindAll
        qualifiedName: AQuIP.Admin.Data.Repositories.UserRepository.FindAll
      VB:
      - id: AQuIP.Admin.Data.Repositories.UserRepository.FindAll*
        name: FindAll
        nameWithType: UserRepository.FindAll
        qualifiedName: AQuIP.Admin.Data.Repositories.UserRepository.FindAll
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Data.Repositories.UserRepository.FindAll
  AQuIP.Admin.Data.Repositories.UserRepository.FindByID*:
    name:
      CSharp:
      - id: AQuIP.Admin.Data.Repositories.UserRepository.FindByID*
        name: FindByID
        nameWithType: UserRepository.FindByID
        qualifiedName: AQuIP.Admin.Data.Repositories.UserRepository.FindByID
      VB:
      - id: AQuIP.Admin.Data.Repositories.UserRepository.FindByID*
        name: FindByID
        nameWithType: UserRepository.FindByID
        qualifiedName: AQuIP.Admin.Data.Repositories.UserRepository.FindByID
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Data.Repositories.UserRepository.FindByID
  AQuIP.Admin.Models.CreateUserDTO:
    name:
      CSharp:
      - id: AQuIP.Admin.Models.CreateUserDTO
        name: CreateUserDTO
        nameWithType: CreateUserDTO
        qualifiedName: AQuIP.Admin.Models.CreateUserDTO
      VB:
      - id: AQuIP.Admin.Models.CreateUserDTO
        name: CreateUserDTO
        nameWithType: CreateUserDTO
        qualifiedName: AQuIP.Admin.Models.CreateUserDTO
    isDefinition: true
    parent: AQuIP.Admin.Models
    commentId: T:AQuIP.Admin.Models.CreateUserDTO
  AQuIP.Admin.Data.Repositories.UserRepository.Add*:
    name:
      CSharp:
      - id: AQuIP.Admin.Data.Repositories.UserRepository.Add*
        name: Add
        nameWithType: UserRepository.Add
        qualifiedName: AQuIP.Admin.Data.Repositories.UserRepository.Add
      VB:
      - id: AQuIP.Admin.Data.Repositories.UserRepository.Add*
        name: Add
        nameWithType: UserRepository.Add
        qualifiedName: AQuIP.Admin.Data.Repositories.UserRepository.Add
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Data.Repositories.UserRepository.Add
  AQuIP.Admin.Models.CreateAssetViewerDTO:
    name:
      CSharp:
      - id: AQuIP.Admin.Models.CreateAssetViewerDTO
        name: CreateAssetViewerDTO
        nameWithType: CreateAssetViewerDTO
        qualifiedName: AQuIP.Admin.Models.CreateAssetViewerDTO
      VB:
      - id: AQuIP.Admin.Models.CreateAssetViewerDTO
        name: CreateAssetViewerDTO
        nameWithType: CreateAssetViewerDTO
        qualifiedName: AQuIP.Admin.Models.CreateAssetViewerDTO
    isDefinition: true
    parent: AQuIP.Admin.Models
    commentId: T:AQuIP.Admin.Models.CreateAssetViewerDTO
  AQuIP.Admin.Data.Repositories.UserRepository.AddAssetViewer*:
    name:
      CSharp:
      - id: AQuIP.Admin.Data.Repositories.UserRepository.AddAssetViewer*
        name: AddAssetViewer
        nameWithType: UserRepository.AddAssetViewer
        qualifiedName: AQuIP.Admin.Data.Repositories.UserRepository.AddAssetViewer
      VB:
      - id: AQuIP.Admin.Data.Repositories.UserRepository.AddAssetViewer*
        name: AddAssetViewer
        nameWithType: UserRepository.AddAssetViewer
        qualifiedName: AQuIP.Admin.Data.Repositories.UserRepository.AddAssetViewer
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Data.Repositories.UserRepository.AddAssetViewer
  AQuIP.Admin.Data.Repositories.UserRepository.UpdateUser*:
    name:
      CSharp:
      - id: AQuIP.Admin.Data.Repositories.UserRepository.UpdateUser*
        name: UpdateUser
        nameWithType: UserRepository.UpdateUser
        qualifiedName: AQuIP.Admin.Data.Repositories.UserRepository.UpdateUser
      VB:
      - id: AQuIP.Admin.Data.Repositories.UserRepository.UpdateUser*
        name: UpdateUser
        nameWithType: UserRepository.UpdateUser
        qualifiedName: AQuIP.Admin.Data.Repositories.UserRepository.UpdateUser
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Data.Repositories.UserRepository.UpdateUser
  AQuIP.Admin.Data.Repositories.UserRepository.UpdateOrganization*:
    name:
      CSharp:
      - id: AQuIP.Admin.Data.Repositories.UserRepository.UpdateOrganization*
        name: UpdateOrganization
        nameWithType: UserRepository.UpdateOrganization
        qualifiedName: AQuIP.Admin.Data.Repositories.UserRepository.UpdateOrganization
      VB:
      - id: AQuIP.Admin.Data.Repositories.UserRepository.UpdateOrganization*
        name: UpdateOrganization
        nameWithType: UserRepository.UpdateOrganization
        qualifiedName: AQuIP.Admin.Data.Repositories.UserRepository.UpdateOrganization
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Data.Repositories.UserRepository.UpdateOrganization
  AQuIP.Admin.Data.Repositories.UserRepository.ResetPassword*:
    name:
      CSharp:
      - id: AQuIP.Admin.Data.Repositories.UserRepository.ResetPassword*
        name: ResetPassword
        nameWithType: UserRepository.ResetPassword
        qualifiedName: AQuIP.Admin.Data.Repositories.UserRepository.ResetPassword
      VB:
      - id: AQuIP.Admin.Data.Repositories.UserRepository.ResetPassword*
        name: ResetPassword
        nameWithType: UserRepository.ResetPassword
        qualifiedName: AQuIP.Admin.Data.Repositories.UserRepository.ResetPassword
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Data.Repositories.UserRepository.ResetPassword
  AQuIP.Admin.Data.Repositories.UserRepository.ActivateUser*:
    name:
      CSharp:
      - id: AQuIP.Admin.Data.Repositories.UserRepository.ActivateUser*
        name: ActivateUser
        nameWithType: UserRepository.ActivateUser
        qualifiedName: AQuIP.Admin.Data.Repositories.UserRepository.ActivateUser
      VB:
      - id: AQuIP.Admin.Data.Repositories.UserRepository.ActivateUser*
        name: ActivateUser
        nameWithType: UserRepository.ActivateUser
        qualifiedName: AQuIP.Admin.Data.Repositories.UserRepository.ActivateUser
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Data.Repositories.UserRepository.ActivateUser
  AQuIP.Admin.Data.Repositories.UserRepository.DeactivateUser*:
    name:
      CSharp:
      - id: AQuIP.Admin.Data.Repositories.UserRepository.DeactivateUser*
        name: DeactivateUser
        nameWithType: UserRepository.DeactivateUser
        qualifiedName: AQuIP.Admin.Data.Repositories.UserRepository.DeactivateUser
      VB:
      - id: AQuIP.Admin.Data.Repositories.UserRepository.DeactivateUser*
        name: DeactivateUser
        nameWithType: UserRepository.DeactivateUser
        qualifiedName: AQuIP.Admin.Data.Repositories.UserRepository.DeactivateUser
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Data.Repositories.UserRepository.DeactivateUser
  AQuIP.Admin.Data.Repositories.UserRepository.DeleteUser*:
    name:
      CSharp:
      - id: AQuIP.Admin.Data.Repositories.UserRepository.DeleteUser*
        name: DeleteUser
        nameWithType: UserRepository.DeleteUser
        qualifiedName: AQuIP.Admin.Data.Repositories.UserRepository.DeleteUser
      VB:
      - id: AQuIP.Admin.Data.Repositories.UserRepository.DeleteUser*
        name: DeleteUser
        nameWithType: UserRepository.DeleteUser
        qualifiedName: AQuIP.Admin.Data.Repositories.UserRepository.DeleteUser
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Data.Repositories.UserRepository.DeleteUser
  System.Collections.Generic.IEnumerable`1:
    name:
      CSharp:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.IEnumerable`1
  System.Collections.Generic.IEnumerable{System.String}:
    name:
      CSharp:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.IEnumerable`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.IEnumerable{System.String}
  AQuIP.Admin.Data.Repositories.UserRepository.GetRoles*:
    name:
      CSharp:
      - id: AQuIP.Admin.Data.Repositories.UserRepository.GetRoles*
        name: GetRoles
        nameWithType: UserRepository.GetRoles
        qualifiedName: AQuIP.Admin.Data.Repositories.UserRepository.GetRoles
      VB:
      - id: AQuIP.Admin.Data.Repositories.UserRepository.GetRoles*
        name: GetRoles
        nameWithType: UserRepository.GetRoles
        qualifiedName: AQuIP.Admin.Data.Repositories.UserRepository.GetRoles
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Data.Repositories.UserRepository.GetRoles
  AQuIP.Admin.Data.Repositories.UserRepository:
    name:
      CSharp:
      - id: AQuIP.Admin.Data.Repositories.UserRepository
        name: UserRepository
        nameWithType: UserRepository
        qualifiedName: AQuIP.Admin.Data.Repositories.UserRepository
      VB:
      - id: AQuIP.Admin.Data.Repositories.UserRepository
        name: UserRepository
        nameWithType: UserRepository
        qualifiedName: AQuIP.Admin.Data.Repositories.UserRepository
    isDefinition: true
    commentId: T:AQuIP.Admin.Data.Repositories.UserRepository
  AQuIP.Admin.Data.Repositories:
    name:
      CSharp:
      - name: AQuIP.Admin.Data.Repositories
        nameWithType: AQuIP.Admin.Data.Repositories
        qualifiedName: AQuIP.Admin.Data.Repositories
      VB:
      - name: AQuIP.Admin.Data.Repositories
        nameWithType: AQuIP.Admin.Data.Repositories
        qualifiedName: AQuIP.Admin.Data.Repositories
    isDefinition: true
    commentId: N:AQuIP.Admin.Data.Repositories
  AQuIP.Admin.Helpers.Constant:
    name:
      CSharp:
      - id: AQuIP.Admin.Helpers.Constant
        name: Constant
        nameWithType: Constant
        qualifiedName: AQuIP.Admin.Helpers.Constant
      VB:
      - id: AQuIP.Admin.Helpers.Constant
        name: Constant
        nameWithType: Constant
        qualifiedName: AQuIP.Admin.Helpers.Constant
    isDefinition: true
    commentId: T:AQuIP.Admin.Helpers.Constant
  System.Web.IHtmlString:
    name:
      CSharp:
      - id: System.Web.IHtmlString
        name: IHtmlString
        nameWithType: IHtmlString
        qualifiedName: System.Web.IHtmlString
        isExternal: true
      VB:
      - id: System.Web.IHtmlString
        name: IHtmlString
        nameWithType: IHtmlString
        qualifiedName: System.Web.IHtmlString
        isExternal: true
    isDefinition: true
    parent: System.Web
    commentId: T:System.Web.IHtmlString
  System.Web.Mvc.HtmlHelper:
    name:
      CSharp:
      - id: System.Web.Mvc.HtmlHelper
        name: HtmlHelper
        nameWithType: HtmlHelper
        qualifiedName: System.Web.Mvc.HtmlHelper
        isExternal: true
      VB:
      - id: System.Web.Mvc.HtmlHelper
        name: HtmlHelper
        nameWithType: HtmlHelper
        qualifiedName: System.Web.Mvc.HtmlHelper
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc
    commentId: T:System.Web.Mvc.HtmlHelper
  AQuIP.Admin.Helpers.Extensions.SortIdentifier*:
    name:
      CSharp:
      - id: AQuIP.Admin.Helpers.Extensions.SortIdentifier*
        name: SortIdentifier
        nameWithType: Extensions.SortIdentifier
        qualifiedName: AQuIP.Admin.Helpers.Extensions.SortIdentifier
      VB:
      - id: AQuIP.Admin.Helpers.Extensions.SortIdentifier*
        name: SortIdentifier
        nameWithType: Extensions.SortIdentifier
        qualifiedName: AQuIP.Admin.Helpers.Extensions.SortIdentifier
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Helpers.Extensions.SortIdentifier
  System.Web.Routing.RouteValueDictionary:
    name:
      CSharp:
      - id: System.Web.Routing.RouteValueDictionary
        name: RouteValueDictionary
        nameWithType: RouteValueDictionary
        qualifiedName: System.Web.Routing.RouteValueDictionary
        isExternal: true
      VB:
      - id: System.Web.Routing.RouteValueDictionary
        name: RouteValueDictionary
        nameWithType: RouteValueDictionary
        qualifiedName: System.Web.Routing.RouteValueDictionary
        isExternal: true
    isDefinition: true
    parent: System.Web.Routing
    commentId: T:System.Web.Routing.RouteValueDictionary
  System.Collections.Specialized:
    name:
      CSharp:
      - name: System.Collections.Specialized
        nameWithType: System.Collections.Specialized
        qualifiedName: System.Collections.Specialized
        isExternal: true
      VB:
      - name: System.Collections.Specialized
        nameWithType: System.Collections.Specialized
        qualifiedName: System.Collections.Specialized
    isDefinition: true
    commentId: N:System.Collections.Specialized
  System.Collections.Specialized.NameValueCollection:
    name:
      CSharp:
      - id: System.Collections.Specialized.NameValueCollection
        name: NameValueCollection
        nameWithType: NameValueCollection
        qualifiedName: System.Collections.Specialized.NameValueCollection
        isExternal: true
      VB:
      - id: System.Collections.Specialized.NameValueCollection
        name: NameValueCollection
        nameWithType: NameValueCollection
        qualifiedName: System.Collections.Specialized.NameValueCollection
        isExternal: true
    isDefinition: true
    parent: System.Collections.Specialized
    commentId: T:System.Collections.Specialized.NameValueCollection
  AQuIP.Admin.Helpers.Extensions.ToRouteValueDictionary*:
    name:
      CSharp:
      - id: AQuIP.Admin.Helpers.Extensions.ToRouteValueDictionary*
        name: ToRouteValueDictionary
        nameWithType: Extensions.ToRouteValueDictionary
        qualifiedName: AQuIP.Admin.Helpers.Extensions.ToRouteValueDictionary
      VB:
      - id: AQuIP.Admin.Helpers.Extensions.ToRouteValueDictionary*
        name: ToRouteValueDictionary
        nameWithType: Extensions.ToRouteValueDictionary
        qualifiedName: AQuIP.Admin.Helpers.Extensions.ToRouteValueDictionary
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Helpers.Extensions.ToRouteValueDictionary
  AQuIP.Admin.Helpers.Extensions.GetSortedList*:
    name:
      CSharp:
      - id: AQuIP.Admin.Helpers.Extensions.GetSortedList*
        name: GetSortedList
        nameWithType: Extensions.GetSortedList
        qualifiedName: AQuIP.Admin.Helpers.Extensions.GetSortedList
      VB:
      - id: AQuIP.Admin.Helpers.Extensions.GetSortedList*
        name: GetSortedList
        nameWithType: Extensions.GetSortedList
        qualifiedName: AQuIP.Admin.Helpers.Extensions.GetSortedList
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Helpers.Extensions.GetSortedList
  AQuIP.Admin.Helpers.Extensions:
    name:
      CSharp:
      - id: AQuIP.Admin.Helpers.Extensions
        name: Extensions
        nameWithType: Extensions
        qualifiedName: AQuIP.Admin.Helpers.Extensions
      VB:
      - id: AQuIP.Admin.Helpers.Extensions
        name: Extensions
        nameWithType: Extensions
        qualifiedName: AQuIP.Admin.Helpers.Extensions
    isDefinition: true
    commentId: T:AQuIP.Admin.Helpers.Extensions
  System.Collections.Generic.Dictionary`2:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.Dictionary`2
  System.Collections.Generic.Dictionary{System.String,System.Object}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{System.String,System.Object}
  AQuIP.Admin.Helpers.Helpers.LogWebUsage*:
    name:
      CSharp:
      - id: AQuIP.Admin.Helpers.Helpers.LogWebUsage*
        name: LogWebUsage
        nameWithType: Helpers.LogWebUsage
        qualifiedName: AQuIP.Admin.Helpers.Helpers.LogWebUsage
      VB:
      - id: AQuIP.Admin.Helpers.Helpers.LogWebUsage*
        name: LogWebUsage
        nameWithType: Helpers.LogWebUsage
        qualifiedName: AQuIP.Admin.Helpers.Helpers.LogWebUsage
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Helpers.Helpers.LogWebUsage
  System.Exception:
    name:
      CSharp:
      - id: System.Exception
        name: Exception
        nameWithType: Exception
        qualifiedName: System.Exception
        isExternal: true
      VB:
      - id: System.Exception
        name: Exception
        nameWithType: Exception
        qualifiedName: System.Exception
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Exception
  AQuIP.Admin.Helpers.Helpers.LogWebError*:
    name:
      CSharp:
      - id: AQuIP.Admin.Helpers.Helpers.LogWebError*
        name: LogWebError
        nameWithType: Helpers.LogWebError
        qualifiedName: AQuIP.Admin.Helpers.Helpers.LogWebError
      VB:
      - id: AQuIP.Admin.Helpers.Helpers.LogWebError*
        name: LogWebError
        nameWithType: Helpers.LogWebError
        qualifiedName: AQuIP.Admin.Helpers.Helpers.LogWebError
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Helpers.Helpers.LogWebError
  AQuIP.Admin.Helpers.Helpers.LogWebDiagnostic*:
    name:
      CSharp:
      - id: AQuIP.Admin.Helpers.Helpers.LogWebDiagnostic*
        name: LogWebDiagnostic
        nameWithType: Helpers.LogWebDiagnostic
        qualifiedName: AQuIP.Admin.Helpers.Helpers.LogWebDiagnostic
      VB:
      - id: AQuIP.Admin.Helpers.Helpers.LogWebDiagnostic*
        name: LogWebDiagnostic
        nameWithType: Helpers.LogWebDiagnostic
        qualifiedName: AQuIP.Admin.Helpers.Helpers.LogWebDiagnostic
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Helpers.Helpers.LogWebDiagnostic
  AQuIP.Admin.Helpers.Helpers.GetHttpStatus*:
    name:
      CSharp:
      - id: AQuIP.Admin.Helpers.Helpers.GetHttpStatus*
        name: GetHttpStatus
        nameWithType: Helpers.GetHttpStatus
        qualifiedName: AQuIP.Admin.Helpers.Helpers.GetHttpStatus
      VB:
      - id: AQuIP.Admin.Helpers.Helpers.GetHttpStatus*
        name: GetHttpStatus
        nameWithType: Helpers.GetHttpStatus
        qualifiedName: AQuIP.Admin.Helpers.Helpers.GetHttpStatus
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Helpers.Helpers.GetHttpStatus
  AQuIP.Admin.Helpers.Helpers:
    name:
      CSharp:
      - id: AQuIP.Admin.Helpers.Helpers
        name: Helpers
        nameWithType: Helpers
        qualifiedName: AQuIP.Admin.Helpers.Helpers
      VB:
      - id: AQuIP.Admin.Helpers.Helpers
        name: Helpers
        nameWithType: Helpers
        qualifiedName: AQuIP.Admin.Helpers.Helpers
    isDefinition: true
    commentId: T:AQuIP.Admin.Helpers.Helpers
  AQuIP.Admin.Helpers:
    name:
      CSharp:
      - name: AQuIP.Admin.Helpers
        nameWithType: AQuIP.Admin.Helpers
        qualifiedName: AQuIP.Admin.Helpers
      VB:
      - name: AQuIP.Admin.Helpers
        nameWithType: AQuIP.Admin.Helpers
        qualifiedName: AQuIP.Admin.Helpers
    isDefinition: true
    commentId: N:AQuIP.Admin.Helpers
  AQuIP.Admin.Infrastructure.DalSession.#ctor*:
    name:
      CSharp:
      - id: AQuIP.Admin.Infrastructure.DalSession.#ctor*
        name: DalSession
        nameWithType: DalSession.DalSession
        qualifiedName: AQuIP.Admin.Infrastructure.DalSession.DalSession
      VB:
      - id: AQuIP.Admin.Infrastructure.DalSession.#ctor*
        name: DalSession
        nameWithType: DalSession.DalSession
        qualifiedName: AQuIP.Admin.Infrastructure.DalSession.DalSession
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Infrastructure.DalSession.#ctor
  AQuIP.Admin.Infrastructure.UnitOfWork:
    name:
      CSharp:
      - id: AQuIP.Admin.Infrastructure.UnitOfWork
        name: UnitOfWork
        nameWithType: UnitOfWork
        qualifiedName: AQuIP.Admin.Infrastructure.UnitOfWork
      VB:
      - id: AQuIP.Admin.Infrastructure.UnitOfWork
        name: UnitOfWork
        nameWithType: UnitOfWork
        qualifiedName: AQuIP.Admin.Infrastructure.UnitOfWork
    isDefinition: true
    parent: AQuIP.Admin.Infrastructure
    commentId: T:AQuIP.Admin.Infrastructure.UnitOfWork
  AQuIP.Admin.Infrastructure.DalSession.UnitOfWork*:
    name:
      CSharp:
      - id: AQuIP.Admin.Infrastructure.DalSession.UnitOfWork*
        name: UnitOfWork
        nameWithType: DalSession.UnitOfWork
        qualifiedName: AQuIP.Admin.Infrastructure.DalSession.UnitOfWork
      VB:
      - id: AQuIP.Admin.Infrastructure.DalSession.UnitOfWork*
        name: UnitOfWork
        nameWithType: DalSession.UnitOfWork
        qualifiedName: AQuIP.Admin.Infrastructure.DalSession.UnitOfWork
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Infrastructure.DalSession.UnitOfWork
  AQuIP.Admin.Infrastructure.DalSession.Dispose*:
    name:
      CSharp:
      - id: AQuIP.Admin.Infrastructure.DalSession.Dispose*
        name: Dispose
        nameWithType: DalSession.Dispose
        qualifiedName: AQuIP.Admin.Infrastructure.DalSession.Dispose
      VB:
      - id: AQuIP.Admin.Infrastructure.DalSession.Dispose*
        name: Dispose
        nameWithType: DalSession.Dispose
        qualifiedName: AQuIP.Admin.Infrastructure.DalSession.Dispose
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Infrastructure.DalSession.Dispose
  AQuIP.Admin.Infrastructure.DalSession:
    name:
      CSharp:
      - id: AQuIP.Admin.Infrastructure.DalSession
        name: DalSession
        nameWithType: DalSession
        qualifiedName: AQuIP.Admin.Infrastructure.DalSession
      VB:
      - id: AQuIP.Admin.Infrastructure.DalSession
        name: DalSession
        nameWithType: DalSession
        qualifiedName: AQuIP.Admin.Infrastructure.DalSession
    isDefinition: true
    commentId: T:AQuIP.Admin.Infrastructure.DalSession
  System.Data:
    name:
      CSharp:
      - name: System.Data
        nameWithType: System.Data
        qualifiedName: System.Data
        isExternal: true
      VB:
      - name: System.Data
        nameWithType: System.Data
        qualifiedName: System.Data
    isDefinition: true
    commentId: N:System.Data
  System.Data.IDbConnection:
    name:
      CSharp:
      - id: System.Data.IDbConnection
        name: IDbConnection
        nameWithType: IDbConnection
        qualifiedName: System.Data.IDbConnection
        isExternal: true
      VB:
      - id: System.Data.IDbConnection
        name: IDbConnection
        nameWithType: IDbConnection
        qualifiedName: System.Data.IDbConnection
        isExternal: true
    isDefinition: true
    parent: System.Data
    commentId: T:System.Data.IDbConnection
  AQuIP.Admin.Infrastructure.IUnitOfWork.Connection*:
    name:
      CSharp:
      - id: AQuIP.Admin.Infrastructure.IUnitOfWork.Connection*
        name: Connection
        nameWithType: IUnitOfWork.Connection
        qualifiedName: AQuIP.Admin.Infrastructure.IUnitOfWork.Connection
      VB:
      - id: AQuIP.Admin.Infrastructure.IUnitOfWork.Connection*
        name: Connection
        nameWithType: IUnitOfWork.Connection
        qualifiedName: AQuIP.Admin.Infrastructure.IUnitOfWork.Connection
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Infrastructure.IUnitOfWork.Connection
  System.Data.IDbTransaction:
    name:
      CSharp:
      - id: System.Data.IDbTransaction
        name: IDbTransaction
        nameWithType: IDbTransaction
        qualifiedName: System.Data.IDbTransaction
        isExternal: true
      VB:
      - id: System.Data.IDbTransaction
        name: IDbTransaction
        nameWithType: IDbTransaction
        qualifiedName: System.Data.IDbTransaction
        isExternal: true
    isDefinition: true
    parent: System.Data
    commentId: T:System.Data.IDbTransaction
  AQuIP.Admin.Infrastructure.IUnitOfWork.Transaction*:
    name:
      CSharp:
      - id: AQuIP.Admin.Infrastructure.IUnitOfWork.Transaction*
        name: Transaction
        nameWithType: IUnitOfWork.Transaction
        qualifiedName: AQuIP.Admin.Infrastructure.IUnitOfWork.Transaction
      VB:
      - id: AQuIP.Admin.Infrastructure.IUnitOfWork.Transaction*
        name: Transaction
        nameWithType: IUnitOfWork.Transaction
        qualifiedName: AQuIP.Admin.Infrastructure.IUnitOfWork.Transaction
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Infrastructure.IUnitOfWork.Transaction
  AQuIP.Admin.Infrastructure.IUnitOfWork.Begin*:
    name:
      CSharp:
      - id: AQuIP.Admin.Infrastructure.IUnitOfWork.Begin*
        name: Begin
        nameWithType: IUnitOfWork.Begin
        qualifiedName: AQuIP.Admin.Infrastructure.IUnitOfWork.Begin
      VB:
      - id: AQuIP.Admin.Infrastructure.IUnitOfWork.Begin*
        name: Begin
        nameWithType: IUnitOfWork.Begin
        qualifiedName: AQuIP.Admin.Infrastructure.IUnitOfWork.Begin
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Infrastructure.IUnitOfWork.Begin
  AQuIP.Admin.Infrastructure.IUnitOfWork.Commit*:
    name:
      CSharp:
      - id: AQuIP.Admin.Infrastructure.IUnitOfWork.Commit*
        name: Commit
        nameWithType: IUnitOfWork.Commit
        qualifiedName: AQuIP.Admin.Infrastructure.IUnitOfWork.Commit
      VB:
      - id: AQuIP.Admin.Infrastructure.IUnitOfWork.Commit*
        name: Commit
        nameWithType: IUnitOfWork.Commit
        qualifiedName: AQuIP.Admin.Infrastructure.IUnitOfWork.Commit
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Infrastructure.IUnitOfWork.Commit
  AQuIP.Admin.Infrastructure.IUnitOfWork.Rollback*:
    name:
      CSharp:
      - id: AQuIP.Admin.Infrastructure.IUnitOfWork.Rollback*
        name: Rollback
        nameWithType: IUnitOfWork.Rollback
        qualifiedName: AQuIP.Admin.Infrastructure.IUnitOfWork.Rollback
      VB:
      - id: AQuIP.Admin.Infrastructure.IUnitOfWork.Rollback*
        name: Rollback
        nameWithType: IUnitOfWork.Rollback
        qualifiedName: AQuIP.Admin.Infrastructure.IUnitOfWork.Rollback
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Infrastructure.IUnitOfWork.Rollback
  AQuIP.Admin.Infrastructure.UnitOfWork.AQuIP#Admin#Infrastructure#IUnitOfWork#Connection*:
    name:
      CSharp:
      - id: AQuIP.Admin.Infrastructure.UnitOfWork.AQuIP#Admin#Infrastructure#IUnitOfWork#Connection*
        name: IUnitOfWork.Connection
        nameWithType: UnitOfWork.IUnitOfWork.Connection
        qualifiedName: AQuIP.Admin.Infrastructure.UnitOfWork.AQuIP.Admin.Infrastructure.IUnitOfWork.Connection
      VB:
      - id: AQuIP.Admin.Infrastructure.UnitOfWork.AQuIP#Admin#Infrastructure#IUnitOfWork#Connection*
        name: AQuIP.Admin.Infrastructure.IUnitOfWork.Connection
        nameWithType: UnitOfWork.AQuIP.Admin.Infrastructure.IUnitOfWork.Connection
        qualifiedName: AQuIP.Admin.Infrastructure.UnitOfWork.AQuIP.Admin.Infrastructure.IUnitOfWork.Connection
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Infrastructure.UnitOfWork.AQuIP#Admin#Infrastructure#IUnitOfWork#Connection
  AQuIP.Admin.Infrastructure.IUnitOfWork.Connection:
    name:
      CSharp:
      - id: AQuIP.Admin.Infrastructure.IUnitOfWork.Connection
        name: Connection
        nameWithType: IUnitOfWork.Connection
        qualifiedName: AQuIP.Admin.Infrastructure.IUnitOfWork.Connection
      VB:
      - id: AQuIP.Admin.Infrastructure.IUnitOfWork.Connection
        name: Connection
        nameWithType: IUnitOfWork.Connection
        qualifiedName: AQuIP.Admin.Infrastructure.IUnitOfWork.Connection
    isDefinition: true
    parent: AQuIP.Admin.Infrastructure.IUnitOfWork
    commentId: P:AQuIP.Admin.Infrastructure.IUnitOfWork.Connection
  AQuIP.Admin.Infrastructure.UnitOfWork.Transaction*:
    name:
      CSharp:
      - id: AQuIP.Admin.Infrastructure.UnitOfWork.Transaction*
        name: Transaction
        nameWithType: UnitOfWork.Transaction
        qualifiedName: AQuIP.Admin.Infrastructure.UnitOfWork.Transaction
      VB:
      - id: AQuIP.Admin.Infrastructure.UnitOfWork.Transaction*
        name: Transaction
        nameWithType: UnitOfWork.Transaction
        qualifiedName: AQuIP.Admin.Infrastructure.UnitOfWork.Transaction
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Infrastructure.UnitOfWork.Transaction
  AQuIP.Admin.Infrastructure.IUnitOfWork.Transaction:
    name:
      CSharp:
      - id: AQuIP.Admin.Infrastructure.IUnitOfWork.Transaction
        name: Transaction
        nameWithType: IUnitOfWork.Transaction
        qualifiedName: AQuIP.Admin.Infrastructure.IUnitOfWork.Transaction
      VB:
      - id: AQuIP.Admin.Infrastructure.IUnitOfWork.Transaction
        name: Transaction
        nameWithType: IUnitOfWork.Transaction
        qualifiedName: AQuIP.Admin.Infrastructure.IUnitOfWork.Transaction
    isDefinition: true
    parent: AQuIP.Admin.Infrastructure.IUnitOfWork
    commentId: P:AQuIP.Admin.Infrastructure.IUnitOfWork.Transaction
  AQuIP.Admin.Infrastructure.UnitOfWork.Begin*:
    name:
      CSharp:
      - id: AQuIP.Admin.Infrastructure.UnitOfWork.Begin*
        name: Begin
        nameWithType: UnitOfWork.Begin
        qualifiedName: AQuIP.Admin.Infrastructure.UnitOfWork.Begin
      VB:
      - id: AQuIP.Admin.Infrastructure.UnitOfWork.Begin*
        name: Begin
        nameWithType: UnitOfWork.Begin
        qualifiedName: AQuIP.Admin.Infrastructure.UnitOfWork.Begin
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Infrastructure.UnitOfWork.Begin
  AQuIP.Admin.Infrastructure.IUnitOfWork.Begin:
    name:
      CSharp:
      - id: AQuIP.Admin.Infrastructure.IUnitOfWork.Begin
        name: Begin
        nameWithType: IUnitOfWork.Begin
        qualifiedName: AQuIP.Admin.Infrastructure.IUnitOfWork.Begin
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AQuIP.Admin.Infrastructure.IUnitOfWork.Begin
        name: Begin
        nameWithType: IUnitOfWork.Begin
        qualifiedName: AQuIP.Admin.Infrastructure.IUnitOfWork.Begin
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: AQuIP.Admin.Infrastructure.IUnitOfWork
    commentId: M:AQuIP.Admin.Infrastructure.IUnitOfWork.Begin
  AQuIP.Admin.Infrastructure.UnitOfWork.Commit*:
    name:
      CSharp:
      - id: AQuIP.Admin.Infrastructure.UnitOfWork.Commit*
        name: Commit
        nameWithType: UnitOfWork.Commit
        qualifiedName: AQuIP.Admin.Infrastructure.UnitOfWork.Commit
      VB:
      - id: AQuIP.Admin.Infrastructure.UnitOfWork.Commit*
        name: Commit
        nameWithType: UnitOfWork.Commit
        qualifiedName: AQuIP.Admin.Infrastructure.UnitOfWork.Commit
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Infrastructure.UnitOfWork.Commit
  AQuIP.Admin.Infrastructure.IUnitOfWork.Commit:
    name:
      CSharp:
      - id: AQuIP.Admin.Infrastructure.IUnitOfWork.Commit
        name: Commit
        nameWithType: IUnitOfWork.Commit
        qualifiedName: AQuIP.Admin.Infrastructure.IUnitOfWork.Commit
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AQuIP.Admin.Infrastructure.IUnitOfWork.Commit
        name: Commit
        nameWithType: IUnitOfWork.Commit
        qualifiedName: AQuIP.Admin.Infrastructure.IUnitOfWork.Commit
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: AQuIP.Admin.Infrastructure.IUnitOfWork
    commentId: M:AQuIP.Admin.Infrastructure.IUnitOfWork.Commit
  AQuIP.Admin.Infrastructure.UnitOfWork.Rollback*:
    name:
      CSharp:
      - id: AQuIP.Admin.Infrastructure.UnitOfWork.Rollback*
        name: Rollback
        nameWithType: UnitOfWork.Rollback
        qualifiedName: AQuIP.Admin.Infrastructure.UnitOfWork.Rollback
      VB:
      - id: AQuIP.Admin.Infrastructure.UnitOfWork.Rollback*
        name: Rollback
        nameWithType: UnitOfWork.Rollback
        qualifiedName: AQuIP.Admin.Infrastructure.UnitOfWork.Rollback
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Infrastructure.UnitOfWork.Rollback
  AQuIP.Admin.Infrastructure.IUnitOfWork.Rollback:
    name:
      CSharp:
      - id: AQuIP.Admin.Infrastructure.IUnitOfWork.Rollback
        name: Rollback
        nameWithType: IUnitOfWork.Rollback
        qualifiedName: AQuIP.Admin.Infrastructure.IUnitOfWork.Rollback
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: AQuIP.Admin.Infrastructure.IUnitOfWork.Rollback
        name: Rollback
        nameWithType: IUnitOfWork.Rollback
        qualifiedName: AQuIP.Admin.Infrastructure.IUnitOfWork.Rollback
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: AQuIP.Admin.Infrastructure.IUnitOfWork
    commentId: M:AQuIP.Admin.Infrastructure.IUnitOfWork.Rollback
  AQuIP.Admin.Infrastructure.UnitOfWork.Dispose*:
    name:
      CSharp:
      - id: AQuIP.Admin.Infrastructure.UnitOfWork.Dispose*
        name: Dispose
        nameWithType: UnitOfWork.Dispose
        qualifiedName: AQuIP.Admin.Infrastructure.UnitOfWork.Dispose
      VB:
      - id: AQuIP.Admin.Infrastructure.UnitOfWork.Dispose*
        name: Dispose
        nameWithType: UnitOfWork.Dispose
        qualifiedName: AQuIP.Admin.Infrastructure.UnitOfWork.Dispose
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Infrastructure.UnitOfWork.Dispose
  AQuIP.Admin.Models.BaseModel.#ctor*:
    name:
      CSharp:
      - id: AQuIP.Admin.Models.BaseModel.#ctor*
        name: BaseModel
        nameWithType: BaseModel.BaseModel
        qualifiedName: AQuIP.Admin.Models.BaseModel.BaseModel
      VB:
      - id: AQuIP.Admin.Models.BaseModel.#ctor*
        name: BaseModel
        nameWithType: BaseModel.BaseModel
        qualifiedName: AQuIP.Admin.Models.BaseModel.BaseModel
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Models.BaseModel.#ctor
  AQuIP.Admin.Models.BaseModel.LastChangedUser*:
    name:
      CSharp:
      - id: AQuIP.Admin.Models.BaseModel.LastChangedUser*
        name: LastChangedUser
        nameWithType: BaseModel.LastChangedUser
        qualifiedName: AQuIP.Admin.Models.BaseModel.LastChangedUser
      VB:
      - id: AQuIP.Admin.Models.BaseModel.LastChangedUser*
        name: LastChangedUser
        nameWithType: BaseModel.LastChangedUser
        qualifiedName: AQuIP.Admin.Models.BaseModel.LastChangedUser
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Models.BaseModel.LastChangedUser
  AQuIP.Admin.Models.BaseModel:
    name:
      CSharp:
      - id: AQuIP.Admin.Models.BaseModel
        name: BaseModel
        nameWithType: BaseModel
        qualifiedName: AQuIP.Admin.Models.BaseModel
      VB:
      - id: AQuIP.Admin.Models.BaseModel
        name: BaseModel
        nameWithType: BaseModel
        qualifiedName: AQuIP.Admin.Models.BaseModel
    isDefinition: true
    parent: AQuIP.Admin.Models
    commentId: T:AQuIP.Admin.Models.BaseModel
  AQuIP.Admin.Models.BaseModel.LastChangedUser:
    name:
      CSharp:
      - id: AQuIP.Admin.Models.BaseModel.LastChangedUser
        name: LastChangedUser
        nameWithType: BaseModel.LastChangedUser
        qualifiedName: AQuIP.Admin.Models.BaseModel.LastChangedUser
      VB:
      - id: AQuIP.Admin.Models.BaseModel.LastChangedUser
        name: LastChangedUser
        nameWithType: BaseModel.LastChangedUser
        qualifiedName: AQuIP.Admin.Models.BaseModel.LastChangedUser
    isDefinition: true
    parent: AQuIP.Admin.Models.BaseModel
    commentId: P:AQuIP.Admin.Models.BaseModel.LastChangedUser
  AQuIP.Admin.Models.UserAccount.UserId*:
    name:
      CSharp:
      - id: AQuIP.Admin.Models.UserAccount.UserId*
        name: UserId
        nameWithType: UserAccount.UserId
        qualifiedName: AQuIP.Admin.Models.UserAccount.UserId
      VB:
      - id: AQuIP.Admin.Models.UserAccount.UserId*
        name: UserId
        nameWithType: UserAccount.UserId
        qualifiedName: AQuIP.Admin.Models.UserAccount.UserId
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Models.UserAccount.UserId
  System.ComponentModel.DataAnnotations:
    name:
      CSharp:
      - name: System.ComponentModel.DataAnnotations
        nameWithType: System.ComponentModel.DataAnnotations
        qualifiedName: System.ComponentModel.DataAnnotations
        isExternal: true
      VB:
      - name: System.ComponentModel.DataAnnotations
        nameWithType: System.ComponentModel.DataAnnotations
        qualifiedName: System.ComponentModel.DataAnnotations
    isDefinition: true
    commentId: N:System.ComponentModel.DataAnnotations
  System.ComponentModel.DataAnnotations.KeyAttribute:
    name:
      CSharp:
      - id: System.ComponentModel.DataAnnotations.KeyAttribute
        name: KeyAttribute
        nameWithType: KeyAttribute
        qualifiedName: System.ComponentModel.DataAnnotations.KeyAttribute
        isExternal: true
      VB:
      - id: System.ComponentModel.DataAnnotations.KeyAttribute
        name: KeyAttribute
        nameWithType: KeyAttribute
        qualifiedName: System.ComponentModel.DataAnnotations.KeyAttribute
        isExternal: true
    isDefinition: true
    parent: System.ComponentModel.DataAnnotations
    commentId: T:System.ComponentModel.DataAnnotations.KeyAttribute
  System.ComponentModel.DataAnnotations.KeyAttribute.#ctor:
    name:
      CSharp:
      - id: System.ComponentModel.DataAnnotations.KeyAttribute.#ctor
        name: KeyAttribute
        nameWithType: KeyAttribute.KeyAttribute
        qualifiedName: System.ComponentModel.DataAnnotations.KeyAttribute.KeyAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ComponentModel.DataAnnotations.KeyAttribute.#ctor
        name: KeyAttribute
        nameWithType: KeyAttribute.KeyAttribute
        qualifiedName: System.ComponentModel.DataAnnotations.KeyAttribute.KeyAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ComponentModel.DataAnnotations.KeyAttribute
    commentId: M:System.ComponentModel.DataAnnotations.KeyAttribute.#ctor
  AQuIP.Admin.Models.UserAccount.FirstName*:
    name:
      CSharp:
      - id: AQuIP.Admin.Models.UserAccount.FirstName*
        name: FirstName
        nameWithType: UserAccount.FirstName
        qualifiedName: AQuIP.Admin.Models.UserAccount.FirstName
      VB:
      - id: AQuIP.Admin.Models.UserAccount.FirstName*
        name: FirstName
        nameWithType: UserAccount.FirstName
        qualifiedName: AQuIP.Admin.Models.UserAccount.FirstName
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Models.UserAccount.FirstName
  System.ComponentModel.DataAnnotations.RequiredAttribute:
    name:
      CSharp:
      - id: System.ComponentModel.DataAnnotations.RequiredAttribute
        name: RequiredAttribute
        nameWithType: RequiredAttribute
        qualifiedName: System.ComponentModel.DataAnnotations.RequiredAttribute
        isExternal: true
      VB:
      - id: System.ComponentModel.DataAnnotations.RequiredAttribute
        name: RequiredAttribute
        nameWithType: RequiredAttribute
        qualifiedName: System.ComponentModel.DataAnnotations.RequiredAttribute
        isExternal: true
    isDefinition: true
    parent: System.ComponentModel.DataAnnotations
    commentId: T:System.ComponentModel.DataAnnotations.RequiredAttribute
  System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor:
    name:
      CSharp:
      - id: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
        name: RequiredAttribute
        nameWithType: RequiredAttribute.RequiredAttribute
        qualifiedName: System.ComponentModel.DataAnnotations.RequiredAttribute.RequiredAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
        name: RequiredAttribute
        nameWithType: RequiredAttribute.RequiredAttribute
        qualifiedName: System.ComponentModel.DataAnnotations.RequiredAttribute.RequiredAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ComponentModel.DataAnnotations.RequiredAttribute
    commentId: M:System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
  System.ComponentModel.DataAnnotations.DisplayAttribute:
    name:
      CSharp:
      - id: System.ComponentModel.DataAnnotations.DisplayAttribute
        name: DisplayAttribute
        nameWithType: DisplayAttribute
        qualifiedName: System.ComponentModel.DataAnnotations.DisplayAttribute
        isExternal: true
      VB:
      - id: System.ComponentModel.DataAnnotations.DisplayAttribute
        name: DisplayAttribute
        nameWithType: DisplayAttribute
        qualifiedName: System.ComponentModel.DataAnnotations.DisplayAttribute
        isExternal: true
    isDefinition: true
    parent: System.ComponentModel.DataAnnotations
    commentId: T:System.ComponentModel.DataAnnotations.DisplayAttribute
  System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor:
    name:
      CSharp:
      - id: System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor
        name: DisplayAttribute
        nameWithType: DisplayAttribute.DisplayAttribute
        qualifiedName: System.ComponentModel.DataAnnotations.DisplayAttribute.DisplayAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor
        name: DisplayAttribute
        nameWithType: DisplayAttribute.DisplayAttribute
        qualifiedName: System.ComponentModel.DataAnnotations.DisplayAttribute.DisplayAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ComponentModel.DataAnnotations.DisplayAttribute
    commentId: M:System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor
  AQuIP.Admin.Models.UserAccount.LastName*:
    name:
      CSharp:
      - id: AQuIP.Admin.Models.UserAccount.LastName*
        name: LastName
        nameWithType: UserAccount.LastName
        qualifiedName: AQuIP.Admin.Models.UserAccount.LastName
      VB:
      - id: AQuIP.Admin.Models.UserAccount.LastName*
        name: LastName
        nameWithType: UserAccount.LastName
        qualifiedName: AQuIP.Admin.Models.UserAccount.LastName
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Models.UserAccount.LastName
  AQuIP.Admin.Models.UserAccount.UserName*:
    name:
      CSharp:
      - id: AQuIP.Admin.Models.UserAccount.UserName*
        name: UserName
        nameWithType: UserAccount.UserName
        qualifiedName: AQuIP.Admin.Models.UserAccount.UserName
      VB:
      - id: AQuIP.Admin.Models.UserAccount.UserName*
        name: UserName
        nameWithType: UserAccount.UserName
        qualifiedName: AQuIP.Admin.Models.UserAccount.UserName
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Models.UserAccount.UserName
  System.ComponentModel.DataAnnotations.EmailAddressAttribute:
    name:
      CSharp:
      - id: System.ComponentModel.DataAnnotations.EmailAddressAttribute
        name: EmailAddressAttribute
        nameWithType: EmailAddressAttribute
        qualifiedName: System.ComponentModel.DataAnnotations.EmailAddressAttribute
        isExternal: true
      VB:
      - id: System.ComponentModel.DataAnnotations.EmailAddressAttribute
        name: EmailAddressAttribute
        nameWithType: EmailAddressAttribute
        qualifiedName: System.ComponentModel.DataAnnotations.EmailAddressAttribute
        isExternal: true
    isDefinition: true
    parent: System.ComponentModel.DataAnnotations
    commentId: T:System.ComponentModel.DataAnnotations.EmailAddressAttribute
  System.ComponentModel.DataAnnotations.EmailAddressAttribute.#ctor:
    name:
      CSharp:
      - id: System.ComponentModel.DataAnnotations.EmailAddressAttribute.#ctor
        name: EmailAddressAttribute
        nameWithType: EmailAddressAttribute.EmailAddressAttribute
        qualifiedName: System.ComponentModel.DataAnnotations.EmailAddressAttribute.EmailAddressAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ComponentModel.DataAnnotations.EmailAddressAttribute.#ctor
        name: EmailAddressAttribute
        nameWithType: EmailAddressAttribute.EmailAddressAttribute
        qualifiedName: System.ComponentModel.DataAnnotations.EmailAddressAttribute.EmailAddressAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ComponentModel.DataAnnotations.EmailAddressAttribute
    commentId: M:System.ComponentModel.DataAnnotations.EmailAddressAttribute.#ctor
  AQuIP.Admin.Models.UserAccount.Password*:
    name:
      CSharp:
      - id: AQuIP.Admin.Models.UserAccount.Password*
        name: Password
        nameWithType: UserAccount.Password
        qualifiedName: AQuIP.Admin.Models.UserAccount.Password
      VB:
      - id: AQuIP.Admin.Models.UserAccount.Password*
        name: Password
        nameWithType: UserAccount.Password
        qualifiedName: AQuIP.Admin.Models.UserAccount.Password
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Models.UserAccount.Password
  System.ComponentModel.DataAnnotations.DataTypeAttribute:
    name:
      CSharp:
      - id: System.ComponentModel.DataAnnotations.DataTypeAttribute
        name: DataTypeAttribute
        nameWithType: DataTypeAttribute
        qualifiedName: System.ComponentModel.DataAnnotations.DataTypeAttribute
        isExternal: true
      VB:
      - id: System.ComponentModel.DataAnnotations.DataTypeAttribute
        name: DataTypeAttribute
        nameWithType: DataTypeAttribute
        qualifiedName: System.ComponentModel.DataAnnotations.DataTypeAttribute
        isExternal: true
    isDefinition: true
    parent: System.ComponentModel.DataAnnotations
    commentId: T:System.ComponentModel.DataAnnotations.DataTypeAttribute
  System.ComponentModel.DataAnnotations.DataTypeAttribute.#ctor(System.ComponentModel.DataAnnotations.DataType):
    name:
      CSharp:
      - id: System.ComponentModel.DataAnnotations.DataTypeAttribute.#ctor(System.ComponentModel.DataAnnotations.DataType)
        name: DataTypeAttribute
        nameWithType: DataTypeAttribute.DataTypeAttribute
        qualifiedName: System.ComponentModel.DataAnnotations.DataTypeAttribute.DataTypeAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.ComponentModel.DataAnnotations.DataType
        name: DataType
        nameWithType: DataType
        qualifiedName: System.ComponentModel.DataAnnotations.DataType
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ComponentModel.DataAnnotations.DataTypeAttribute.#ctor(System.ComponentModel.DataAnnotations.DataType)
        name: DataTypeAttribute
        nameWithType: DataTypeAttribute.DataTypeAttribute
        qualifiedName: System.ComponentModel.DataAnnotations.DataTypeAttribute.DataTypeAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.ComponentModel.DataAnnotations.DataType
        name: DataType
        nameWithType: DataType
        qualifiedName: System.ComponentModel.DataAnnotations.DataType
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ComponentModel.DataAnnotations.DataTypeAttribute
    commentId: M:System.ComponentModel.DataAnnotations.DataTypeAttribute.#ctor(System.ComponentModel.DataAnnotations.DataType)
  System.ComponentModel.DataAnnotations.DataType:
    name:
      CSharp:
      - id: System.ComponentModel.DataAnnotations.DataType
        name: DataType
        nameWithType: DataType
        qualifiedName: System.ComponentModel.DataAnnotations.DataType
        isExternal: true
      VB:
      - id: System.ComponentModel.DataAnnotations.DataType
        name: DataType
        nameWithType: DataType
        qualifiedName: System.ComponentModel.DataAnnotations.DataType
        isExternal: true
    isDefinition: true
    parent: System.ComponentModel.DataAnnotations
    commentId: T:System.ComponentModel.DataAnnotations.DataType
  AQuIP.Admin.Models.UserAccount.Phone*:
    name:
      CSharp:
      - id: AQuIP.Admin.Models.UserAccount.Phone*
        name: Phone
        nameWithType: UserAccount.Phone
        qualifiedName: AQuIP.Admin.Models.UserAccount.Phone
      VB:
      - id: AQuIP.Admin.Models.UserAccount.Phone*
        name: Phone
        nameWithType: UserAccount.Phone
        qualifiedName: AQuIP.Admin.Models.UserAccount.Phone
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Models.UserAccount.Phone
  System.ComponentModel.DataAnnotations.RegularExpressionAttribute:
    name:
      CSharp:
      - id: System.ComponentModel.DataAnnotations.RegularExpressionAttribute
        name: RegularExpressionAttribute
        nameWithType: RegularExpressionAttribute
        qualifiedName: System.ComponentModel.DataAnnotations.RegularExpressionAttribute
        isExternal: true
      VB:
      - id: System.ComponentModel.DataAnnotations.RegularExpressionAttribute
        name: RegularExpressionAttribute
        nameWithType: RegularExpressionAttribute
        qualifiedName: System.ComponentModel.DataAnnotations.RegularExpressionAttribute
        isExternal: true
    isDefinition: true
    parent: System.ComponentModel.DataAnnotations
    commentId: T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute
  System.ComponentModel.DataAnnotations.RegularExpressionAttribute.#ctor(System.String):
    name:
      CSharp:
      - id: System.ComponentModel.DataAnnotations.RegularExpressionAttribute.#ctor(System.String)
        name: RegularExpressionAttribute
        nameWithType: RegularExpressionAttribute.RegularExpressionAttribute
        qualifiedName: System.ComponentModel.DataAnnotations.RegularExpressionAttribute.RegularExpressionAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ComponentModel.DataAnnotations.RegularExpressionAttribute.#ctor(System.String)
        name: RegularExpressionAttribute
        nameWithType: RegularExpressionAttribute.RegularExpressionAttribute
        qualifiedName: System.ComponentModel.DataAnnotations.RegularExpressionAttribute.RegularExpressionAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ComponentModel.DataAnnotations.RegularExpressionAttribute
    commentId: M:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.#ctor(System.String)
  AQuIP.Admin.Models.UserAccount.RoleName*:
    name:
      CSharp:
      - id: AQuIP.Admin.Models.UserAccount.RoleName*
        name: RoleName
        nameWithType: UserAccount.RoleName
        qualifiedName: AQuIP.Admin.Models.UserAccount.RoleName
      VB:
      - id: AQuIP.Admin.Models.UserAccount.RoleName*
        name: RoleName
        nameWithType: UserAccount.RoleName
        qualifiedName: AQuIP.Admin.Models.UserAccount.RoleName
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Models.UserAccount.RoleName
  AQuIP.Admin.Models.UserAccount.Name*:
    name:
      CSharp:
      - id: AQuIP.Admin.Models.UserAccount.Name*
        name: Name
        nameWithType: UserAccount.Name
        qualifiedName: AQuIP.Admin.Models.UserAccount.Name
      VB:
      - id: AQuIP.Admin.Models.UserAccount.Name*
        name: Name
        nameWithType: UserAccount.Name
        qualifiedName: AQuIP.Admin.Models.UserAccount.Name
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Models.UserAccount.Name
  AQuIP.Admin.Models.CreateUserDTO.UserLogin*:
    name:
      CSharp:
      - id: AQuIP.Admin.Models.CreateUserDTO.UserLogin*
        name: UserLogin
        nameWithType: CreateUserDTO.UserLogin
        qualifiedName: AQuIP.Admin.Models.CreateUserDTO.UserLogin
      VB:
      - id: AQuIP.Admin.Models.CreateUserDTO.UserLogin*
        name: UserLogin
        nameWithType: CreateUserDTO.UserLogin
        qualifiedName: AQuIP.Admin.Models.CreateUserDTO.UserLogin
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Models.CreateUserDTO.UserLogin
  AQuIP.Admin.Models.CreateUserDTO.FirstName*:
    name:
      CSharp:
      - id: AQuIP.Admin.Models.CreateUserDTO.FirstName*
        name: FirstName
        nameWithType: CreateUserDTO.FirstName
        qualifiedName: AQuIP.Admin.Models.CreateUserDTO.FirstName
      VB:
      - id: AQuIP.Admin.Models.CreateUserDTO.FirstName*
        name: FirstName
        nameWithType: CreateUserDTO.FirstName
        qualifiedName: AQuIP.Admin.Models.CreateUserDTO.FirstName
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Models.CreateUserDTO.FirstName
  AQuIP.Admin.Models.CreateUserDTO.LastName*:
    name:
      CSharp:
      - id: AQuIP.Admin.Models.CreateUserDTO.LastName*
        name: LastName
        nameWithType: CreateUserDTO.LastName
        qualifiedName: AQuIP.Admin.Models.CreateUserDTO.LastName
      VB:
      - id: AQuIP.Admin.Models.CreateUserDTO.LastName*
        name: LastName
        nameWithType: CreateUserDTO.LastName
        qualifiedName: AQuIP.Admin.Models.CreateUserDTO.LastName
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Models.CreateUserDTO.LastName
  AQuIP.Admin.Models.CreateUserDTO.Password*:
    name:
      CSharp:
      - id: AQuIP.Admin.Models.CreateUserDTO.Password*
        name: Password
        nameWithType: CreateUserDTO.Password
        qualifiedName: AQuIP.Admin.Models.CreateUserDTO.Password
      VB:
      - id: AQuIP.Admin.Models.CreateUserDTO.Password*
        name: Password
        nameWithType: CreateUserDTO.Password
        qualifiedName: AQuIP.Admin.Models.CreateUserDTO.Password
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Models.CreateUserDTO.Password
  AQuIP.Admin.Models.CreateUserDTO.Phone*:
    name:
      CSharp:
      - id: AQuIP.Admin.Models.CreateUserDTO.Phone*
        name: Phone
        nameWithType: CreateUserDTO.Phone
        qualifiedName: AQuIP.Admin.Models.CreateUserDTO.Phone
      VB:
      - id: AQuIP.Admin.Models.CreateUserDTO.Phone*
        name: Phone
        nameWithType: CreateUserDTO.Phone
        qualifiedName: AQuIP.Admin.Models.CreateUserDTO.Phone
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Models.CreateUserDTO.Phone
  AQuIP.Admin.Models.CreateUserDTO.Role*:
    name:
      CSharp:
      - id: AQuIP.Admin.Models.CreateUserDTO.Role*
        name: Role
        nameWithType: CreateUserDTO.Role
        qualifiedName: AQuIP.Admin.Models.CreateUserDTO.Role
      VB:
      - id: AQuIP.Admin.Models.CreateUserDTO.Role*
        name: Role
        nameWithType: CreateUserDTO.Role
        qualifiedName: AQuIP.Admin.Models.CreateUserDTO.Role
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Models.CreateUserDTO.Role
  AQuIP.Admin.Models.CreateUserDTO.Organization*:
    name:
      CSharp:
      - id: AQuIP.Admin.Models.CreateUserDTO.Organization*
        name: Organization
        nameWithType: CreateUserDTO.Organization
        qualifiedName: AQuIP.Admin.Models.CreateUserDTO.Organization
      VB:
      - id: AQuIP.Admin.Models.CreateUserDTO.Organization*
        name: Organization
        nameWithType: CreateUserDTO.Organization
        qualifiedName: AQuIP.Admin.Models.CreateUserDTO.Organization
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Models.CreateUserDTO.Organization
  AQuIP.Admin.Models.CreateAssetViewerDTO.UserLogin*:
    name:
      CSharp:
      - id: AQuIP.Admin.Models.CreateAssetViewerDTO.UserLogin*
        name: UserLogin
        nameWithType: CreateAssetViewerDTO.UserLogin
        qualifiedName: AQuIP.Admin.Models.CreateAssetViewerDTO.UserLogin
      VB:
      - id: AQuIP.Admin.Models.CreateAssetViewerDTO.UserLogin*
        name: UserLogin
        nameWithType: CreateAssetViewerDTO.UserLogin
        qualifiedName: AQuIP.Admin.Models.CreateAssetViewerDTO.UserLogin
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Models.CreateAssetViewerDTO.UserLogin
  AQuIP.Admin.Models.CreateAssetViewerDTO.FirstName*:
    name:
      CSharp:
      - id: AQuIP.Admin.Models.CreateAssetViewerDTO.FirstName*
        name: FirstName
        nameWithType: CreateAssetViewerDTO.FirstName
        qualifiedName: AQuIP.Admin.Models.CreateAssetViewerDTO.FirstName
      VB:
      - id: AQuIP.Admin.Models.CreateAssetViewerDTO.FirstName*
        name: FirstName
        nameWithType: CreateAssetViewerDTO.FirstName
        qualifiedName: AQuIP.Admin.Models.CreateAssetViewerDTO.FirstName
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Models.CreateAssetViewerDTO.FirstName
  AQuIP.Admin.Models.CreateAssetViewerDTO.LastName*:
    name:
      CSharp:
      - id: AQuIP.Admin.Models.CreateAssetViewerDTO.LastName*
        name: LastName
        nameWithType: CreateAssetViewerDTO.LastName
        qualifiedName: AQuIP.Admin.Models.CreateAssetViewerDTO.LastName
      VB:
      - id: AQuIP.Admin.Models.CreateAssetViewerDTO.LastName*
        name: LastName
        nameWithType: CreateAssetViewerDTO.LastName
        qualifiedName: AQuIP.Admin.Models.CreateAssetViewerDTO.LastName
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Models.CreateAssetViewerDTO.LastName
  AQuIP.Admin.Models.CreateAssetViewerDTO.Password*:
    name:
      CSharp:
      - id: AQuIP.Admin.Models.CreateAssetViewerDTO.Password*
        name: Password
        nameWithType: CreateAssetViewerDTO.Password
        qualifiedName: AQuIP.Admin.Models.CreateAssetViewerDTO.Password
      VB:
      - id: AQuIP.Admin.Models.CreateAssetViewerDTO.Password*
        name: Password
        nameWithType: CreateAssetViewerDTO.Password
        qualifiedName: AQuIP.Admin.Models.CreateAssetViewerDTO.Password
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Models.CreateAssetViewerDTO.Password
  AQuIP.Admin.Models.CreateAssetViewerDTO.Phone*:
    name:
      CSharp:
      - id: AQuIP.Admin.Models.CreateAssetViewerDTO.Phone*
        name: Phone
        nameWithType: CreateAssetViewerDTO.Phone
        qualifiedName: AQuIP.Admin.Models.CreateAssetViewerDTO.Phone
      VB:
      - id: AQuIP.Admin.Models.CreateAssetViewerDTO.Phone*
        name: Phone
        nameWithType: CreateAssetViewerDTO.Phone
        qualifiedName: AQuIP.Admin.Models.CreateAssetViewerDTO.Phone
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Models.CreateAssetViewerDTO.Phone
  AQuIP.Admin.Models.LoginViewModel.LoginName*:
    name:
      CSharp:
      - id: AQuIP.Admin.Models.LoginViewModel.LoginName*
        name: LoginName
        nameWithType: LoginViewModel.LoginName
        qualifiedName: AQuIP.Admin.Models.LoginViewModel.LoginName
      VB:
      - id: AQuIP.Admin.Models.LoginViewModel.LoginName*
        name: LoginName
        nameWithType: LoginViewModel.LoginName
        qualifiedName: AQuIP.Admin.Models.LoginViewModel.LoginName
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Models.LoginViewModel.LoginName
  AQuIP.Admin.Models.LoginViewModel.Pwd*:
    name:
      CSharp:
      - id: AQuIP.Admin.Models.LoginViewModel.Pwd*
        name: Pwd
        nameWithType: LoginViewModel.Pwd
        qualifiedName: AQuIP.Admin.Models.LoginViewModel.Pwd
      VB:
      - id: AQuIP.Admin.Models.LoginViewModel.Pwd*
        name: Pwd
        nameWithType: LoginViewModel.Pwd
        qualifiedName: AQuIP.Admin.Models.LoginViewModel.Pwd
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Models.LoginViewModel.Pwd
  AQuIP.Admin.Models.CreateUserViewModel.UserLogin*:
    name:
      CSharp:
      - id: AQuIP.Admin.Models.CreateUserViewModel.UserLogin*
        name: UserLogin
        nameWithType: CreateUserViewModel.UserLogin
        qualifiedName: AQuIP.Admin.Models.CreateUserViewModel.UserLogin
      VB:
      - id: AQuIP.Admin.Models.CreateUserViewModel.UserLogin*
        name: UserLogin
        nameWithType: CreateUserViewModel.UserLogin
        qualifiedName: AQuIP.Admin.Models.CreateUserViewModel.UserLogin
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Models.CreateUserViewModel.UserLogin
  AQuIP.Admin.Models.CreateUserViewModel.FirstName*:
    name:
      CSharp:
      - id: AQuIP.Admin.Models.CreateUserViewModel.FirstName*
        name: FirstName
        nameWithType: CreateUserViewModel.FirstName
        qualifiedName: AQuIP.Admin.Models.CreateUserViewModel.FirstName
      VB:
      - id: AQuIP.Admin.Models.CreateUserViewModel.FirstName*
        name: FirstName
        nameWithType: CreateUserViewModel.FirstName
        qualifiedName: AQuIP.Admin.Models.CreateUserViewModel.FirstName
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Models.CreateUserViewModel.FirstName
  AQuIP.Admin.Models.CreateUserViewModel.LastName*:
    name:
      CSharp:
      - id: AQuIP.Admin.Models.CreateUserViewModel.LastName*
        name: LastName
        nameWithType: CreateUserViewModel.LastName
        qualifiedName: AQuIP.Admin.Models.CreateUserViewModel.LastName
      VB:
      - id: AQuIP.Admin.Models.CreateUserViewModel.LastName*
        name: LastName
        nameWithType: CreateUserViewModel.LastName
        qualifiedName: AQuIP.Admin.Models.CreateUserViewModel.LastName
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Models.CreateUserViewModel.LastName
  AQuIP.Admin.Models.CreateUserViewModel.Password*:
    name:
      CSharp:
      - id: AQuIP.Admin.Models.CreateUserViewModel.Password*
        name: Password
        nameWithType: CreateUserViewModel.Password
        qualifiedName: AQuIP.Admin.Models.CreateUserViewModel.Password
      VB:
      - id: AQuIP.Admin.Models.CreateUserViewModel.Password*
        name: Password
        nameWithType: CreateUserViewModel.Password
        qualifiedName: AQuIP.Admin.Models.CreateUserViewModel.Password
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Models.CreateUserViewModel.Password
  AQuIP.Admin.Models.CreateUserViewModel.Phone*:
    name:
      CSharp:
      - id: AQuIP.Admin.Models.CreateUserViewModel.Phone*
        name: Phone
        nameWithType: CreateUserViewModel.Phone
        qualifiedName: AQuIP.Admin.Models.CreateUserViewModel.Phone
      VB:
      - id: AQuIP.Admin.Models.CreateUserViewModel.Phone*
        name: Phone
        nameWithType: CreateUserViewModel.Phone
        qualifiedName: AQuIP.Admin.Models.CreateUserViewModel.Phone
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Models.CreateUserViewModel.Phone
  AQuIP.Admin.Models.CreateUserViewModel.Role*:
    name:
      CSharp:
      - id: AQuIP.Admin.Models.CreateUserViewModel.Role*
        name: Role
        nameWithType: CreateUserViewModel.Role
        qualifiedName: AQuIP.Admin.Models.CreateUserViewModel.Role
      VB:
      - id: AQuIP.Admin.Models.CreateUserViewModel.Role*
        name: Role
        nameWithType: CreateUserViewModel.Role
        qualifiedName: AQuIP.Admin.Models.CreateUserViewModel.Role
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Models.CreateUserViewModel.Role
  System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem}:
    name:
      CSharp:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Web.Mvc.SelectListItem
        name: SelectListItem
        nameWithType: SelectListItem
        qualifiedName: System.Web.Mvc.SelectListItem
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Web.Mvc.SelectListItem
        name: SelectListItem
        nameWithType: SelectListItem
        qualifiedName: System.Web.Mvc.SelectListItem
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.IEnumerable`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem}
  AQuIP.Admin.Models.CreateUserViewModel.Roles*:
    name:
      CSharp:
      - id: AQuIP.Admin.Models.CreateUserViewModel.Roles*
        name: Roles
        nameWithType: CreateUserViewModel.Roles
        qualifiedName: AQuIP.Admin.Models.CreateUserViewModel.Roles
      VB:
      - id: AQuIP.Admin.Models.CreateUserViewModel.Roles*
        name: Roles
        nameWithType: CreateUserViewModel.Roles
        qualifiedName: AQuIP.Admin.Models.CreateUserViewModel.Roles
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Models.CreateUserViewModel.Roles
  AQuIP.Admin.Models.CreateUserViewModel.Organization*:
    name:
      CSharp:
      - id: AQuIP.Admin.Models.CreateUserViewModel.Organization*
        name: Organization
        nameWithType: CreateUserViewModel.Organization
        qualifiedName: AQuIP.Admin.Models.CreateUserViewModel.Organization
      VB:
      - id: AQuIP.Admin.Models.CreateUserViewModel.Organization*
        name: Organization
        nameWithType: CreateUserViewModel.Organization
        qualifiedName: AQuIP.Admin.Models.CreateUserViewModel.Organization
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Models.CreateUserViewModel.Organization
  AQuIP.Admin.Models.ResetPasswordViewModel.UserName*:
    name:
      CSharp:
      - id: AQuIP.Admin.Models.ResetPasswordViewModel.UserName*
        name: UserName
        nameWithType: ResetPasswordViewModel.UserName
        qualifiedName: AQuIP.Admin.Models.ResetPasswordViewModel.UserName
      VB:
      - id: AQuIP.Admin.Models.ResetPasswordViewModel.UserName*
        name: UserName
        nameWithType: ResetPasswordViewModel.UserName
        qualifiedName: AQuIP.Admin.Models.ResetPasswordViewModel.UserName
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Models.ResetPasswordViewModel.UserName
  AQuIP.Admin.Models.ResetPasswordViewModel.Password*:
    name:
      CSharp:
      - id: AQuIP.Admin.Models.ResetPasswordViewModel.Password*
        name: Password
        nameWithType: ResetPasswordViewModel.Password
        qualifiedName: AQuIP.Admin.Models.ResetPasswordViewModel.Password
      VB:
      - id: AQuIP.Admin.Models.ResetPasswordViewModel.Password*
        name: Password
        nameWithType: ResetPasswordViewModel.Password
        qualifiedName: AQuIP.Admin.Models.ResetPasswordViewModel.Password
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Models.ResetPasswordViewModel.Password
  System.ComponentModel.DataAnnotations.StringLengthAttribute:
    name:
      CSharp:
      - id: System.ComponentModel.DataAnnotations.StringLengthAttribute
        name: StringLengthAttribute
        nameWithType: StringLengthAttribute
        qualifiedName: System.ComponentModel.DataAnnotations.StringLengthAttribute
        isExternal: true
      VB:
      - id: System.ComponentModel.DataAnnotations.StringLengthAttribute
        name: StringLengthAttribute
        nameWithType: StringLengthAttribute
        qualifiedName: System.ComponentModel.DataAnnotations.StringLengthAttribute
        isExternal: true
    isDefinition: true
    parent: System.ComponentModel.DataAnnotations
    commentId: T:System.ComponentModel.DataAnnotations.StringLengthAttribute
  System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32):
    name:
      CSharp:
      - id: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
        name: StringLengthAttribute
        nameWithType: StringLengthAttribute.StringLengthAttribute
        qualifiedName: System.ComponentModel.DataAnnotations.StringLengthAttribute.StringLengthAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
        name: StringLengthAttribute
        nameWithType: StringLengthAttribute.StringLengthAttribute
        qualifiedName: System.ComponentModel.DataAnnotations.StringLengthAttribute.StringLengthAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ComponentModel.DataAnnotations.StringLengthAttribute
    commentId: M:System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
  AQuIP.Admin.Models.ResetPasswordViewModel.ConfirmPassword*:
    name:
      CSharp:
      - id: AQuIP.Admin.Models.ResetPasswordViewModel.ConfirmPassword*
        name: ConfirmPassword
        nameWithType: ResetPasswordViewModel.ConfirmPassword
        qualifiedName: AQuIP.Admin.Models.ResetPasswordViewModel.ConfirmPassword
      VB:
      - id: AQuIP.Admin.Models.ResetPasswordViewModel.ConfirmPassword*
        name: ConfirmPassword
        nameWithType: ResetPasswordViewModel.ConfirmPassword
        qualifiedName: AQuIP.Admin.Models.ResetPasswordViewModel.ConfirmPassword
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Models.ResetPasswordViewModel.ConfirmPassword
  System.ComponentModel.DataAnnotations.CompareAttribute:
    name:
      CSharp:
      - id: System.ComponentModel.DataAnnotations.CompareAttribute
        name: CompareAttribute
        nameWithType: CompareAttribute
        qualifiedName: System.ComponentModel.DataAnnotations.CompareAttribute
        isExternal: true
      VB:
      - id: System.ComponentModel.DataAnnotations.CompareAttribute
        name: CompareAttribute
        nameWithType: CompareAttribute
        qualifiedName: System.ComponentModel.DataAnnotations.CompareAttribute
        isExternal: true
    isDefinition: true
    parent: System.ComponentModel.DataAnnotations
    commentId: T:System.ComponentModel.DataAnnotations.CompareAttribute
  System.ComponentModel.DataAnnotations.CompareAttribute.#ctor(System.String):
    name:
      CSharp:
      - id: System.ComponentModel.DataAnnotations.CompareAttribute.#ctor(System.String)
        name: CompareAttribute
        nameWithType: CompareAttribute.CompareAttribute
        qualifiedName: System.ComponentModel.DataAnnotations.CompareAttribute.CompareAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ComponentModel.DataAnnotations.CompareAttribute.#ctor(System.String)
        name: CompareAttribute
        nameWithType: CompareAttribute.CompareAttribute
        qualifiedName: System.ComponentModel.DataAnnotations.CompareAttribute.CompareAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ComponentModel.DataAnnotations.CompareAttribute
    commentId: M:System.ComponentModel.DataAnnotations.CompareAttribute.#ctor(System.String)
  AQuIP.Admin.Models.ActivateDeactivateViewModel.Username*:
    name:
      CSharp:
      - id: AQuIP.Admin.Models.ActivateDeactivateViewModel.Username*
        name: Username
        nameWithType: ActivateDeactivateViewModel.Username
        qualifiedName: AQuIP.Admin.Models.ActivateDeactivateViewModel.Username
      VB:
      - id: AQuIP.Admin.Models.ActivateDeactivateViewModel.Username*
        name: Username
        nameWithType: ActivateDeactivateViewModel.Username
        qualifiedName: AQuIP.Admin.Models.ActivateDeactivateViewModel.Username
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Models.ActivateDeactivateViewModel.Username
  AQuIP.Admin.Models.ActivateDeactivateViewModel.Status*:
    name:
      CSharp:
      - id: AQuIP.Admin.Models.ActivateDeactivateViewModel.Status*
        name: Status
        nameWithType: ActivateDeactivateViewModel.Status
        qualifiedName: AQuIP.Admin.Models.ActivateDeactivateViewModel.Status
      VB:
      - id: AQuIP.Admin.Models.ActivateDeactivateViewModel.Status*
        name: Status
        nameWithType: ActivateDeactivateViewModel.Status
        qualifiedName: AQuIP.Admin.Models.ActivateDeactivateViewModel.Status
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Models.ActivateDeactivateViewModel.Status
  AQuIP.Admin.Services.AccountService.GetUserForLogin*:
    name:
      CSharp:
      - id: AQuIP.Admin.Services.AccountService.GetUserForLogin*
        name: GetUserForLogin
        nameWithType: AccountService.GetUserForLogin
        qualifiedName: AQuIP.Admin.Services.AccountService.GetUserForLogin
      VB:
      - id: AQuIP.Admin.Services.AccountService.GetUserForLogin*
        name: GetUserForLogin
        nameWithType: AccountService.GetUserForLogin
        qualifiedName: AQuIP.Admin.Services.AccountService.GetUserForLogin
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Services.AccountService.GetUserForLogin
  AQuIP.Admin.Services.AccountService:
    name:
      CSharp:
      - id: AQuIP.Admin.Services.AccountService
        name: AccountService
        nameWithType: AccountService
        qualifiedName: AQuIP.Admin.Services.AccountService
      VB:
      - id: AQuIP.Admin.Services.AccountService
        name: AccountService
        nameWithType: AccountService
        qualifiedName: AQuIP.Admin.Services.AccountService
    isDefinition: true
    commentId: T:AQuIP.Admin.Services.AccountService
  AQuIP.Admin.Services.UserService.FindAll*:
    name:
      CSharp:
      - id: AQuIP.Admin.Services.UserService.FindAll*
        name: FindAll
        nameWithType: UserService.FindAll
        qualifiedName: AQuIP.Admin.Services.UserService.FindAll
      VB:
      - id: AQuIP.Admin.Services.UserService.FindAll*
        name: FindAll
        nameWithType: UserService.FindAll
        qualifiedName: AQuIP.Admin.Services.UserService.FindAll
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Services.UserService.FindAll
  AQuIP.Admin.Services.UserService.FindByID*:
    name:
      CSharp:
      - id: AQuIP.Admin.Services.UserService.FindByID*
        name: FindByID
        nameWithType: UserService.FindByID
        qualifiedName: AQuIP.Admin.Services.UserService.FindByID
      VB:
      - id: AQuIP.Admin.Services.UserService.FindByID*
        name: FindByID
        nameWithType: UserService.FindByID
        qualifiedName: AQuIP.Admin.Services.UserService.FindByID
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Services.UserService.FindByID
  AQuIP.Admin.Services.UserService.Add*:
    name:
      CSharp:
      - id: AQuIP.Admin.Services.UserService.Add*
        name: Add
        nameWithType: UserService.Add
        qualifiedName: AQuIP.Admin.Services.UserService.Add
      VB:
      - id: AQuIP.Admin.Services.UserService.Add*
        name: Add
        nameWithType: UserService.Add
        qualifiedName: AQuIP.Admin.Services.UserService.Add
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Services.UserService.Add
  AQuIP.Admin.Services.UserService.UpdateUser*:
    name:
      CSharp:
      - id: AQuIP.Admin.Services.UserService.UpdateUser*
        name: UpdateUser
        nameWithType: UserService.UpdateUser
        qualifiedName: AQuIP.Admin.Services.UserService.UpdateUser
      VB:
      - id: AQuIP.Admin.Services.UserService.UpdateUser*
        name: UpdateUser
        nameWithType: UserService.UpdateUser
        qualifiedName: AQuIP.Admin.Services.UserService.UpdateUser
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Services.UserService.UpdateUser
  AQuIP.Admin.Services.UserService.ResetPassword*:
    name:
      CSharp:
      - id: AQuIP.Admin.Services.UserService.ResetPassword*
        name: ResetPassword
        nameWithType: UserService.ResetPassword
        qualifiedName: AQuIP.Admin.Services.UserService.ResetPassword
      VB:
      - id: AQuIP.Admin.Services.UserService.ResetPassword*
        name: ResetPassword
        nameWithType: UserService.ResetPassword
        qualifiedName: AQuIP.Admin.Services.UserService.ResetPassword
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Services.UserService.ResetPassword
  AQuIP.Admin.Services.UserService.ActivateUser*:
    name:
      CSharp:
      - id: AQuIP.Admin.Services.UserService.ActivateUser*
        name: ActivateUser
        nameWithType: UserService.ActivateUser
        qualifiedName: AQuIP.Admin.Services.UserService.ActivateUser
      VB:
      - id: AQuIP.Admin.Services.UserService.ActivateUser*
        name: ActivateUser
        nameWithType: UserService.ActivateUser
        qualifiedName: AQuIP.Admin.Services.UserService.ActivateUser
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Services.UserService.ActivateUser
  AQuIP.Admin.Services.UserService.DeactivateUser*:
    name:
      CSharp:
      - id: AQuIP.Admin.Services.UserService.DeactivateUser*
        name: DeactivateUser
        nameWithType: UserService.DeactivateUser
        qualifiedName: AQuIP.Admin.Services.UserService.DeactivateUser
      VB:
      - id: AQuIP.Admin.Services.UserService.DeactivateUser*
        name: DeactivateUser
        nameWithType: UserService.DeactivateUser
        qualifiedName: AQuIP.Admin.Services.UserService.DeactivateUser
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Services.UserService.DeactivateUser
  AQuIP.Admin.Services.UserService.DeleteUser*:
    name:
      CSharp:
      - id: AQuIP.Admin.Services.UserService.DeleteUser*
        name: DeleteUser
        nameWithType: UserService.DeleteUser
        qualifiedName: AQuIP.Admin.Services.UserService.DeleteUser
      VB:
      - id: AQuIP.Admin.Services.UserService.DeleteUser*
        name: DeleteUser
        nameWithType: UserService.DeleteUser
        qualifiedName: AQuIP.Admin.Services.UserService.DeleteUser
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Services.UserService.DeleteUser
  AQuIP.Admin.Services.UserService.GetRoles*:
    name:
      CSharp:
      - id: AQuIP.Admin.Services.UserService.GetRoles*
        name: GetRoles
        nameWithType: UserService.GetRoles
        qualifiedName: AQuIP.Admin.Services.UserService.GetRoles
      VB:
      - id: AQuIP.Admin.Services.UserService.GetRoles*
        name: GetRoles
        nameWithType: UserService.GetRoles
        qualifiedName: AQuIP.Admin.Services.UserService.GetRoles
    isDefinition: true
    commentId: Overload:AQuIP.Admin.Services.UserService.GetRoles
  AQuIP.Admin.Services.UserService:
    name:
      CSharp:
      - id: AQuIP.Admin.Services.UserService
        name: UserService
        nameWithType: UserService
        qualifiedName: AQuIP.Admin.Services.UserService
      VB:
      - id: AQuIP.Admin.Services.UserService
        name: UserService
        nameWithType: UserService
        qualifiedName: AQuIP.Admin.Services.UserService
    isDefinition: true
    commentId: T:AQuIP.Admin.Services.UserService
  AQuIP.Admin.Services:
    name:
      CSharp:
      - name: AQuIP.Admin.Services
        nameWithType: AQuIP.Admin.Services
        qualifiedName: AQuIP.Admin.Services
      VB:
      - name: AQuIP.Admin.Services
        nameWithType: AQuIP.Admin.Services
        qualifiedName: AQuIP.Admin.Services
    isDefinition: true
    commentId: N:AQuIP.Admin.Services
