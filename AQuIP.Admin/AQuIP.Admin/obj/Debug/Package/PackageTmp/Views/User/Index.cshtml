@using PagedList;
@using PagedList.Mvc;
@model PagedList.IPagedList<AQuIP.Admin.Models.UserAccount>
@using AQuIP.Admin.Helpers;


@{
    ViewBag.Title = "Index";

    string currentFilter = ViewBag.CurrentFilter;
    string currentSort = ViewBag.CurrentSort;
    if (string.IsNullOrEmpty(currentSort))
    {
        currentSort = "date_desc";
    }
}

<head>
    <style>
                /* Clear button styles
        --------------------------------------------- */

        ::-ms-clear {
          display: none;
        }

        .form-control-clear {
          z-index: 10;
          pointer-events: auto;
          cursor: pointer;
        }
    </style>
</head>

<h2 style="text-align:center;">TRI AQuIP Administration Tool</h2>
<h3>Users</h3>


<div class="row">
    <div class="col-md-9">
        @Html.ActionLink("Create User", "Create", null, new {@class = "btn btn-primary" })
    </div>

    <form>
    <div class="input-group col-md-3">
            <div class="form-group has-feedback has-clear">
                <input type="text" name="searchQuery" value="@ViewBag.searchQuery" class="search-text form-control" placeholder="Find by name..." />
                <span class="form-control-clear glyphicon glyphicon-remove form-control-feedback hidden"></span>
            </div>
                <span class="input-group-btn">
                    <button type="submit" class="btn btn-default">Search</button>
                </span>
    </div>
        </form> 
</div>
<br />

<div class="wrapper">   
   
    <div class="table-responsive">
    <table class="table  table-striped table-hover table-bordered">
        <tr>
            <th>
                @Html.ActionLink("First Name", "Index", Request.QueryString.ToRouteValueDictionary("sortOrder", (string)ViewBag.FirstNameSortParam))
                @Html.SortIdentifier(currentSort, "firstName")
            </th>
            <th>
                @Html.ActionLink("Last Name", "Index", Request.QueryString.ToRouteValueDictionary("sortOrder", (string)ViewBag.LastNameSortParam))
                @Html.SortIdentifier(currentSort, "lastName")
            </th>
            <th>
                @Html.ActionLink("User Name", "Index", Request.QueryString.ToRouteValueDictionary("sortOrder", (string)ViewBag.UserNameSortParam))
                @Html.SortIdentifier(currentSort, "userName")
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().RoleName)
            </th>
            <th>
                @Html.ActionLink("Organization", "Index", Request.QueryString.ToRouteValueDictionary("sortOrder", (string)ViewBag.OrganizationSortParam))
                @Html.SortIdentifier(currentSort, "organization")
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UserName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RoleName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>

                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.UserId }) |
                    @Html.ActionLink("Details", "Details", new { id = item.UserId }) |
                    @Html.ActionLink("Delete", "Delete", new { id=item.UserId})
                </td>
            </tr>
        }

    </table>
        </div>
    @if (Model.PageCount > 1)
    { 
        <div class ="pager">
            @Html.PagedListPager(Model, page => Url.Action("Index", new
                    {
                        page,
                        sortOrder = ViewBag.currentSort,
                        searchQuery = ViewBag.searchQuery
                    }))
    
            Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
            
        </div>
    }
    </div>

@section scripts {

    <script type="text/javascript">

    $(document).ready(function(){

        $('.has-clear input[type="text"]').on('input propertychange', function () {
            var $this = $(this);
            var visible = Boolean($this.val());
            $this.siblings('.form-control-clear').toggleClass('hidden', !visible);
        }).trigger('propertychange');

        $('.form-control-clear').click(function () {
            $(this).siblings('input[type="text"]').val('')
              .trigger('propertychange').focus();
        });

    });

    </script>

}
